[{"D:\\MYCART\\client\\src\\index.js":"1","D:\\MYCART\\client\\src\\App.js":"2","D:\\MYCART\\client\\src\\reportWebVitals.js":"3","D:\\MYCART\\client\\src\\pages\\auth\\Register.js":"4","D:\\MYCART\\client\\src\\pages\\auth\\Login.js":"5","D:\\MYCART\\client\\src\\pages\\Home.js":"6","D:\\MYCART\\client\\src\\components\\nav\\Header.js":"7","D:\\MYCART\\client\\src\\firebase.js":"8","D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js":"9","D:\\MYCART\\client\\src\\reducers\\index.js":"10","D:\\MYCART\\client\\src\\reducers\\userReducer.js":"11","D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js":"12","D:\\MYCART\\client\\src\\functions\\auth.js":"13","D:\\MYCART\\client\\src\\pages\\user\\History.js":"14","D:\\MYCART\\client\\src\\components\\routes\\UserRoute.js":"15","D:\\MYCART\\client\\src\\components\\routes\\LoadingToRedirect.js":"16","D:\\MYCART\\client\\src\\components\\nav\\UserNav.js":"17","D:\\MYCART\\client\\src\\pages\\user\\Password.js":"18","D:\\MYCART\\client\\src\\pages\\user\\Wishlist.js":"19","D:\\MYCART\\client\\src\\components\\routes\\AdminRoute.js":"20","D:\\MYCART\\client\\src\\pages\\admin\\AdminDashboard.js":"21","D:\\MYCART\\client\\src\\components\\nav\\AdminNav.js":"22","D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"23","D:\\MYCART\\client\\src\\functions\\category.js":"24","D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"25","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubCreate.js":"26","D:\\MYCART\\client\\src\\functions\\sub.js":"27","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubUpdate.js":"28","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductCreate.js":"29","D:\\MYCART\\client\\src\\functions\\product.js":"30","D:\\MYCART\\client\\src\\components\\forms\\FileUpload.js":"31","D:\\MYCART\\client\\src\\components\\cards\\AdminProductCard.js":"32","D:\\MYCART\\client\\src\\pages\\admin\\product\\AllProducts.js":"33","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"34","D:\\MYCART\\client\\src\\components\\cards\\ProductCard.js":"35","D:\\MYCART\\client\\src\\components\\cards\\LoadingCard.js":"36","D:\\MYCART\\client\\src\\components\\home\\NewArrivals.js":"37","D:\\MYCART\\client\\src\\components\\home\\BestSellers.js":"38","D:\\MYCART\\client\\src\\pages\\Product.js":"39","D:\\MYCART\\client\\src\\components\\cards\\SingleProduct.js":"40","D:\\MYCART\\client\\src\\components\\cards\\ProductListItems.js":"41","D:\\MYCART\\client\\src\\components\\nav\\Footer.js":"42","D:\\MYCART\\client\\src\\components\\modal\\ProductModal.js":"43","D:\\MYCART\\client\\src\\components\\listgroups\\ProductListGroup.js":"44","D:\\MYCART\\client\\src\\components\\forms\\ProductRatingForm.js":"45"},{"size":866,"mtime":1613157742812,"results":"46","hashOfConfig":"47"},{"size":3726,"mtime":1613157144329,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"47"},{"size":1614,"mtime":1611395444015,"results":"50","hashOfConfig":"47"},{"size":4652,"mtime":1611395519345,"results":"51","hashOfConfig":"47"},{"size":2269,"mtime":1612965654509,"results":"52","hashOfConfig":"47"},{"size":2715,"mtime":1612974818616,"results":"53","hashOfConfig":"47"},{"size":657,"mtime":1610870674636,"results":"54","hashOfConfig":"47"},{"size":2944,"mtime":1611395383395,"results":"55","hashOfConfig":"47"},{"size":183,"mtime":1610878874297,"results":"56","hashOfConfig":"47"},{"size":230,"mtime":1611395310360,"results":"57","hashOfConfig":"47"},{"size":1900,"mtime":1611395959407,"results":"58","hashOfConfig":"47"},{"size":777,"mtime":1611389932848,"results":"59","hashOfConfig":"47"},{"size":375,"mtime":1611308268524,"results":"60","hashOfConfig":"47"},{"size":1294,"mtime":1611395154165,"results":"61","hashOfConfig":"47"},{"size":650,"mtime":1611396030286,"results":"62","hashOfConfig":"47"},{"size":665,"mtime":1611308448462,"results":"63","hashOfConfig":"47"},{"size":1745,"mtime":1611342329789,"results":"64","hashOfConfig":"47"},{"size":385,"mtime":1611314696333,"results":"65","hashOfConfig":"47"},{"size":1907,"mtime":1611395037645,"results":"66","hashOfConfig":"47"},{"size":417,"mtime":1612466099246,"results":"67","hashOfConfig":"47"},{"size":1274,"mtime":1611648645625,"results":"68","hashOfConfig":"47"},{"size":5093,"mtime":1611666436860,"results":"69","hashOfConfig":"47"},{"size":1108,"mtime":1612013583273,"results":"70","hashOfConfig":"47"},{"size":2221,"mtime":1611654454818,"results":"71","hashOfConfig":"47"},{"size":5846,"mtime":1611932904167,"results":"72","hashOfConfig":"47"},{"size":950,"mtime":1611774157575,"results":"73","hashOfConfig":"47"},{"size":3360,"mtime":1611776478722,"results":"74","hashOfConfig":"47"},{"size":7499,"mtime":1612779409402,"results":"75","hashOfConfig":"47"},{"size":1080,"mtime":1613064859256,"results":"76","hashOfConfig":"47"},{"size":3138,"mtime":1612208323763,"results":"77","hashOfConfig":"47"},{"size":1083,"mtime":1612782844876,"results":"78","hashOfConfig":"47"},{"size":2203,"mtime":1612599931097,"results":"79","hashOfConfig":"47"},{"size":8787,"mtime":1612775163961,"results":"80","hashOfConfig":"47"},{"size":1084,"mtime":1612988017061,"results":"81","hashOfConfig":"47"},{"size":446,"mtime":1612886349708,"results":"82","hashOfConfig":"47"},{"size":1847,"mtime":1612980597585,"results":"83","hashOfConfig":"47"},{"size":1883,"mtime":1612980616715,"results":"84","hashOfConfig":"47"},{"size":1060,"mtime":1613158642579,"results":"85","hashOfConfig":"47"},{"size":2319,"mtime":1613242582562,"results":"86","hashOfConfig":"47"},{"size":2394,"mtime":1613232866216,"results":"87","hashOfConfig":"47"},{"size":1500,"mtime":1613157927207,"results":"88","hashOfConfig":"47"},{"size":7237,"mtime":1613233150252,"results":"89","hashOfConfig":"47"},{"size":2830,"mtime":1613229922772,"results":"90","hashOfConfig":"47"},{"size":1116,"mtime":1613235088719,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"bnamjh",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MYCART\\client\\src\\index.js",[],["193","194"],"D:\\MYCART\\client\\src\\App.js",[],"D:\\MYCART\\client\\src\\reportWebVitals.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\Register.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\Login.js",[],"D:\\MYCART\\client\\src\\pages\\Home.js",[],"D:\\MYCART\\client\\src\\components\\nav\\Header.js",[],"D:\\MYCART\\client\\src\\firebase.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js",[],"D:\\MYCART\\client\\src\\reducers\\index.js",[],"D:\\MYCART\\client\\src\\reducers\\userReducer.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js",[],"D:\\MYCART\\client\\src\\functions\\auth.js",[],"D:\\MYCART\\client\\src\\pages\\user\\History.js",[],"D:\\MYCART\\client\\src\\components\\routes\\UserRoute.js",[],"D:\\MYCART\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"D:\\MYCART\\client\\src\\components\\nav\\UserNav.js",[],"D:\\MYCART\\client\\src\\pages\\user\\Password.js",[],"D:\\MYCART\\client\\src\\pages\\user\\Wishlist.js",[],"D:\\MYCART\\client\\src\\components\\routes\\AdminRoute.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\AdminDashboard.js",["195","196"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/nav/AdminNav'\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className='col'>Admin dashboard</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n","D:\\MYCART\\client\\src\\components\\nav\\AdminNav.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"D:\\MYCART\\client\\src\\functions\\category.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["197"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getCategory, updateCategory } from '../../../functions/category'\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n  //States\r\n  const [name, setName] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Use effect\r\n  useEffect(() => {\r\n    loadCategory()\r\n  }, [])\r\n\r\n  //Load all the categories on component mount\r\n  const loadCategory = () => {\r\n    getCategory(match.params.slug).then((res) => {\r\n      setName(res.data.name)\r\n    })\r\n  }\r\n\r\n  //Submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    updateCategory(user.token, name, match.params.slug)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setName('')\r\n        toast.success(`${res.data.name} is updated successfully`)\r\n        history.push('/admin/category') // redirect back to the category page after upating\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        toast.error(err.response.data)\r\n      })\r\n  }\r\n\r\n  //Category form\r\n  const categoryForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Name</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          autoFocus\r\n          required\r\n        />\r\n        <br />\r\n        <button className='btn btn-outline-primary' disabled={name.length < 2}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>loading...</h4>\r\n          ) : (\r\n            <h4>Update Category</h4>\r\n          )}\r\n          {categoryForm()}\r\n\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryUpdate\r\n","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubCreate.js",[],"D:\\MYCART\\client\\src\\functions\\sub.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubUpdate.js",["198"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getSub, updateSub } from '../../../functions/sub'\r\nimport { getCategories } from '../../../functions/category'\r\n\r\nconst SubUpdate = ({ match, history }) => {\r\n  //States\r\n  const [name, setName] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [categories, setCategories] = useState([])\r\n  const [parent, setParent] = useState('')\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Use effect to load all the categories in the categories collection and display them in a list\r\n  useEffect(() => {\r\n    loadCategories()\r\n    loadSub()\r\n  }, [])\r\n\r\n  //Load all the categories on component mount\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setCategories(res.data)\r\n    })\r\n  }\r\n\r\n  //Load all sub categories on component mount\r\n  const loadSub = () => {\r\n    getSub(match.params.slug).then((res) => {\r\n      setName(res.data.name)\r\n      setParent(res.data.parent)\r\n    })\r\n  }\r\n\r\n  //Submit, creating a new category\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    updateSub({ authToken: user.token, name, parent, slug: match.params.slug })\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setName('')\r\n        toast.success(`${res.data.name} is updated successfully`)\r\n        history.push('/admin/sub')\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        toast.error(err.response.data)\r\n      })\r\n  }\r\n\r\n  //Category form\r\n  const categoryForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Name</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          autoFocus\r\n          required\r\n        />\r\n        <br />\r\n        <button className='btn btn-outline-primary' disabled={name.length < 2}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>loading...</h4>\r\n          ) : (\r\n            <h4>Update Sub Category</h4>\r\n          )}\r\n          <div className='form-group'>\r\n            <label>Parent Category </label>\r\n            <select\r\n              name='category'\r\n              className='form-control'\r\n              onChange={(e) => setParent(e.target.value)}\r\n              required\r\n            >\r\n              <option value='please select'>Please Select</option>\r\n              {categories.length > 0 &&\r\n                categories.map((data) => (\r\n                  <option\r\n                    value={data._id}\r\n                    key={data._id}\r\n                    selected={data._id === parent}\r\n                  >\r\n                    {data.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          {categoryForm()}\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubUpdate\r\n","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductCreate.js",["199","200","201","202","203","204"],"import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { createProduct } from '../../../functions/product'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst { Option } = Select\r\nconst productState = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  categories: [],\r\n  category: '',\r\n  subs: [],\r\n  shipping: '',\r\n  quantity: '',\r\n  images: [],\r\n  colors: ['Black', 'brown', 'silver', 'white', 'blue'], //options to show in dropdown so that admin can pick one\r\n  brands: ['Samsung', 'Microsoft', 'Apple', 'Lenovo', 'ASUS', 'DELL','HP'], //options to show in dropdown so that admin can pick one\r\n  color: '',\r\n  brand: '',\r\n}\r\n\r\nconst ProductCreate = () => {\r\n  //redux logged in user\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Storing the subcategories\r\n  const [subOptions, setSubOptions] = useState([])\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  //get all the categories\r\n  useEffect(() => {\r\n    loadCategories()\r\n  }, [])\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setValues({ ...values, categories: res.data })\r\n    })\r\n  }\r\n\r\n  const [values, setValues] = useState(productState)\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    categories,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  //when admin selects a category a api request is made to backend to fetch all the sub-categories for that category\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault()\r\n    // console.log('Clciked Category', e.target.value)\r\n    setValues({ ...values, subs: [], [e.target.name]: e.target.value })\r\n    getCategorySubs(e.target.value)\r\n      .then((res) => {\r\n        console.log('the data', res.data)\r\n        setSubOptions(res.data)\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n\r\n  //Submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        window.alert(`${res.data.title} is created successfully`)\r\n        window.location.reload()\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          <h4>Product create</h4>\r\n          <hr />\r\n          <div className='p-3'>\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label>Title</label>\r\n              <input\r\n                type='text'\r\n                name='title'\r\n                className='form-control'\r\n                value={title}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Description</label>\r\n              <input\r\n                type='text'\r\n                name='description'\r\n                className='form-control'\r\n                value={description}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Price</label>\r\n              <input\r\n                type='Number'\r\n                name='price'\r\n                className='form-control'\r\n                value={price}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Shipping</label>\r\n              <select\r\n                name='shipping'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                <option value='No'>No</option>\r\n                <option value='Yes'>Yes</option>\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Quantity</label>\r\n              <input\r\n                type='Number'\r\n                name='quantity'\r\n                className='form-control'\r\n                value={quantity}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Colors</label>\r\n              <select\r\n                name='color'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                {colors.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Brand</label>\r\n              <select\r\n                name='brand'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                {brands.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Category </label>\r\n              <select\r\n                name='category'\r\n                className='form-control'\r\n                onChange={handleCategoryChange}\r\n                required\r\n              >\r\n                <option>Please select category</option>\r\n                {categories.length > 0 &&\r\n                  categories.map((data) => (\r\n                    <option value={data._id} key={data._id}>\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            {/* Multiple subcategories select element */}\r\n\r\n            {subOptions.length > 0 && (\r\n              <div>\r\n                <label>Sub Categories </label>\r\n                <Select\r\n                  mode='multiple'\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Please select the subcategories'\r\n                  name='subs'\r\n                  value={subs}\r\n                  onChange={(value) => setValues({ ...values, subs: value })}\r\n                >\r\n                  {subOptions.length > 0 &&\r\n                    subOptions.map((s) => (\r\n                      <Option key={s._id} value={s._id}>\r\n                        {s.name}\r\n                      </Option>\r\n                    ))}\r\n                </Select>\r\n              </div>\r\n            )}\r\n            <br />\r\n            <button type='submit' className='btn btn-outline-info'>\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductCreate\r\n","D:\\MYCART\\client\\src\\functions\\product.js",[],"D:\\MYCART\\client\\src\\components\\forms\\FileUpload.js",[],"D:\\MYCART\\client\\src\\components\\cards\\AdminProductCard.js",["205"],"import React from 'react'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport laptop from '../../images/laptop.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'antd'\r\nconst { Meta } = Card\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n  const { title, description, images, slug } = product\r\n\r\n  return (\r\n    <Card\r\n      cover={\r\n        <img\r\n          src={images && images.length ? images[0].url : laptop}\r\n          style={{ height: '150px', objectFit: 'cover' }}\r\n          className='p-1'\r\n        />\r\n      }\r\n      actions={[\r\n        <Link to={`/admin/product/${slug}`}>\r\n          {' '}\r\n          <EditOutlined key='edit' className='text-primary' />\r\n        </Link>,\r\n        <DeleteOutlined\r\n          className='text-danger'\r\n          onClick={() => {\r\n            handleRemove(slug)\r\n          }}\r\n        />,\r\n      ]}\r\n    >\r\n      <Meta\r\n        title={title}\r\n        description={`${description && description.substring(0, 70)} . . .`}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AdminProductCard\r\n","D:\\MYCART\\client\\src\\pages\\admin\\product\\AllProducts.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["206","207","208","209"],"import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { getProduct, updateProduct } from '../../../functions/product'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst { Option } = Select\r\n\r\nconst productState = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  category: '',\r\n  subs: [],\r\n  shipping: '',\r\n  quantity: '',\r\n  images: [],\r\n  colors: ['Black', 'brown', 'silver', 'white', 'blue'], //options to show in dropdown so that admin can pick one\r\n  brands: ['Samsung', 'Microsoft', 'Apple', 'Lenovo', 'ASUS', 'DELL'], //options to show in dropdown so that admin can pick one\r\n  color: '',\r\n  brand: '',\r\n}\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n  //redux logged in user\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const { slug } = match.params\r\n  const [values, setValues] = useState(productState)\r\n  //Storing the subcategories\r\n  const [subOptions, setSubOptions] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [arrayOfSubs, setArrayOfSubs] = useState([])\r\n  const [selectedCategory, setSelectedCategory] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values\r\n\r\n  useEffect(() => {\r\n    loadProduct()\r\n    loadCategories()\r\n  }, [])\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setCategories(res.data)\r\n    })\r\n  }\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug)\r\n      .then((res) => {\r\n        setValues({ ...values, ...res.data })\r\n\r\n        //get all the subcategories for the fetchd product\r\n        getCategorySubs(res.data.category._id)\r\n          .then((p) => {\r\n            // console.log('the data', p.data)\r\n            setSubOptions(p.data) // on first load show all subs for the product to update\r\n          })\r\n          .catch((err) => {\r\n            console.log('the data', err)\r\n          })\r\n\r\n        let arr = []\r\n        res.data.subs.map((s) => {\r\n          arr.push(s._id)\r\n        })\r\n        console.log('Here')\r\n        console.log('ARR', arr)\r\n        setArrayOfSubs(arr) //required for ant design select to work\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  //when admin selects a category a api request is made to backend to fetch all the sub-categories for that category\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault()\r\n    // console.log('Clciked Category', e.target.value)\r\n\r\n    setValues({ ...values, subs: [] })\r\n\r\n    setSelectedCategory(e.target.value)\r\n\r\n    getCategorySubs(e.target.value)\r\n      .then((res) => {\r\n        // console.log('changed category', res.data)\r\n        setSubOptions(res.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n    //if user clicks back to the original category then show its sub categories as default\r\n    if (values.category._id === e.target.value) {\r\n      loadProduct()\r\n    }\r\n\r\n    //clear all sub categories if new category is chosen\r\n    setArrayOfSubs([])\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    values.subs = arrayOfSubs\r\n    values.category = selectedCategory ? selectedCategory : values.category\r\n    updateProduct(slug, user.token, values)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        toast.success(`${res.data.title} is updated is successfully`)\r\n        history.push('/admin/dashboard')\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n        toast.error(err.response.data.err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          <h4>Product Update</h4>\r\n          {/* {JSON.stringify(values)} */}\r\n          <hr />\r\n          <div className='p-3'>\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label>Title</label>\r\n              <input\r\n                type='text'\r\n                name='title'\r\n                className='form-control'\r\n                value={title}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Description</label>\r\n              <input\r\n                type='text'\r\n                name='description'\r\n                className='form-control'\r\n                value={description}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Price</label>\r\n              <input\r\n                type='Number'\r\n                name='price'\r\n                className='form-control'\r\n                value={price}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Shipping</label>\r\n              <select\r\n                name='shipping'\r\n                className='form-control'\r\n                value={shipping === 'Yes' ? 'Yes' : 'No'}\r\n                onChange={handleChange}\r\n              >\r\n                <option value='No'>No</option>\r\n                <option value='Yes'>Yes</option>\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Quantity</label>\r\n              <input\r\n                type='Number'\r\n                name='quantity'\r\n                className='form-control'\r\n                value={quantity}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Colors</label>\r\n              <select\r\n                name='color'\r\n                className='form-control'\r\n                value={color}\r\n                onChange={handleChange}\r\n              >\r\n                {colors.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Brand</label>\r\n              <select\r\n                name='brand'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n                value={brand}\r\n              >\r\n                {brands.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Category </label>\r\n              <select\r\n                name='category'\r\n                className='form-control'\r\n                onChange={handleCategoryChange}\r\n                required\r\n                value={selectedCategory ? selectedCategory : category._id}\r\n              >\r\n                {categories.length > 0 &&\r\n                  categories.map((data) => (\r\n                    <option value={data._id} key={data._id}>\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label>Sub Categories </label>\r\n              <Select\r\n                mode='multiple'\r\n                style={{ width: '100%' }}\r\n                placeholder='Please select the subcategories'\r\n                name='subs'\r\n                value={arrayOfSubs}\r\n                onChange={(value) => setArrayOfSubs(value)}\r\n              >\r\n                {subOptions.length > 0 &&\r\n                  subOptions.map((s) => (\r\n                    <Option key={s._id} value={s._id}>\r\n                      {s.name}\r\n                    </Option>\r\n                  ))}\r\n              </Select>\r\n            </div>\r\n\r\n            <br />\r\n            <button type='submit' className='btn btn-outline-info'>\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductUpdate\r\n","D:\\MYCART\\client\\src\\components\\cards\\ProductCard.js",["210"],"import React from 'react'\r\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport laptop from '../../images/laptop.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'antd'\r\nconst { Meta } = Card\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const { title, description, images, slug } = product\r\n  return (\r\n    <Card\r\n      cover={\r\n        <img\r\n          src={images && images.length ? images[0].url : laptop}\r\n          style={{ height: '150px', objectFit: 'cover' }}\r\n          className='p-1'\r\n        />\r\n      }\r\n      actions={[\r\n        <Link to={`/product/${slug}`}>\r\n          {' '}\r\n          <EyeOutlined key='edit' className='text-primary' />\r\n          <br />\r\n          View Product\r\n        </Link>,\r\n        <>\r\n          {' '}\r\n          <ShoppingCartOutlined className='text-success' /> <br />\r\n          Add to cart\r\n        </>,\r\n      ]}\r\n    >\r\n      <Meta\r\n        title={title}\r\n        description={`${description && description.substring(0, 70)} . . .`}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ProductCard\r\n","D:\\MYCART\\client\\src\\components\\cards\\LoadingCard.js",[],"D:\\MYCART\\client\\src\\components\\home\\NewArrivals.js",["211"],"import React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport LoadingCard from '../../components/cards/LoadingCard'\r\nimport { Pagination } from 'antd'\r\nconst NewArrivals = () => {\r\n  //States\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [productsCount, setProductsCount] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    loadAllProducts()\r\n  }, [page])\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => {\r\n      setProductsCount(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true)\r\n    //sort,order,limit\r\n    getProducts('createdAt', 'desc', page)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setProducts(res.data)\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4 className='p-2 mt-2 mb-4 ml-2 display-4 text-primary '>\r\n        New Arrivals\r\n      </h4>\r\n      {loading ? (\r\n        <LoadingCard count={3} />\r\n      ) : (\r\n        <div className='container'>\r\n          <div className='row'>\r\n            {products.map((product) => (\r\n              <div className='col-md-4 p-3' key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className='row'>\r\n        <nav className='col-md-4 offset-md-4 text-center pt-4 p-3'>\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            total={(productsCount / 3) * 10}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewArrivals\r\n","D:\\MYCART\\client\\src\\components\\home\\BestSellers.js",["212"],"import React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport LoadingCard from '../../components/cards/LoadingCard'\r\nimport { Pagination } from 'antd'\r\nconst BestSellers = () => {\r\n  //States\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [productsCount, setProductsCount] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    loadAllProducts()\r\n  }, [page])\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => {\r\n      setProductsCount(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true)\r\n    //sort,order,limit\r\n    console.log('Inside best seller')\r\n    getProducts('sold', 'desc', page)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setProducts(res.data)\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4 className='p-2 mt-2 mb-4 ml-2 display-4 text-primary '>\r\n        Best Sellers\r\n      </h4>\r\n      {loading ? (\r\n        <LoadingCard count={3} />\r\n      ) : (\r\n        <div className='container'>\r\n          <div className='row'>\r\n            {products.map((product) => (\r\n              <div className='col-md-4 p-3' key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className='row'>\r\n        <nav className='col-md-4 offset-md-4 text-center pt-2 p-3'>\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            total={(productsCount / 3) * 10}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BestSellers\r\n","D:\\MYCART\\client\\src\\pages\\Product.js",["213"],"import React, { useEffect, useState } from 'react'\r\nimport { getProduct } from '../functions/product'\r\nimport SingleProduct from '../components/cards/SingleProduct'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ match }) => {\r\n  const [product, setProduct] = useState({})\r\n  const { slug } = match.params\r\n\r\n  useEffect(() => {\r\n    loadSingleProduct()\r\n  }, [slug])\r\n\r\n  const loadSingleProduct = () => {\r\n    getProduct(slug).then((res) => {\r\n      setProduct(res.data)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/' className='button'>\r\n        {' '}\r\n        <button type='button' className='btn btn-dark mt-3 ml-2'>\r\n          Go back\r\n        </button>\r\n      </Link>\r\n      <div className='container-fluid'>\r\n        <div className='row pt-2'>\r\n          <SingleProduct product={product} />\r\n        </div>\r\n      </div>\r\n      <div className='row p-3'>\r\n        <div className='col ml-2 pt-5 pb-5'>\r\n          <hr />\r\n          <h4>Related Products</h4>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","D:\\MYCART\\client\\src\\components\\cards\\SingleProduct.js",["214","215"],"D:\\MYCART\\client\\src\\components\\cards\\ProductListItems.js",[],"D:\\MYCART\\client\\src\\components\\nav\\Footer.js",[],"D:\\MYCART\\client\\src\\components\\modal\\ProductModal.js",[],"D:\\MYCART\\client\\src\\components\\listgroups\\ProductListGroup.js",[],"D:\\MYCART\\client\\src\\components\\forms\\ProductRatingForm.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"224","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":18,"column":6,"nodeType":"227","endLine":18,"endColumn":8,"suggestions":"228"},{"ruleId":"225","severity":1,"message":"229","line":21,"column":6,"nodeType":"227","endLine":21,"endColumn":8,"suggestions":"230"},{"ruleId":"225","severity":1,"message":"231","line":39,"column":6,"nodeType":"227","endLine":39,"endColumn":8,"suggestions":"232"},{"ruleId":"220","severity":1,"message":"233","line":54,"column":5,"nodeType":"222","messageId":"223","endLine":54,"endColumn":13},{"ruleId":"220","severity":1,"message":"234","line":56,"column":5,"nodeType":"222","messageId":"223","endLine":56,"endColumn":13},{"ruleId":"220","severity":1,"message":"235","line":58,"column":5,"nodeType":"222","messageId":"223","endLine":58,"endColumn":11},{"ruleId":"220","severity":1,"message":"236","line":61,"column":5,"nodeType":"222","messageId":"223","endLine":61,"endColumn":10},{"ruleId":"220","severity":1,"message":"237","line":62,"column":5,"nodeType":"222","messageId":"223","endLine":62,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":14,"column":9,"nodeType":"240","endLine":18,"endColumn":11},{"ruleId":"220","severity":1,"message":"241","line":44,"column":5,"nodeType":"222","messageId":"223","endLine":44,"endColumn":9},{"ruleId":"220","severity":1,"message":"235","line":47,"column":5,"nodeType":"222","messageId":"223","endLine":47,"endColumn":11},{"ruleId":"225","severity":1,"message":"242","line":57,"column":6,"nodeType":"227","endLine":57,"endColumn":8,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":81,"column":31,"nodeType":"246","messageId":"247","endLine":81,"endColumn":33},{"ruleId":"238","severity":1,"message":"239","line":13,"column":9,"nodeType":"240","endLine":17,"endColumn":11},{"ruleId":"225","severity":1,"message":"248","line":15,"column":6,"nodeType":"227","endLine":15,"endColumn":12,"suggestions":"249"},{"ruleId":"225","severity":1,"message":"248","line":15,"column":6,"nodeType":"227","endLine":15,"endColumn":12,"suggestions":"250"},{"ruleId":"225","severity":1,"message":"251","line":12,"column":6,"nodeType":"227","endLine":12,"endColumn":12,"suggestions":"252"},{"ruleId":"220","severity":1,"message":"253","line":16,"column":39,"nodeType":"222","messageId":"223","endLine":16,"endColumn":42},{"ruleId":"238","severity":1,"message":"239","line":22,"column":45,"nodeType":"240","endLine":22,"endColumn":67},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.","ArrayExpression",["256"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["258"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'subs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["259"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["260"],["261"],"React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["262"],"'_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"271","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [loadCategory]",{"range":"276","text":"277"},"Update the dependencies array to be: [loadSub]",{"range":"278","text":"279"},"Update the dependencies array to be: [loadCategories]",{"range":"280","text":"281"},"Update the dependencies array to be: [loadProduct]",{"range":"282","text":"283"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"284","text":"285"},{"range":"286","text":"285"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"287","text":"288"},[547,549],"[loadCategory]",[782,784],"[loadSub]",[1235,1237],"[loadCategories]",[1675,1677],"[loadProduct]",[569,575],"[loadAllProducts, page]",[569,575],[375,381],"[loadSingleProduct, slug]"]