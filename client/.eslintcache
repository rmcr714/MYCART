[{"D:\\MYCART\\client\\src\\index.js":"1","D:\\MYCART\\client\\src\\App.js":"2","D:\\MYCART\\client\\src\\reportWebVitals.js":"3","D:\\MYCART\\client\\src\\pages\\auth\\Register.js":"4","D:\\MYCART\\client\\src\\pages\\auth\\Login.js":"5","D:\\MYCART\\client\\src\\pages\\Home.js":"6","D:\\MYCART\\client\\src\\components\\nav\\Header.js":"7","D:\\MYCART\\client\\src\\firebase.js":"8","D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js":"9","D:\\MYCART\\client\\src\\reducers\\index.js":"10","D:\\MYCART\\client\\src\\reducers\\userReducer.js":"11","D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js":"12","D:\\MYCART\\client\\src\\functions\\auth.js":"13","D:\\MYCART\\client\\src\\pages\\user\\History.js":"14","D:\\MYCART\\client\\src\\components\\routes\\UserRoute.js":"15","D:\\MYCART\\client\\src\\components\\routes\\LoadingToRedirect.js":"16","D:\\MYCART\\client\\src\\components\\nav\\UserNav.js":"17","D:\\MYCART\\client\\src\\pages\\user\\Password.js":"18","D:\\MYCART\\client\\src\\pages\\user\\Wishlist.js":"19","D:\\MYCART\\client\\src\\components\\routes\\AdminRoute.js":"20","D:\\MYCART\\client\\src\\pages\\admin\\AdminDashboard.js":"21","D:\\MYCART\\client\\src\\components\\nav\\AdminNav.js":"22","D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"23","D:\\MYCART\\client\\src\\functions\\category.js":"24","D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"25","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubCreate.js":"26","D:\\MYCART\\client\\src\\functions\\sub.js":"27","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubUpdate.js":"28","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductCreate.js":"29","D:\\MYCART\\client\\src\\functions\\product.js":"30","D:\\MYCART\\client\\src\\components\\forms\\FileUpload.js":"31","D:\\MYCART\\client\\src\\components\\cards\\AdminProductCard.js":"32","D:\\MYCART\\client\\src\\pages\\admin\\product\\AllProducts.js":"33","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"34","D:\\MYCART\\client\\src\\components\\cards\\ProductCard.js":"35","D:\\MYCART\\client\\src\\components\\cards\\LoadingCard.js":"36","D:\\MYCART\\client\\src\\components\\home\\NewArrivals.js":"37","D:\\MYCART\\client\\src\\components\\home\\BestSellers.js":"38","D:\\MYCART\\client\\src\\pages\\Product.js":"39","D:\\MYCART\\client\\src\\components\\cards\\SingleProduct.js":"40","D:\\MYCART\\client\\src\\components\\cards\\ProductListItems.js":"41","D:\\MYCART\\client\\src\\components\\nav\\Footer.js":"42","D:\\MYCART\\client\\src\\components\\modal\\ProductModal.js":"43","D:\\MYCART\\client\\src\\components\\listgroups\\ProductListGroup.js":"44","D:\\MYCART\\client\\src\\components\\forms\\ProductRatingForm.js":"45","D:\\MYCART\\client\\src\\components\\modal\\RatingModal.js":"46","D:\\MYCART\\client\\src\\components\\cards\\ReviewsCard.js":"47","D:\\MYCART\\client\\src\\components\\cards\\Rating.js":"48","D:\\MYCART\\client\\src\\functions\\RatingsAverage.js":"49","D:\\MYCART\\client\\src\\components\\MenuCategory\\CategoryList.js":"50","D:\\MYCART\\client\\src\\pages\\category\\CategoryHome.js":"51","D:\\MYCART\\client\\src\\components\\MenuSub\\SubList.js":"52","D:\\MYCART\\client\\src\\pages\\sub\\SubHome.js":"53","D:\\MYCART\\client\\src\\reducers\\searchReducer.js":"54","D:\\MYCART\\client\\src\\components\\forms\\Search.js":"55","D:\\MYCART\\client\\src\\pages\\Shop.js":"56","D:\\MYCART\\client\\src\\components\\forms\\Star.js":"57","D:\\MYCART\\client\\src\\reducers\\cartReducer.js":"58","D:\\MYCART\\client\\src\\pages\\Cart.js":"59","D:\\MYCART\\client\\src\\reducers\\drawerReducer.js":"60","D:\\MYCART\\client\\src\\components\\drawer\\SideDrawer.js":"61","D:\\MYCART\\client\\src\\pages\\Checkout.js":"62","D:\\MYCART\\client\\src\\functions\\user.js":"63","D:\\MYCART\\client\\src\\components\\cards\\Address.js":"64","D:\\MYCART\\client\\src\\reducers\\addressReducer.js":"65","D:\\MYCART\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js":"66","D:\\MYCART\\client\\src\\functions\\coupon.js":"67"},{"size":866,"mtime":1615722643000,"results":"68","hashOfConfig":"69"},{"size":4450,"mtime":1619010123501,"results":"70","hashOfConfig":"69"},{"size":362,"mtime":1615722643000,"results":"71","hashOfConfig":"69"},{"size":1614,"mtime":1615722657000,"results":"72","hashOfConfig":"69"},{"size":4924,"mtime":1615722657000,"results":"73","hashOfConfig":"69"},{"size":2694,"mtime":1616780979000,"results":"74","hashOfConfig":"69"},{"size":3374,"mtime":1617367299606,"results":"75","hashOfConfig":"69"},{"size":657,"mtime":1615722642000,"results":"76","hashOfConfig":"69"},{"size":2944,"mtime":1615722658000,"results":"77","hashOfConfig":"69"},{"size":483,"mtime":1617727198565,"results":"78","hashOfConfig":"69"},{"size":230,"mtime":1615722648000,"results":"79","hashOfConfig":"69"},{"size":1900,"mtime":1615722657000,"results":"80","hashOfConfig":"69"},{"size":777,"mtime":1615722647000,"results":"81","hashOfConfig":"69"},{"size":380,"mtime":1615722657000,"results":"82","hashOfConfig":"69"},{"size":1294,"mtime":1615722658000,"results":"83","hashOfConfig":"69"},{"size":650,"mtime":1615722658000,"results":"84","hashOfConfig":"69"},{"size":665,"mtime":1615722659000,"results":"85","hashOfConfig":"69"},{"size":1750,"mtime":1615722657000,"results":"86","hashOfConfig":"69"},{"size":390,"mtime":1615722657000,"results":"87","hashOfConfig":"69"},{"size":1907,"mtime":1615722658000,"results":"88","hashOfConfig":"69"},{"size":422,"mtime":1615722658000,"results":"89","hashOfConfig":"69"},{"size":1274,"mtime":1615722658000,"results":"90","hashOfConfig":"69"},{"size":5098,"mtime":1615722661000,"results":"91","hashOfConfig":"69"},{"size":1108,"mtime":1615722647000,"results":"92","hashOfConfig":"69"},{"size":2246,"mtime":1615722661000,"results":"93","hashOfConfig":"69"},{"size":5851,"mtime":1615722661000,"results":"94","hashOfConfig":"69"},{"size":950,"mtime":1615722647000,"results":"95","hashOfConfig":"69"},{"size":3380,"mtime":1615722661000,"results":"96","hashOfConfig":"69"},{"size":7561,"mtime":1615722661000,"results":"97","hashOfConfig":"69"},{"size":1674,"mtime":1615722647000,"results":"98","hashOfConfig":"69"},{"size":3138,"mtime":1615722660000,"results":"99","hashOfConfig":"69"},{"size":1083,"mtime":1615722659000,"results":"100","hashOfConfig":"69"},{"size":2208,"mtime":1615722661000,"results":"101","hashOfConfig":"69"},{"size":8787,"mtime":1615722661000,"results":"102","hashOfConfig":"69"},{"size":3110,"mtime":1617384238980,"results":"103","hashOfConfig":"69"},{"size":446,"mtime":1615722659000,"results":"104","hashOfConfig":"69"},{"size":1847,"mtime":1616781475236,"results":"105","hashOfConfig":"69"},{"size":1883,"mtime":1615722659000,"results":"106","hashOfConfig":"69"},{"size":2997,"mtime":1617369531138,"results":"107","hashOfConfig":"69"},{"size":5294,"mtime":1617384265292,"results":"108","hashOfConfig":"69"},{"size":2410,"mtime":1617369383013,"results":"109","hashOfConfig":"69"},{"size":1500,"mtime":1615722659000,"results":"110","hashOfConfig":"69"},{"size":7237,"mtime":1615722658000,"results":"111","hashOfConfig":"69"},{"size":2830,"mtime":1615722659000,"results":"112","hashOfConfig":"69"},{"size":735,"mtime":1613244934428,"results":"113","hashOfConfig":"114"},{"size":1289,"mtime":1615722658000,"results":"115","hashOfConfig":"69"},{"size":1979,"mtime":1615722660000,"results":"116","hashOfConfig":"69"},{"size":1747,"mtime":1615722660000,"results":"117","hashOfConfig":"69"},{"size":804,"mtime":1615722647000,"results":"118","hashOfConfig":"69"},{"size":2506,"mtime":1615722659000,"results":"119","hashOfConfig":"69"},{"size":1881,"mtime":1615722657000,"results":"120","hashOfConfig":"69"},{"size":1351,"mtime":1615722658000,"results":"121","hashOfConfig":"69"},{"size":1863,"mtime":1615722657000,"results":"122","hashOfConfig":"69"},{"size":206,"mtime":1615722648000,"results":"123","hashOfConfig":"69"},{"size":1089,"mtime":1617367291258,"results":"124","hashOfConfig":"69"},{"size":10051,"mtime":1616706186308,"results":"125","hashOfConfig":"69"},{"size":997,"mtime":1616354721696,"results":"126","hashOfConfig":"69"},{"size":422,"mtime":1617129507418,"results":"127","hashOfConfig":"69"},{"size":13569,"mtime":1617532131262,"results":"128","hashOfConfig":"69"},{"size":183,"mtime":1617381670191,"results":"129","hashOfConfig":"69"},{"size":1688,"mtime":1617390586969,"results":"130","hashOfConfig":"69"},{"size":15783,"mtime":1617731723298,"results":"131","hashOfConfig":"69"},{"size":735,"mtime":1617724144942,"results":"132","hashOfConfig":"69"},{"size":2024,"mtime":1617730893235,"results":"133","hashOfConfig":"69"},{"size":190,"mtime":1617731713673,"results":"134","hashOfConfig":"69"},{"size":4566,"mtime":1619090811593,"results":"135","hashOfConfig":"69"},{"size":446,"mtime":1619090240104,"results":"136","hashOfConfig":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"8jb2of",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"139"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"139"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"139"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"139"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"139"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"139"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"139"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"139"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"139"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"139"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"139"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"139"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"139"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bnamjh",{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"139"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"139"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"139"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"139"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"139"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"139"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"139"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"139"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"139"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MYCART\\client\\src\\index.js",[],["294","295"],"D:\\MYCART\\client\\src\\App.js",[],"D:\\MYCART\\client\\src\\reportWebVitals.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\Register.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\Login.js",[],"D:\\MYCART\\client\\src\\pages\\Home.js",[],"D:\\MYCART\\client\\src\\components\\nav\\Header.js",["296"],"import React, { useState } from 'react'\r\nimport { Menu, Badge } from 'antd'\r\nimport Search from '../forms/Search'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  AppstoreFilled,\r\n  SettingOutlined,\r\n  UserOutlined,\r\n  UserAddOutlined,\r\n  LogoutOutlined,\r\n  ShoppingOutlined,\r\n} from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nimport { useHistory } from 'react-router-dom' //we cant use history here as this components doesnt have a path/route in App.js\r\n\r\nconst { SubMenu, Item } = Menu\r\n\r\nconst Header = () => {\r\n  const [current, setCurrent] = useState('home')\r\n\r\n  const dispatch = useDispatch()\r\n  const { user, cart } = useSelector((state) => ({ ...state }))\r\n\r\n  const history = useHistory()\r\n\r\n  const handleClick = (e) => {\r\n    // console.log(e)\r\n\r\n    setCurrent(e.key)\r\n  }\r\n\r\n  const logout = () => {\r\n    firebase.auth().signOut()\r\n    dispatch({\r\n      type: 'LOGOUT',\r\n      payload: null,\r\n    })\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <Menu\r\n      className='fixed-top'\r\n      onClick={handleClick}\r\n      selectedKeys={[current]}\r\n      mode='horizontal'\r\n      style={{ backgroundColor: '#4f86f7' }} //'#DEE1E6' original color\r\n    >\r\n      <Item key='home' icon={<AppstoreFilled style={{ color: 'white' }} />}>\r\n        <Link to='/' style={{ color: 'white' }}>\r\n          Home\r\n        </Link>\r\n      </Item>\r\n      <Item key='shop'>\r\n        <Link to='/shop' style={{ color: 'white' }}>\r\n          <i className='fas fa-shopping-bag'></i> &nbsp;Shop\r\n        </Link>\r\n      </Item>\r\n      <Item key='cart'>\r\n        <Link to='/cart' style={{ color: 'white' }}>\r\n          <i className='fas fa-shopping-cart'></i> &nbsp;\r\n          <Badge count={cart.length} offset={[9, 0]}>\r\n            <i style={{ color: 'white' }}>Cart</i>\r\n          </Badge>\r\n        </Link>\r\n      </Item>\r\n      {!user && (\r\n        <Item\r\n          key='register'\r\n          icon={<UserAddOutlined style={{ color: 'white' }} />}\r\n          className='float-right'\r\n        >\r\n          <Link to='/register' style={{ color: 'white' }}>\r\n            {' '}\r\n            Register\r\n          </Link>\r\n        </Item>\r\n      )}\r\n      {!user && (\r\n        <Item\r\n          key='login'\r\n          icon={<UserOutlined style={{ color: 'white' }} />}\r\n          className='float-right'\r\n        >\r\n          <Link to='/login' style={{ color: 'white' }}>\r\n            {' '}\r\n            Login\r\n          </Link>\r\n        </Item>\r\n      )}\r\n      {user && (\r\n        <SubMenu\r\n          key='SubMenu'\r\n          icon={<SettingOutlined style={{ color: 'white' }} />}\r\n          title={user.email && user.email.split('@')[0]}\r\n          className='float-right'\r\n          style={{ color: 'white' }}\r\n        >\r\n          {user && user.role === 'subscriber' && (\r\n            <Item>\r\n              <Link to='/user/history'>Dashboard</Link>\r\n            </Item>\r\n          )}\r\n          {user && user.role === 'admin' && (\r\n            <Item>\r\n              <Link to='/admin/dashboard'>Admin Dashboard</Link>\r\n            </Item>\r\n          )}\r\n          <Item icon={<LogoutOutlined />} onClick={logout}>\r\n            Logout\r\n          </Item>\r\n        </SubMenu>\r\n      )}\r\n      <span className='float-right mr-4 mt-2 mb-2'>\r\n        <Search />\r\n      </span>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","D:\\MYCART\\client\\src\\firebase.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js",[],"D:\\MYCART\\client\\src\\reducers\\index.js",[],"D:\\MYCART\\client\\src\\reducers\\userReducer.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js",[],"D:\\MYCART\\client\\src\\functions\\auth.js",[],"D:\\MYCART\\client\\src\\pages\\user\\History.js",[],"D:\\MYCART\\client\\src\\components\\routes\\UserRoute.js",[],"D:\\MYCART\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"D:\\MYCART\\client\\src\\components\\nav\\UserNav.js",[],"D:\\MYCART\\client\\src\\pages\\user\\Password.js",[],"D:\\MYCART\\client\\src\\pages\\user\\Wishlist.js",[],"D:\\MYCART\\client\\src\\components\\routes\\AdminRoute.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\AdminDashboard.js",["297","298"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/nav/AdminNav'\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <div className='container-fluid mt-5'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className='col'>Admin dashboard</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n","D:\\MYCART\\client\\src\\components\\nav\\AdminNav.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"D:\\MYCART\\client\\src\\functions\\category.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["299","300"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getCategory, updateCategory } from '../../../functions/category'\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n  //States\r\n  const [name, setName] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Use effect\r\n  useEffect(() => {\r\n    loadCategory()\r\n  }, [])\r\n\r\n  //Load all the categories on component mount\r\n  const loadCategory = () => {\r\n    getCategory(match.params.slug).then((res) => {\r\n      setName(res.data.name)\r\n    })\r\n  }\r\n\r\n  //Submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    updateCategory(user.token, name, match.params.slug)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setName('')\r\n        toast.success(`${res.data.name} is updated successfully`)\r\n        history.push('/admin/category') // redirect back to the category page after upating\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        toast.error(err.response.data)\r\n      })\r\n  }\r\n\r\n  //Category form\r\n  const categoryForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Name</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          autoFocus\r\n          required\r\n          minLength='4'\r\n        />\r\n        <br />\r\n        <button className='btn btn-outline-primary' disabled={name == ''}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container-fluid mt-5'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>loading...</h4>\r\n          ) : (\r\n            <h4>Update Category</h4>\r\n          )}\r\n          {categoryForm()}\r\n\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryUpdate\r\n","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubCreate.js",[],"D:\\MYCART\\client\\src\\functions\\sub.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubUpdate.js",["301","302"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getSub, updateSub } from '../../../functions/sub'\r\nimport { getCategories } from '../../../functions/category'\r\n\r\nconst SubUpdate = ({ match, history }) => {\r\n  //States\r\n  const [name, setName] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [categories, setCategories] = useState([])\r\n  const [parent, setParent] = useState('')\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Use effect to load all the categories in the categories collection and display them in a list\r\n  useEffect(() => {\r\n    loadCategories()\r\n    loadSub()\r\n  }, [])\r\n\r\n  //Load all the categories on component mount\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setCategories(res.data)\r\n    })\r\n  }\r\n\r\n  //Load all sub categories on component mount\r\n  const loadSub = () => {\r\n    getSub(match.params.slug).then((res) => {\r\n      setName(res.data.name)\r\n      setParent(res.data.parent)\r\n    })\r\n  }\r\n\r\n  //Submit, creating a new category\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    updateSub({ authToken: user.token, name, parent, slug: match.params.slug })\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setName('')\r\n        toast.success(`${res.data.name} is updated successfully`)\r\n        history.push('/admin/sub')\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        toast.error(err.response.data)\r\n      })\r\n  }\r\n\r\n  //Category form\r\n  const categoryForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Name</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          autoFocus\r\n          required\r\n          minLength='2'\r\n        />\r\n        <br />\r\n        <button className='btn btn-outline-primary' disabled={name == ''}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>loading...</h4>\r\n          ) : (\r\n            <h4>Update Sub Category</h4>\r\n          )}\r\n          <div className='form-group'>\r\n            <label>Parent Category </label>\r\n            <select\r\n              name='category'\r\n              className='form-control'\r\n              onChange={(e) => setParent(e.target.value)}\r\n              required\r\n            >\r\n              <option value='please select'>Please Select</option>\r\n              {categories.length > 0 &&\r\n                categories.map((data) => (\r\n                  <option\r\n                    value={data._id}\r\n                    key={data._id}\r\n                    selected={data._id === parent}\r\n                  >\r\n                    {data.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          {categoryForm()}\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubUpdate\r\n","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductCreate.js",["303","304","305","306","307","308"],"import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { createProduct } from '../../../functions/product'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst { Option } = Select\r\nconst productState = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  categories: [],\r\n  category: '',\r\n  subs: [],\r\n  shipping: '',\r\n  quantity: '',\r\n  images: [],\r\n  colors: ['Black', 'brown', 'silver', 'white', 'blue'], //options to show in dropdown so that admin can pick one\r\n  brands: [\r\n    'Samsung',\r\n    'Microsoft',\r\n    'Apple',\r\n    'Lenovo',\r\n    'ASUS',\r\n    'DELL',\r\n    'HP',\r\n    'REALME',\r\n  ], //options to show in dropdown so that admin can pick one\r\n  color: '',\r\n  brand: '',\r\n}\r\n\r\nconst ProductCreate = () => {\r\n  //redux logged in user\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Storing the subcategories\r\n  const [subOptions, setSubOptions] = useState([])\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  //get all the categories\r\n  useEffect(() => {\r\n    loadCategories()\r\n  }, [])\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setValues({ ...values, categories: res.data })\r\n    })\r\n  }\r\n\r\n  const [values, setValues] = useState(productState)\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    categories,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  //when admin selects a category a api request is made to backend to fetch all the sub-categories for that category\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault()\r\n    // console.log('Clciked Category', e.target.value)\r\n    setValues({ ...values, subs: [], [e.target.name]: e.target.value })\r\n    getCategorySubs(e.target.value)\r\n      .then((res) => {\r\n        console.log('the data', res.data)\r\n        setSubOptions(res.data)\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n\r\n  //Submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        window.alert(`${res.data.title} is created successfully`)\r\n        window.location.reload()\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid mt-5'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          <h4>Product create</h4>\r\n          <hr />\r\n          <div className='p-3'>\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label>Title</label>\r\n              <input\r\n                type='text'\r\n                name='title'\r\n                className='form-control'\r\n                value={title}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Description</label>\r\n              <input\r\n                type='text'\r\n                name='description'\r\n                className='form-control'\r\n                value={description}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Price</label>\r\n              <input\r\n                type='Number'\r\n                name='price'\r\n                className='form-control'\r\n                value={price}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Shipping</label>\r\n              <select\r\n                name='shipping'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                <option value='No'>No</option>\r\n                <option value='Yes'>Yes</option>\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Quantity</label>\r\n              <input\r\n                type='Number'\r\n                name='quantity'\r\n                className='form-control'\r\n                value={quantity}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Colors</label>\r\n              <select\r\n                name='color'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                {colors.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Brand</label>\r\n              <select\r\n                name='brand'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                {brands.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Category </label>\r\n              <select\r\n                name='category'\r\n                className='form-control'\r\n                onChange={handleCategoryChange}\r\n                required\r\n              >\r\n                <option>Please select category</option>\r\n                {categories.length > 0 &&\r\n                  categories.map((data) => (\r\n                    <option value={data._id} key={data._id}>\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            {/* Multiple subcategories select element */}\r\n\r\n            {subOptions.length > 0 && (\r\n              <div>\r\n                <label>Sub Categories </label>\r\n                <Select\r\n                  mode='multiple'\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Please select the subcategories'\r\n                  name='subs'\r\n                  value={subs}\r\n                  onChange={(value) => setValues({ ...values, subs: value })}\r\n                >\r\n                  {subOptions.length > 0 &&\r\n                    subOptions.map((s) => (\r\n                      <Option key={s._id} value={s._id}>\r\n                        {s.name}\r\n                      </Option>\r\n                    ))}\r\n                </Select>\r\n              </div>\r\n            )}\r\n            <br />\r\n            <button type='submit' className='btn btn-outline-info'>\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductCreate\r\n","D:\\MYCART\\client\\src\\functions\\product.js",[],"D:\\MYCART\\client\\src\\components\\forms\\FileUpload.js",[],"D:\\MYCART\\client\\src\\components\\cards\\AdminProductCard.js",["309"],"import React from 'react'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport laptop from '../../images/laptop.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'antd'\r\nconst { Meta } = Card\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n  const { title, description, images, slug } = product\r\n\r\n  return (\r\n    <Card\r\n      cover={\r\n        <img\r\n          src={images && images.length ? images[0].url : laptop}\r\n          style={{ height: '150px', objectFit: 'cover' }}\r\n          className='p-1'\r\n        />\r\n      }\r\n      actions={[\r\n        <Link to={`/admin/product/${slug}`}>\r\n          {' '}\r\n          <EditOutlined key='edit' className='text-primary' />\r\n        </Link>,\r\n        <DeleteOutlined\r\n          className='text-danger'\r\n          onClick={() => {\r\n            handleRemove(slug)\r\n          }}\r\n        />,\r\n      ]}\r\n    >\r\n      <Meta\r\n        title={title}\r\n        description={`${description && description.substring(0, 70)} . . .`}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AdminProductCard\r\n","D:\\MYCART\\client\\src\\pages\\admin\\product\\AllProducts.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["310","311","312","313"],"import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { getProduct, updateProduct } from '../../../functions/product'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst { Option } = Select\r\n\r\nconst productState = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  category: '',\r\n  subs: [],\r\n  shipping: '',\r\n  quantity: '',\r\n  images: [],\r\n  colors: ['Black', 'brown', 'silver', 'white', 'blue'], //options to show in dropdown so that admin can pick one\r\n  brands: ['Samsung', 'Microsoft', 'Apple', 'Lenovo', 'ASUS', 'DELL'], //options to show in dropdown so that admin can pick one\r\n  color: '',\r\n  brand: '',\r\n}\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n  //redux logged in user\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const { slug } = match.params\r\n  const [values, setValues] = useState(productState)\r\n  //Storing the subcategories\r\n  const [subOptions, setSubOptions] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [arrayOfSubs, setArrayOfSubs] = useState([])\r\n  const [selectedCategory, setSelectedCategory] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values\r\n\r\n  useEffect(() => {\r\n    loadProduct()\r\n    loadCategories()\r\n  }, [])\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setCategories(res.data)\r\n    })\r\n  }\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug)\r\n      .then((res) => {\r\n        setValues({ ...values, ...res.data })\r\n\r\n        //get all the subcategories for the fetchd product\r\n        getCategorySubs(res.data.category._id)\r\n          .then((p) => {\r\n            // console.log('the data', p.data)\r\n            setSubOptions(p.data) // on first load show all subs for the product to update\r\n          })\r\n          .catch((err) => {\r\n            console.log('the data', err)\r\n          })\r\n\r\n        let arr = []\r\n        res.data.subs.map((s) => {\r\n          arr.push(s._id)\r\n        })\r\n        console.log('Here')\r\n        console.log('ARR', arr)\r\n        setArrayOfSubs(arr) //required for ant design select to work\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  //when admin selects a category a api request is made to backend to fetch all the sub-categories for that category\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault()\r\n    // console.log('Clciked Category', e.target.value)\r\n\r\n    setValues({ ...values, subs: [] })\r\n\r\n    setSelectedCategory(e.target.value)\r\n\r\n    getCategorySubs(e.target.value)\r\n      .then((res) => {\r\n        // console.log('changed category', res.data)\r\n        setSubOptions(res.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n    //if user clicks back to the original category then show its sub categories as default\r\n    if (values.category._id === e.target.value) {\r\n      loadProduct()\r\n    }\r\n\r\n    //clear all sub categories if new category is chosen\r\n    setArrayOfSubs([])\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    values.subs = arrayOfSubs\r\n    values.category = selectedCategory ? selectedCategory : values.category\r\n    updateProduct(slug, user.token, values)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        toast.success(`${res.data.title} is updated is successfully`)\r\n        history.push('/admin/dashboard')\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n        toast.error(err.response.data.err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          <h4>Product Update</h4>\r\n          {/* {JSON.stringify(values)} */}\r\n          <hr />\r\n          <div className='p-3'>\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label>Title</label>\r\n              <input\r\n                type='text'\r\n                name='title'\r\n                className='form-control'\r\n                value={title}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Description</label>\r\n              <input\r\n                type='text'\r\n                name='description'\r\n                className='form-control'\r\n                value={description}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Price</label>\r\n              <input\r\n                type='Number'\r\n                name='price'\r\n                className='form-control'\r\n                value={price}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Shipping</label>\r\n              <select\r\n                name='shipping'\r\n                className='form-control'\r\n                value={shipping === 'Yes' ? 'Yes' : 'No'}\r\n                onChange={handleChange}\r\n              >\r\n                <option value='No'>No</option>\r\n                <option value='Yes'>Yes</option>\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Quantity</label>\r\n              <input\r\n                type='Number'\r\n                name='quantity'\r\n                className='form-control'\r\n                value={quantity}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Colors</label>\r\n              <select\r\n                name='color'\r\n                className='form-control'\r\n                value={color}\r\n                onChange={handleChange}\r\n              >\r\n                {colors.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Brand</label>\r\n              <select\r\n                name='brand'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n                value={brand}\r\n              >\r\n                {brands.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Category </label>\r\n              <select\r\n                name='category'\r\n                className='form-control'\r\n                onChange={handleCategoryChange}\r\n                required\r\n                value={selectedCategory ? selectedCategory : category._id}\r\n              >\r\n                {categories.length > 0 &&\r\n                  categories.map((data) => (\r\n                    <option value={data._id} key={data._id}>\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label>Sub Categories </label>\r\n              <Select\r\n                mode='multiple'\r\n                style={{ width: '100%' }}\r\n                placeholder='Please select the subcategories'\r\n                name='subs'\r\n                value={arrayOfSubs}\r\n                onChange={(value) => setArrayOfSubs(value)}\r\n              >\r\n                {subOptions.length > 0 &&\r\n                  subOptions.map((s) => (\r\n                    <Option key={s._id} value={s._id}>\r\n                      {s.name}\r\n                    </Option>\r\n                  ))}\r\n              </Select>\r\n            </div>\r\n\r\n            <br />\r\n            <button type='submit' className='btn btn-outline-info'>\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductUpdate\r\n","D:\\MYCART\\client\\src\\components\\cards\\ProductCard.js",["314","315","316","317","318","319"],"import React, { useState } from 'react'\r\nimport {\r\n  EyeOutlined,\r\n  ShoppingCartOutlined,\r\n  ClockCircleOutlined,\r\n} from '@ant-design/icons'\r\nimport laptop from '../../images/laptop.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport RatingsAverage from '../../functions/RatingsAverage'\r\nimport { Card, Tooltip } from 'antd'\r\nimport { userReducer } from '../../reducers/userReducer'\r\nconst { Meta } = Card\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const { title, description, images, slug, ratings } = product\r\n  const [toolTip, setToolTip] = useState('click to add to cart')\r\n\r\n  //redux\r\n  const { user, cart } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.push({ ...product, count: 1 })\r\n\r\n      let unique = _.uniqBy(cart, '_id')\r\n\r\n      localStorage.setItem('cart', JSON.stringify(unique))\r\n      setToolTip('added to cart')\r\n\r\n      //dispatch to redux i.e add the local storage(added to cart products) data to redux state\r\n      dispatch({ type: 'ADD_TO_CART', payload: unique })\r\n\r\n      //dispatch to show cart in side bar\r\n      dispatch({ type: 'DRAWER_TOGGLE', payload: true })\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Card\r\n        className='productcardhover'\r\n        cover={\r\n          <img\r\n            src={images && images.length ? images[0].url : laptop}\r\n            style={{ height: '150px', objectFit: 'cover' }}\r\n            className='p-1'\r\n          />\r\n        }\r\n        actions={[\r\n          <Link to={`/product/${slug}`}>\r\n            {' '}\r\n            <EyeOutlined key='edit' className='text-primary' />\r\n            <br />\r\n            View Product\r\n          </Link>,\r\n          <Tooltip title={product.quantity > 0 ? toolTip : 'Out of stock'}>\r\n            {product.quantity > 0 ? (\r\n              <a\r\n                onClick={() => {\r\n                  handleAddToCart()\r\n                }}\r\n              >\r\n                {' '}\r\n                <ShoppingCartOutlined className='text-success' /> <br />\r\n                Add to cart\r\n              </a>\r\n            ) : (\r\n              <a>\r\n                <ClockCircleOutlined className='text-danger' />\r\n                <br />\r\n                currently out of stock\r\n              </a>\r\n            )}\r\n          </Tooltip>,\r\n        ]}\r\n      >\r\n        <toolTip title={title}>\r\n          <Meta\r\n            title={title}\r\n            description={`${description && description.substring(0, 70)} . . .`}\r\n          />\r\n        </toolTip>\r\n\r\n        {product && product.ratings && ratings.length > 0 ? (\r\n          <div className='pt-3 pb-1'>{RatingsAverage(product)}</div>\r\n        ) : (\r\n          <div className='pt-3 pb-2'>No Ratings yet</div>\r\n        )}\r\n        <h5 className='text-danger'>${product.price}</h5>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductCard\r\n","D:\\MYCART\\client\\src\\components\\cards\\LoadingCard.js",[],"D:\\MYCART\\client\\src\\components\\home\\NewArrivals.js",["320"],"import React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport LoadingCard from '../../components/cards/LoadingCard'\r\nimport { Pagination } from 'antd'\r\nconst NewArrivals = () => {\r\n  //States\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [productsCount, setProductsCount] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    loadAllProducts()\r\n  }, [page])\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => {\r\n      setProductsCount(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true)\r\n    //sort,order,limit\r\n    getProducts('createdAt', 'desc', page)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setProducts(res.data)\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4 className='p-2 mt-2 mb-4 ml-2 display-4 text-primary '>\r\n        New Arrivals\r\n      </h4>\r\n      {loading ? (\r\n        <LoadingCard count={3} />\r\n      ) : (\r\n        <div className='container'>\r\n          <div className='row'>\r\n            {products.map((product) => (\r\n              <div className='col-md-4 p-3' key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className='row'>\r\n        <nav className='col-md-4 offset-md-4 text-center pt-4 p-3'>\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            total={(productsCount / 3) * 10}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewArrivals\r\n","D:\\MYCART\\client\\src\\components\\home\\BestSellers.js",["321"],"import React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport LoadingCard from '../../components/cards/LoadingCard'\r\nimport { Pagination } from 'antd'\r\nconst BestSellers = () => {\r\n  //States\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [productsCount, setProductsCount] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    loadAllProducts()\r\n  }, [page])\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => {\r\n      setProductsCount(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true)\r\n    //sort,order,limit\r\n    console.log('Inside best seller')\r\n    getProducts('sold', 'desc', page)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setProducts(res.data)\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4 className='p-2 mt-2 mb-4 ml-2 display-4 text-primary '>\r\n        Best Sellers\r\n      </h4>\r\n      {loading ? (\r\n        <LoadingCard count={3} />\r\n      ) : (\r\n        <div className='container'>\r\n          <div className='row'>\r\n            {products.map((product) => (\r\n              <div className='col-md-4 p-3' key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className='row'>\r\n        <nav className='col-md-4 offset-md-4 text-center pt-2 p-3'>\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            total={(productsCount / 3) * 10}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BestSellers\r\n","D:\\MYCART\\client\\src\\pages\\Product.js",["322"],"import React, { useEffect, useState } from 'react'\r\nimport { getProduct, productStar, getRelated } from '../functions/product'\r\nimport SingleProduct from '../components/cards/SingleProduct'\r\nimport ProductCard from '../components/cards/ProductCard'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Product = ({ match }) => {\r\n  //local state\r\n  const [product, setProduct] = useState({})\r\n  const [related, setRelated] = useState({})\r\n  const [star, setStar] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  const { slug } = match.params\r\n\r\n  useEffect(() => {\r\n    loadSingleProduct()\r\n  }, [slug])\r\n\r\n  useEffect(() => {\r\n    if (product.ratings && user) {\r\n      let existingRatingObject = product.ratings.find(\r\n        (element) => element.postedBy.toString() === user._id.toString()\r\n      )\r\n\r\n      if (existingRatingObject) {\r\n        setComment(existingRatingObject.comment)\r\n        setStar(existingRatingObject.star)\r\n      }\r\n    }\r\n  }, [product, user])\r\n\r\n  const loadSingleProduct = () => {\r\n    getProduct(slug).then((res) => {\r\n      setProduct(res.data)\r\n      //after getting the product, get the related products(products of the same category)\r\n      getRelated(res.data._id).then((res) => {\r\n        setRelated(res.data)\r\n      })\r\n    })\r\n  }\r\n\r\n  const onStarClick = (newRating, name) => {\r\n    setStar(newRating)\r\n  }\r\n\r\n  const userComment = (e) => {\r\n    setComment(e.target.value)\r\n  }\r\n\r\n  const reviewSubmit = () => {\r\n    productStar(product._id, star, comment, user.token)\r\n      .then((res) => {\r\n        toast.success('Thank you for the review, it will appear soon')\r\n        loadSingleProduct()\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/' className='button'>\r\n        {' '}\r\n        <button type='button' className='btn btn-dark mt-5 ml-2'>\r\n          Go back\r\n        </button>\r\n      </Link>\r\n      <div className='container-fluid'>\r\n        <div className='row pt-2'>\r\n          <SingleProduct\r\n            product={product}\r\n            onStarClick={onStarClick}\r\n            star={star}\r\n            userComment={userComment}\r\n            comment={comment}\r\n            reviewSubmit={reviewSubmit}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='row p-1'>\r\n        <div className='col ml-2 pt-5 pb-4 pl-4'>\r\n          <hr />\r\n          <h3>Similar Products</h3>\r\n        </div>\r\n      </div>\r\n      <div className='row pl-4'>\r\n        {related.length > 0 ? (\r\n          related.map((item) => (\r\n            <div key={item._id} className='col-md-4 pb-4  pr-2'>\r\n              <ProductCard product={item} />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className='text-center col pb-3 h5'>No related products</div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","D:\\MYCART\\client\\src\\components\\cards\\SingleProduct.js",["323","324","325","326","327"],"import React, { useState } from 'react'\r\nimport { Card, Tabs, Tooltip } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css' // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel'\r\nimport {\r\n  HeartOutlined,\r\n  ShoppingCartOutlined,\r\n  ClockCircleOutlined,\r\n} from '@ant-design/icons'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ProductListItems from './ProductListItems'\r\n// import ProductRatingForm from '../forms/ProductRatingForm'\r\nimport RatingModal from '../modal/RatingModal'\r\nimport StarRating from 'react-star-ratings'\r\nimport ReviewsCard from './ReviewsCard'\r\nimport RatingsAverage from '../../functions/RatingsAverage'\r\n\r\nimport ProductListGroup from '../listgroups/ProductListGroup'\r\n\r\nconst { Meta } = Card\r\nconst { TabPane } = Tabs\r\n\r\nconst SingleProduct = ({\r\n  product,\r\n  onStarClick,\r\n  star,\r\n  userComment,\r\n  comment,\r\n  reviewSubmit,\r\n}) => {\r\n  const { title, images, description, _id, ratings } = product\r\n  const [toolTip, setToolTip] = useState('click to add to cart')\r\n\r\n  //redux\r\n  const { user, cart } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  //add to cart\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.push({ ...product, count: 1 })\r\n\r\n      let unique = _.uniqWith(cart, _.isEqual)\r\n\r\n      localStorage.setItem('cart', JSON.stringify(unique))\r\n      setToolTip('added to cart')\r\n\r\n      //dispatch to redux i.e add the local storage(added to cart products) data to redux state\r\n      dispatch({ type: 'ADD_TO_CART', payload: unique })\r\n\r\n      //dispatch to show cart in side bar\r\n      dispatch({ type: 'DRAWER_TOGGLE', payload: true })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='col-md-6 ml-4 mt-3 '>\r\n        <Card>\r\n          <Carousel showArrows={true} autoPlay infiniteLoop>\r\n            {images &&\r\n              images.map((data) => <img src={data.url} key={data.public_id} />)}\r\n          </Carousel>\r\n          <br />\r\n\r\n          <Tabs type='card'>\r\n            <TabPane tab='Description' key='1'>\r\n              {description && description}\r\n            </TabPane>\r\n            <TabPane tab='Specification' key='2'>\r\n              ram : 8gb\r\n              <br />\r\n              processor : corei7 8th gen\r\n              <br />\r\n              Gpu : Nividia Gtx 1080\r\n              <br />\r\n              cache : 10mb of l1 cache\r\n              <br />\r\n            </TabPane>\r\n            <TabPane tab='Seller info'>\r\n              Anurag mart near pluto , next to kepler belt, pin : solar294745\r\n              <br />\r\n              phone : solar98377656\r\n            </TabPane>\r\n          </Tabs>\r\n        </Card>\r\n        <hr />\r\n        <ProductListGroup product={product} />\r\n      </div>\r\n      <div className='col-md-5 ml-2 mt-3'>\r\n        <Card\r\n          className='productcard'\r\n          actions={[\r\n            <Tooltip title={product.quantity > 0 ? toolTip : 'out of stock'}>\r\n              {product.quantity > 0 ? (\r\n                <a\r\n                  onClick={() => {\r\n                    handleAddToCart()\r\n                  }}\r\n                >\r\n                  <ShoppingCartOutlined className='text-success' /> <br />\r\n                  Add to Cart\r\n                </a>\r\n              ) : (\r\n                <a>\r\n                  <ClockCircleOutlined className='text-danger' />\r\n                  <br />\r\n                  currently out of stock\r\n                </a>\r\n              )}\r\n            </Tooltip>,\r\n            <Link to='/'>\r\n              <HeartOutlined className='text-danger' />\r\n              <br />\r\n              Add to wishlist\r\n            </Link>,\r\n            <RatingModal reviewSubmit={reviewSubmit}>\r\n              <StarRating\r\n                name={_id}\r\n                numberOfStars={5}\r\n                rating={star}\r\n                changeRating={onStarClick}\r\n                isSelectable={true}\r\n                starRatedColor='gold'\r\n              />\r\n              <br />\r\n              <form className='mt-3'>\r\n                <div className='form-group'>\r\n                  <label htmlFor='comment' className='h5'>\r\n                    Comment\r\n                  </label>\r\n                  <hr />\r\n                  <textarea\r\n                    className='form-control'\r\n                    name='comment'\r\n                    rows='5'\r\n                    value={comment}\r\n                    onChange={userComment}\r\n                  ></textarea>\r\n                </div>\r\n              </form>\r\n            </RatingModal>,\r\n          ]}\r\n        >\r\n          <Meta title={title} />\r\n          <span>\r\n            {product && product.ratings && ratings.length > 0 ? (\r\n              <div className='pt-3'>{RatingsAverage(product)}</div>\r\n            ) : (\r\n              'No Ratings yet'\r\n            )}\r\n          </span>\r\n          <hr />\r\n          <ProductListItems product={product} />\r\n        </Card>\r\n\r\n        <br />\r\n        <ReviewsCard ratings={ratings} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingleProduct\r\n","D:\\MYCART\\client\\src\\components\\cards\\ProductListItems.js",["328","329"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst ProductListItems = ({ product }) => {\r\n  const {\r\n    price,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    color,\r\n    brand,\r\n    quantity,\r\n    sold,\r\n  } = product\r\n  return (\r\n    <ul className='list-group'>\r\n      <li className='list-group-item h5 font-italic'>\r\n        Price{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          ${price}{' '}\r\n          {/* <span className='text-danger h6'> &nbsp;&nbsp;you save 20%</span>\r\n          <del>${price + (20 / 100) * price}</del> */}\r\n        </span>\r\n      </li>\r\n\r\n      {category && (\r\n        <li className='list-group-item h5 font-italic'>\r\n          Category{' '}\r\n          <Link\r\n            to={`/category/${category.slug}`}\r\n            className='label label-default label-pill pull-xs-right '\r\n          >\r\n            {category.name}\r\n          </Link>\r\n        </li>\r\n      )}\r\n\r\n      {subs && (\r\n        <li className='list-group-item h5 font-italic'>\r\n          SubCategories{' '}\r\n          {subs.map((s) => (\r\n            <Link\r\n              to={`/sub/${s.slug}`}\r\n              key={s._id}\r\n              className='label label-default label-pill pull-xs-right'\r\n            >\r\n              {s.name}\r\n            </Link>\r\n          ))}\r\n        </li>\r\n      )}\r\n      <li className='list-group-item h5 font-italic'>\r\n        Shipping{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {shipping}\r\n        </span>\r\n      </li>\r\n      <li className='list-group-item h5 font-italic'>\r\n        Color{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {color}\r\n        </span>\r\n      </li>\r\n      <li className='list-group-item h5 font-italic'>\r\n        Brand{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {brand}\r\n        </span>\r\n      </li>\r\n      {/* <li className='list-group-item h5 font-italic'>\r\n        Available{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {quantity}\r\n        </span>\r\n      </li>\r\n      <li className='list-group-item h5 font-italic'>\r\n        Sold{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {sold}\r\n        </span>\r\n      </li> */}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ProductListItems\r\n","D:\\MYCART\\client\\src\\components\\nav\\Footer.js",[],"D:\\MYCART\\client\\src\\components\\modal\\ProductModal.js",[],"D:\\MYCART\\client\\src\\components\\listgroups\\ProductListGroup.js",[],"D:\\MYCART\\client\\src\\components\\forms\\ProductRatingForm.js",["330"],"D:\\MYCART\\client\\src\\components\\modal\\RatingModal.js",["331","332"],"import React, { useState } from 'react'\r\nimport { Modal, Button } from 'antd'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { StarOutlined } from '@ant-design/icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nconst RatingModal = ({ children, reviewSubmit }) => {\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n\r\n  const history = useHistory()\r\n  const params = useParams()\r\n\r\n  const handleModal = () => {\r\n    if (user && user.token) {\r\n      setModalVisible(true)\r\n    } else {\r\n      history.push({\r\n        pathname: '/login',\r\n        state: { from: `/product/${params.slug}` },\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleModal}>\r\n        <StarOutlined style={{ color: 'gold' }} />\r\n        <br />\r\n        {user ? 'Leave a rating' : 'login to rate this product'}\r\n      </div>\r\n      <Modal\r\n        title='Leave/change your rating'\r\n        centered\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false)\r\n          reviewSubmit()\r\n        }}\r\n        onCancel={() => setModalVisible(false)}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RatingModal\r\n","D:\\MYCART\\client\\src\\components\\cards\\ReviewsCard.js",[],"D:\\MYCART\\client\\src\\components\\cards\\Rating.js",[],"D:\\MYCART\\client\\src\\functions\\RatingsAverage.js",["333"],"import React from 'react'\r\nimport StarRating from 'react-star-ratings'\r\n\r\nconst RatingsAverage = (product) => {\r\n  if (product && product.ratings) {\r\n    let ratingsArray = product.ratings\r\n    let total = []\r\n    let numberOfRatings = ratingsArray.length\r\n\r\n    ratingsArray.map((rating) => {\r\n      total.push(rating.star)\r\n    })\r\n\r\n    let totalReduced = total.reduce((prev, next) => prev + next, 0)\r\n\r\n    let averageRating = totalReduced / numberOfRatings\r\n\r\n    return (\r\n      <div>\r\n        <span>\r\n          <StarRating\r\n            rating={averageRating}\r\n            starRatedColor='gold'\r\n            starDimension='25px'\r\n            starSpacing='2px'\r\n          />\r\n          &nbsp;({product.ratings.length})\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RatingsAverage\r\n","D:\\MYCART\\client\\src\\components\\MenuCategory\\CategoryList.js",[],"D:\\MYCART\\client\\src\\pages\\category\\CategoryHome.js",["334"],"import React, { useState, useEffect } from 'react'\r\nimport { getCategory } from '../../functions/category'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\n\r\nconst CategoryHome = ({ match }) => {\r\n  //state\r\n  const [category, setCategory] = useState({})\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { slug } = match.params\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getCategory(slug).then((res) => {\r\n      setCategory(res.data.category)\r\n      setProducts(res.data.products)\r\n      setLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Link to='/' className='button'>\r\n        {' '}\r\n        <button type='button' className='btn btn-dark mt-5 ml-2'>\r\n          Go back\r\n        </button>\r\n      </Link>\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            {loading ? (\r\n              <LoadingOutlined className='h1 text-primary' />\r\n            ) : products.length === 0 ? (\r\n              <h4 className='text-center p-3 mt-5 mb-5 display-5 jumbotron'>\r\n                No Products in {category.name} category\r\n              </h4>\r\n            ) : (\r\n              <h4 className='text-center p-2 mt-5 mb-5 display-5 jumbotron'>\r\n                {products.length} Products in \"{category.name}\" Category\r\n              </h4>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          {products &&\r\n            products.length > 0 &&\r\n            products.map((p) => (\r\n              <div className='col-md-4 pb-5 ' key={p._id}>\r\n                {<ProductCard product={p} />}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryHome\r\n","D:\\MYCART\\client\\src\\components\\MenuSub\\SubList.js",[],"D:\\MYCART\\client\\src\\pages\\sub\\SubHome.js",["335","336"],"import React, { useState, useEffect } from 'react'\r\nimport { getSub } from '../../functions/sub'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport { Card } from 'antd'\r\n\r\nconst SubHome = ({ match }) => {\r\n  //state\r\n  const [sub, setSub] = useState({})\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { slug } = match.params\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getSub(slug).then((res) => {\r\n      setSub(res.data.sub)\r\n      setProducts(res.data.products)\r\n      setLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Link to='/' className='button'>\r\n        {' '}\r\n        <button type='button' className='btn btn-dark mt-5 ml-2'>\r\n          Go back\r\n        </button>\r\n      </Link>\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            {loading ? (\r\n              <LoadingOutlined className='h1 text-primary' />\r\n            ) : products.length === 0 ? (\r\n              <h4 className='text-center p-3 mt-3 mb-5 display-5 jumbotron'>\r\n                No Products in {sub.name} sub category\r\n              </h4>\r\n            ) : (\r\n              <h4 className='text-center p-2 mt-3 mb-5 display-5 jumbotron'>\r\n                {products.length} Products in \"{sub.name}\" sub Category\r\n              </h4>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          {products &&\r\n            products.length > 0 &&\r\n            products.map((p) => (\r\n              <div className='col-md-4 pb-5 ' key={p._id}>\r\n                {<ProductCard product={p} />}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubHome\r\n","D:\\MYCART\\client\\src\\reducers\\searchReducer.js",[],"D:\\MYCART\\client\\src\\components\\forms\\Search.js",[],"D:\\MYCART\\client\\src\\pages\\Shop.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353"],"import React, { useEffect, useState } from 'react'\r\nimport { getProductsByCount, fetchProductsByFilter } from '../functions/product'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Star from '../components/forms/Star'\r\nimport { getCategories } from '../functions/category'\r\nimport ProductCard from '../components/cards/ProductCard'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport {\r\n  DollarOutlined,\r\n  DownSquareOutlined,\r\n  StarOutlined,\r\n} from '@ant-design/icons'\r\nimport { Menu, Slider, Radio } from 'antd'\r\n\r\nconst { SubMenu, ItemGroup } = Menu\r\n\r\nconst Shop = () => {\r\n  const [products, setProducts] = useState([])\r\n  const [tempProducts, setTempProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [price, setPrice] = useState([0, 5000])\r\n  const [ok, setOk] = useState(false)\r\n  const [categories, setCategories] = useState([])\r\n  const [categoryId, setCategoryId] = useState('6030cbff2d203528c8da261c')\r\n  const [star, setStar] = useState('')\r\n  const [brands, setBrands] = useState([\r\n    'Samsung',\r\n    'Microsoft',\r\n    'Apple',\r\n    'Lenovo',\r\n    'ASUS',\r\n    'DELL',\r\n    'HP',\r\n    'REALME',\r\n  ])\r\n  const [brand, setBrand] = useState('')\r\n\r\n  const { search } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n  const { text } = search\r\n\r\n  //used for back button\r\n  // const backReload = () => {\r\n  //   loadAllProducts()\r\n  // }\r\n\r\n  //1.load default products when no search is done\r\n  useEffect(() => {\r\n    loadAllProducts()\r\n    //fetch categories\r\n    getCategories().then((res) => {\r\n      setCategories(res.data)\r\n    })\r\n  }, [])\r\n\r\n  //2. load products on user search input( on text change)\r\n  useEffect(() => {\r\n    if (text === '') {\r\n      loadAllProducts()\r\n    }\r\n    const delayed = setTimeout(() => {\r\n      fetchProducts({ query: text })\r\n    }, 1000)\r\n    return () => clearTimeout(delayed)\r\n  }, [text])\r\n\r\n  //fetching products based on search criteria\r\n  const fetchProducts = (arg) => {\r\n    setLoading(true)\r\n    fetchProductsByFilter(arg).then((res) => {\r\n      console.log(res.data)\r\n      setProducts(res.data)\r\n      setTempProducts(res.data)\r\n    })\r\n    setLoading(false)\r\n  }\r\n\r\n  //3.filter products based on price\r\n  useEffect(() => {\r\n    if (text !== '' && tempProducts.length > 0) {\r\n      console.log('inside price useEffect', categoryId)\r\n      console.log(brand)\r\n\r\n      if (brand == '') {\r\n        const tempData = tempProducts.filter(\r\n          (data) =>\r\n            data.price >= price[0] &&\r\n            data.price <= price[1] &&\r\n            data.category._id == categoryId\r\n        )\r\n        setProducts(tempData)\r\n      } else if (brand !== '') {\r\n        const tempData = tempProducts.filter(\r\n          (data) =>\r\n            data.price >= price[0] &&\r\n            data.price <= price[1] &&\r\n            data.category._id == categoryId &&\r\n            data.brand == brand\r\n        )\r\n        setProducts(tempData)\r\n      }\r\n    } else if (text == '') {\r\n      fetchProducts({ price, category: categoryId, stars: star, brand: brand })\r\n    }\r\n  }, [ok])\r\n\r\n  const handleSlider = (value) => {\r\n    setPrice(value)\r\n    setTimeout(() => {\r\n      setOk(!ok)\r\n    }, 2000)\r\n  }\r\n  //--------------till here price filter-------------------//\r\n\r\n  //4. Load products based on categories\r\n  //show categories in a list of checkbox\r\n  const showCategories = () =>\r\n    categories.map((c) => (\r\n      <div key={c._id}>\r\n        <Radio\r\n          onChange={handleCheck}\r\n          className='pb-2 pl-4 pr-4'\r\n          value={c._id}\r\n          name='category'\r\n        >\r\n          {c.name}\r\n        </Radio>\r\n        <br />\r\n      </div>\r\n    ))\r\n\r\n  //handle category select\r\n  const handleCheck = (e) => {\r\n    console.log(e.target.value)\r\n    // let inTheState = [...categoryIds]\r\n    // let justChecked = e.target.value\r\n    // let alreadyThereInState = inTheState.indexOf(justChecked)\r\n    // if (alreadyThereInState == -1) {\r\n    //   inTheState.push(justChecked)\r\n    // } else {\r\n    //   //if found then pop it out\r\n    //   inTheState.splice(alreadyThereInState, 1)\r\n    // }\r\n\r\n    if (text !== '' && star == '') {\r\n      // dispatch({ type: 'SEARCH_QUERY', payload: { text: ''} })\r\n      setCategoryId(e.target.value)\r\n      if (brand == '') {\r\n        const tempData = tempProducts.filter(\r\n          (data) =>\r\n            data.category._id == e.target.value &&\r\n            data.price >= price[0] &&\r\n            data.price <= price[1]\r\n        )\r\n        console.log(tempData)\r\n        setProducts(tempData)\r\n      } else if (brand !== '') {\r\n        const tempData = tempProducts.filter(\r\n          (data) =>\r\n            data.category._id == e.target.value &&\r\n            data.price >= price[0] &&\r\n            data.price <= price[1] &&\r\n            data.brand == brand\r\n        )\r\n        console.log(tempData)\r\n        setProducts(tempData)\r\n      }\r\n    } else {\r\n      setCategoryId(e.target.value)\r\n      fetchProducts({\r\n        price,\r\n        category: e.target.value,\r\n        stars: star,\r\n        brand: brand,\r\n      })\r\n      console.log(categoryId)\r\n    }\r\n  }\r\n\r\n  //to load all products (12) when just user just clicks on shop icon without any search\r\n  const loadAllProducts = () => {\r\n    setLoading(true)\r\n    getProductsByCount(12).then((p) => setProducts(p.data))\r\n    setLoading(false)\r\n  }\r\n\r\n  //5 Search by rating\r\n  const handleStarClick = (num) => {\r\n    console.log(num)\r\n    setStar(num)\r\n    fetchProducts({ price, category: categoryId, stars: num, brand: brand })\r\n  }\r\n  const showStars = () => (\r\n    <div className='pr-4 pl-4 pb-2'>\r\n      <Star starClick={handleStarClick} numberOfStars={5} />\r\n    </div>\r\n  )\r\n\r\n  //search by brand\r\n  const showBrands = () =>\r\n    brands.map((c) => (\r\n      <div key={c}>\r\n        <Radio\r\n          onChange={handleBrand}\r\n          className='pb-2 pl-4 pr-4'\r\n          value={c}\r\n          name='category'\r\n        >\r\n          {c}\r\n        </Radio>\r\n        <br />\r\n      </div>\r\n    ))\r\n\r\n  const handleBrand = (e) => {\r\n    console.log(e.target.value)\r\n\r\n    if (text != '') {\r\n      console.log('inside handlebrand by text')\r\n      setBrand(e.target.value)\r\n      const tempData = tempProducts.filter(\r\n        (data) =>\r\n          data.category._id == categoryId &&\r\n          data.price >= price[0] &&\r\n          data.price <= price[1] &&\r\n          data.brand == e.target.value\r\n      )\r\n\r\n      setProducts(tempData)\r\n    } else {\r\n      setBrand(e.target.value)\r\n      fetchProducts({\r\n        price,\r\n        category: categoryId,\r\n        stars: star,\r\n        brand: e.target.value,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/' className='button'>\r\n        {' '}\r\n        <button type='button' className='btn btn-dark mt-5 ml-2'>\r\n          Go back\r\n        </button>\r\n      </Link>\r\n      <div className='container-fluid mt-2'>\r\n        <br />\r\n        <div className='row'>\r\n          <div className='col-md-3'>\r\n            <h4>Search/filter options</h4>\r\n            <hr />\r\n            <Menu defaultOpenKeys={['1', '2', '3', '4']} mode='inline'>\r\n              {/* price */}\r\n              <SubMenu\r\n                key='1'\r\n                title={\r\n                  <span className='h6'>\r\n                    <DollarOutlined />\r\n                    <b> Price</b>\r\n                  </span>\r\n                }\r\n              >\r\n                <div>\r\n                  <Slider\r\n                    className='ml-4 mr-4'\r\n                    tipFormatter={(v) => `$${v}`}\r\n                    range\r\n                    value={price}\r\n                    onChange={handleSlider}\r\n                    max='5000'\r\n                  />\r\n                </div>\r\n              </SubMenu>\r\n              {/* category */}\r\n              <SubMenu\r\n                key='2'\r\n                title={\r\n                  <span className='h6'>\r\n                    <DownSquareOutlined />\r\n                    <b> categories</b>\r\n                  </span>\r\n                }\r\n              >\r\n                <div>\r\n                  <Radio.Group onChange={handleCheck} defaultValue={categoryId}>\r\n                    {showCategories()}\r\n                  </Radio.Group>\r\n                </div>\r\n              </SubMenu>\r\n              <br />\r\n\r\n              {/* filter by star */}\r\n              <SubMenu\r\n                key='3'\r\n                title={\r\n                  <span className='h6'>\r\n                    <StarOutlined />\r\n                    <b>Rating</b>\r\n                  </span>\r\n                }\r\n              >\r\n                <div className='mt-10'>{showStars()}</div>\r\n\r\n                <button\r\n                  class=' btn-primary h6 ml-4 mt-2'\r\n                  onClick={() => {\r\n                    setStar('')\r\n                  }}\r\n                >\r\n                  reset\r\n                </button>\r\n              </SubMenu>\r\n              <br />\r\n\r\n              {/* brands */}\r\n              <SubMenu\r\n                key='4'\r\n                title={\r\n                  <span className='h6'>\r\n                    <DownSquareOutlined />\r\n                    <b>Brands</b>\r\n                  </span>\r\n                }\r\n              >\r\n                <div>\r\n                  <Radio.Group>{showBrands()}</Radio.Group>\r\n                </div>\r\n              </SubMenu>\r\n            </Menu>\r\n          </div>\r\n\r\n          <div className='col-md-9'>\r\n            {loading ? (\r\n              <LoadingOutlined className='h1 text-primary' />\r\n            ) : (\r\n              <h3> Products </h3>\r\n            )}\r\n            {products.length < 1 && <p>No products found</p>}\r\n            <div className='row'>\r\n              {products.map((p) => (\r\n                <div className='col-md-4 mb-4' key={p._id}>\r\n                  <ProductCard product={p} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shop\r\n","D:\\MYCART\\client\\src\\components\\forms\\Star.js",[],"D:\\MYCART\\client\\src\\reducers\\cartReducer.js",[],"D:\\MYCART\\client\\src\\pages\\Cart.js",["354","355","356","357"],"import { toast } from 'react-toastify'\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { userCart } from '../functions/user'\r\n\r\nconst Cart = ({ history }) => {\r\n  const colors = ['Black', 'brown', 'silver', 'white', 'blue']\r\n\r\n  //redux\r\n  const { user, cart } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  const getTotal = () => {\r\n    return cart.reduce((current, next) => {\r\n      return current + next.count * next.price\r\n    }, 0)\r\n  }\r\n\r\n  //save to db on checkout\r\n  const saveOrderToDb = () => {\r\n    console.log('saving to db')\r\n    userCart(cart, user.token)\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.data.ok) {\r\n          history.push('/checkout')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('cart save error', error)\r\n      })\r\n  }\r\n\r\n  //change color or select a new color\r\n  const handleColorChange = (e, productId) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === productId) {\r\n          cart[i].color = e.target.value\r\n        }\r\n      })\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n\r\n      dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n    }\r\n  }\r\n\r\n  //Change Quantity\r\n  const handleQuantityChange = (e, productId, quantity) => {\r\n    console.log(quantity)\r\n    if (e.target.value > 4) {\r\n      e.target.value = 4\r\n    }\r\n    if (e.target.value === '' || e.target.value === '0') {\r\n      e.target.value = 1\r\n    }\r\n    if (quantity < e.target.value) {\r\n      toast.error(`Max Quantity Available ${quantity}`)\r\n      return\r\n    }\r\n\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === productId) {\r\n          cart[i].count = e.target.value\r\n        }\r\n      })\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n\r\n      dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n    }\r\n  }\r\n\r\n  //Remove Item\r\n  const handleRemove = (productId) => {\r\n    console.log(productId)\r\n\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === productId) {\r\n          cart.splice(i, 1)\r\n        }\r\n      })\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n\r\n      dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className='mt-5'>\r\n      <div className='row'>\r\n        <div className='col-lg-8'>\r\n          <div className='mb-3'>\r\n            <div className='pt-4 wish-list'>\r\n              <h5 className='mb-4 ml-4 '>\r\n                Cart (<span>{cart.length}</span> items)\r\n              </h5>\r\n\r\n              {cart.length === 0 ? (\r\n                <>\r\n                  <h4 className='ml-2 text-center mb-4'>\r\n                    No products in the cart,&nbsp;\r\n                    <Link to='/shop'>continue shopping</Link>\r\n                  </h4>\r\n                  <h4 className='text-center'>\r\n                    {' '}\r\n                    <i className='fas fa-cart-arrow-down fa-5x'></i>\r\n                  </h4>\r\n                  <br />\r\n                </>\r\n              ) : (\r\n                cart.map((data, index) => (\r\n                  <div className='row mb-4 ml-2' key={index}>\r\n                    <div className='col-md-5 col-lg-3 col-xl-3'>\r\n                      <div className='view zoom overlay z-depth-1 rounded mb-3 mb-md-0'>\r\n                        <img\r\n                          className='img-fluid w-90'\r\n                          src={data.images[0].url}\r\n                          alt='Sample'\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-7 col-lg-8 col-xl-8'>\r\n                      <div>\r\n                        <div className='d-flex justify-content-between'>\r\n                          <div>\r\n                            <Link to={`/product/${data.slug}`}>\r\n                              {' '}\r\n                              <h5>{data.title}</h5>\r\n                            </Link>\r\n                            <p className='mb-3 text-muted text-uppercase small'>\r\n                              {data.brand}\r\n                            </p>\r\n                            <p className='mb-2 text-muted text-uppercase small'>\r\n                              Color:{' '}\r\n                              <span>\r\n                                <select\r\n                                  name='color'\r\n                                  id=''\r\n                                  onChange={(e) =>\r\n                                    handleColorChange(e, data._id)\r\n                                  }\r\n                                  className='form-control col-md-2 col-xs-2'\r\n                                >\r\n                                  {data.color ? (\r\n                                    <option value={data.color}>\r\n                                      {data.color}\r\n                                    </option>\r\n                                  ) : (\r\n                                    <option>Select a color</option>\r\n                                  )}\r\n                                  {colors\r\n                                    .filter((c) => c !== data.color)\r\n                                    .map((c) => (\r\n                                      <option value={c} key={c}>\r\n                                        {c}\r\n                                      </option>\r\n                                    ))}\r\n                                </select>\r\n                              </span>\r\n                            </p>\r\n                            <br />\r\n                            <br />\r\n                          </div>\r\n                          <div>\r\n                            <div className='def-number-input number-input safari_only mb-0 w-100'>\r\n                              <input\r\n                                className='form-control'\r\n                                min='1'\r\n                                max='4'\r\n                                name='quantity'\r\n                                type='number'\r\n                                defaultValue={data.count}\r\n                                onChange={(e) =>\r\n                                  handleQuantityChange(\r\n                                    e,\r\n                                    data._id,\r\n                                    data.quantity\r\n                                  )\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <small\r\n                              id='passwordHelpBlock'\r\n                              className='form-text text-muted text-center'\r\n                            >\r\n                              (Note, {data.count} piece)\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between align-items-center'>\r\n                          <div>\r\n                            <a\r\n                              type='button'\r\n                              className='card-link-secondary small text-uppercase mr-3 text-danger'\r\n                              onClick={(e) => handleRemove(data._id)}\r\n                            >\r\n                              <i className='fas fa-trash-alt mr-1'></i> Remove\r\n                              item{' '}\r\n                            </a>\r\n                            <a\r\n                              href='#!'\r\n                              type='button'\r\n                              className='card-link-secondary small text-uppercase'\r\n                            >\r\n                              <i className='fas fa-heart mr-1'></i> Move to wish\r\n                              list{' '}\r\n                            </a>\r\n                          </div>\r\n                          <p className='mb-0'>\r\n                            <span>\r\n                              <strong id='summary'>${data.price}</strong>\r\n                            </span>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n              <hr className='mb-4' />\r\n\r\n              <p className='text-primary mb-0'>\r\n                <i className='fas fa-info-circle mr-1 ml-2'></i> Do not delay\r\n                the purchase, adding items to your cart does not mean booking\r\n                them.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-3 ml-2'>\r\n            <div className='pt-4'>\r\n              <h5 className='mb-4'>Expected shipping delivery</h5>\r\n\r\n              <p className='mb-0'> Depends on the availabity</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-3 ml-3'>\r\n            <div className='pt-4'>\r\n              <h5 className='mb-4'>We accept</h5>\r\n              <img\r\n                className='mr-2'\r\n                width='45px'\r\n                src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg'\r\n                alt='Visa'\r\n              />\r\n              <img\r\n                className='mr-2'\r\n                width='45px'\r\n                src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg'\r\n                alt='American Express'\r\n              />\r\n              <img\r\n                className='mr-2'\r\n                width='45px'\r\n                src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg'\r\n                alt='Mastercard'\r\n              />\r\n              <img\r\n                className='mr-2'\r\n                width='45px'\r\n                src='https://mdbootstrap.com/wp-content/plugins/woocommerce/includes/gateways/paypal/assets/images/paypal.png'\r\n                alt='PayPal acceptance mark'\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='col-lg-4 mt-2'>\r\n          <div className='mb-3'>\r\n            <div className='pt-4'>\r\n              <h5 className='mb-3 alert alert-dark'>Price Details</h5>\r\n              <hr />\r\n\r\n              <ul className='list-group list-group-flush'>\r\n                {cart.length > 0 ? (\r\n                  cart.map((c, i) => (\r\n                    <div key={i}>\r\n                      <li className='list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0'>\r\n                        {c.title} x {c.count}\r\n                        <span>${c.price * c.count}</span>\r\n                      </li>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <li>No items in cart</li>\r\n                )}\r\n                <li className='list-group-item d-flex justify-content-between align-items-center px-0'>\r\n                  Shipping\r\n                  {cart.length > 0 ? (\r\n                    getTotal() > 90 ? (\r\n                      <span>free</span>\r\n                    ) : (\r\n                      <span>$10</span>\r\n                    )\r\n                  ) : (\r\n                    <span>no items </span>\r\n                  )}\r\n                </li>\r\n                <li className='list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3'>\r\n                  <div>\r\n                    <strong>The total amount of</strong>\r\n                    <strong>\r\n                      <p className='mb-0'>(including VAT)</p>\r\n                    </strong>\r\n                  </div>\r\n                  <span>\r\n                    {cart.length > 0 ? (\r\n                      <strong>${getTotal()}</strong>\r\n                    ) : (\r\n                      <strong>0</strong>\r\n                    )}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n              {user ? (\r\n                <button\r\n                  type='button'\r\n                  className='text-center btn btn-primary btn-raised btn-block'\r\n                  disabled={!cart.length}\r\n                  onClick={saveOrderToDb}\r\n                >\r\n                  go to checkout\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-outline-primary btn-block'\r\n                >\r\n                  <Link to={{ pathname: '/login', state: { from: 'cart' } }}>\r\n                    {' '}\r\n                    Login to continue\r\n                  </Link>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-2 ml-1'>\r\n            <div className='pt-4'>\r\n              <p className='text-info mb-0'>\r\n                <i class='fas fa-receipt'></i>&nbsp;&nbsp;coupons can be applied\r\n                on the next page\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","D:\\MYCART\\client\\src\\reducers\\drawerReducer.js",[],"D:\\MYCART\\client\\src\\components\\drawer\\SideDrawer.js",["358","359","360"],"import React from 'react'\r\nimport { Drawer, Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport laptop from '../../images/laptop.png'\r\n\r\nconst SideDrawer = () => {\r\n  //redux\r\n  const { drawer, cart } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  const imageStyle = {\r\n    width: '100%',\r\n    height: '50px',\r\n    objectFit: 'cover',\r\n  }\r\n  return (\r\n    <Drawer\r\n      visible={drawer}\r\n      onClose={() => {\r\n        dispatch({ type: 'DRAWER_TOGGLE', payload: false })\r\n      }}\r\n      className='mt-5 text-center'\r\n      title={`Cart (${cart.length} items)`}\r\n      closable={false}\r\n    >\r\n      {cart.map((p) => (\r\n        <div className='row mb-2' key={p._id}>\r\n          <div className='col'>\r\n            {p.images[0] ? (\r\n              <>\r\n                <img src={p.images[0].url} style={imageStyle}></img>\r\n                <p className='form-text  text-center'>\r\n                  {p.title} x {p.count}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <img src={laptop} style={imageStyle}></img>\r\n                <p className='form-text text-muted text-center'>\r\n                  {p.title} x {p.count}\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Link to={`/cart`}>\r\n        <button\r\n          onClick={() => dispatch({ type: 'DRAWER_TOGGLE', payload: false })}\r\n          className='text-center btn btn-primary btn-raised btn-block'\r\n        >\r\n          Go to Cart\r\n        </button>\r\n      </Link>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default SideDrawer\r\n","D:\\MYCART\\client\\src\\pages\\Checkout.js",["361","362","363","364","365"],"import React, { useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport Address from '../components/cards/Address'\r\nimport { getUserCart, saveAddress } from '../functions/user'\r\n\r\nconst Checkout = ({ history }) => {\r\n  //redux state\r\n  const { user, cart, userAddress } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  //address states\r\n  //first Name\r\n  const [firstName, setFirstName] = useState('')\r\n  //last Name\r\n  const [lastName, setLastName] = useState('')\r\n  //Address\r\n  const [address, setAddress] = useState('')\r\n  //zip\r\n  const [zip, setZip] = useState('')\r\n  //city\r\n  const [city, setCity] = useState('')\r\n  //state\r\n  const [state, setState] = useState('')\r\n  //phone\r\n  const [phone, setPhone] = useState('')\r\n  //email\r\n  const [email, setEmail] = useState(user.email)\r\n  //type of address\r\n  const [addressType, setAddressType] = useState('home')\r\n  //address saved\r\n  const [addressSaved, setSavedAddress] = useState(false)\r\n  //user addresses\r\n  const [savedUserAddresses, setSavedUserAddresses] = useState([])\r\n\r\n  //received cart state\r\n  const [products, setProducts] = useState([])\r\n  const [total, setTotal] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (cart.length == 0) {\r\n      history.push('/')\r\n    }\r\n\r\n    getUserCart(user.token)\r\n      .then((res) => {\r\n        if (res == null) {\r\n          toast.error('oops something wrong happened pls go bakc and try again')\r\n        } else {\r\n          console.log(res.data)\r\n          if (res.data.addresses !== null) {\r\n            setSavedUserAddresses(res.data.orderedBy.addresses)\r\n          }\r\n          setProducts(res.data.products)\r\n          setTotal(res.data.cartTotal)\r\n        }\r\n      })\r\n      .catch((error) => toast.error('something happened pls go back'))\r\n  }, [addressSaved])\r\n\r\n  const checkPin = async () => {\r\n    console.log(zip)\r\n    if (zip.length < 6) {\r\n      toast.error('zip code should be 6 characters long')\r\n      return\r\n    }\r\n    // const back = `https://cors-anywhere.herokuapp.com/`\r\n    const { data } = await axios.post(`/api/zip`, { zip })\r\n    console.log(data)\r\n    if (data.Status === 'Success') {\r\n      setCity(data.PostOffice[0].Division)\r\n      setState(data.PostOffice[0].State)\r\n    } else if (data.Status == 'Error') {\r\n      toast.error('Please provide a valid pin code')\r\n    } else {\r\n      toast.error('something went wrong pls try again')\r\n    }\r\n  }\r\n\r\n  const saveAddressToDb = (e) => {\r\n    e.preventDefault()\r\n\r\n    const addressToSave = {\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      zip,\r\n      state,\r\n      city,\r\n      phone,\r\n      email,\r\n      addressType,\r\n    }\r\n    saveAddress(user.token, addressToSave).then((res) => {\r\n      if (res == null) {\r\n        toast.error('oops something went wrong, pls try again')\r\n      } else if (res.data.message == 'address successfully saved') {\r\n        toast.success(res.data.message)\r\n        dispatch({\r\n          type: 'CHECKOUT_ADDRESS_SAVED',\r\n          payload: {\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            zip,\r\n            state,\r\n            city,\r\n            phone,\r\n            email,\r\n            addressType,\r\n          },\r\n        })\r\n        setSavedAddress(!addressSaved)\r\n      } else {\r\n        toast.error(res.data.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  const checking = () => {\r\n    console.log('ok')\r\n  }\r\n  return (\r\n    <>\r\n      <br />\r\n\r\n      <section className='mt-5 ml-4'>\r\n        <div className='row'>\r\n          <div className='col-lg-8 mb-4'>\r\n            <div className='card wish-list pb-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={saveAddressToDb}>\r\n                  <h5 className='mb-2'>Billing details</h5>\r\n\r\n                  <div className='row'>\r\n                    <div className='col-lg-6'>\r\n                      <div className='md-form md-outline mb-0 mb-lg-4'>\r\n                        <input\r\n                          type='text'\r\n                          name='firstName'\r\n                          className='form-control mb-0 mb-lg-2'\r\n                          title='Only alphabets are allowed'\r\n                          pattern='^[A-Za-z]+$'\r\n                          value={firstName}\r\n                          onChange={(e) => setFirstName(e.target.value)}\r\n                          required\r\n                        />\r\n                        <label for='firstName'>\r\n                          First name<sup>*</sup>\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-6'>\r\n                      <div className='md-form md-outline'>\r\n                        <input\r\n                          type='text'\r\n                          name='lastName'\r\n                          className='form-control'\r\n                          title='Only alphabets are allowed'\r\n                          pattern='^[A-Za-z]+$'\r\n                          value={lastName}\r\n                          onChange={(e) => setLastName(e.target.value)}\r\n                          required\r\n                        />\r\n                        <label htmlFor='lastName'>\r\n                          Last name<sup>*</sup>\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className='d-flex flex-wrap'>\r\n                  <div className='select-outline position-relative w-100'>\r\n                    <select className='mdb-select md-form md-outline form-control'>\r\n                      <option value='' disabled selected>\r\n                        Choose your option\r\n                      </option>\r\n                      <option value='1'>Option 1</option>\r\n                      <option value='2'>Option 2</option>\r\n                      <option value='3'>Option 3</option>\r\n                    </select>\r\n                    <label>Country</label>\r\n                  </div>\r\n                </div>\r\n                <br /> */}\r\n\r\n                  <div className='md-form md-outline mt-0'>\r\n                    <input\r\n                      type='text'\r\n                      name='address1'\r\n                      // placeholder='House number and street name'\r\n                      className='form-control'\r\n                      value={address}\r\n                      onChange={(e) => setAddress(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor='address1'>\r\n                      House number and street name<sup>*</sup>\r\n                    </label>\r\n                  </div>\r\n                  <br />\r\n\r\n                  {/* <div className='md-form md-outline'>\r\n                    <input\r\n                      type='text'\r\n                      name='address2'\r\n                      // placeholder='Apartment, suite, unit etc. (optional)'\r\n                      className='form-control'\r\n                    />\r\n                    <label for='address2'>\r\n                      Apartment, suite, unit etc. (optional)\r\n                    </label>\r\n                  </div> */}\r\n\r\n                  <div className='md-form md-outline mb-2'>\r\n                    <input\r\n                      type='text'\r\n                      name='zip'\r\n                      className='form-control'\r\n                      pattern='^[1-9][0-9]{5}$'\r\n                      title='Invalid pincode'\r\n                      value={zip}\r\n                      onChange={(e) => setZip(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor='zip'>\r\n                      Postcode / ZIP<sup>*</sup>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <button\r\n                    type='button'\r\n                    className='text-center btn btn-info btn-raised btn-sm'\r\n                    disabled={!zip}\r\n                    onClick={() => checkPin()}\r\n                  >\r\n                    Check pincode\r\n                  </button>\r\n                  <br />\r\n                  <br />\r\n\r\n                  <div className='md-form md-outline'>\r\n                    <input\r\n                      type='text'\r\n                      name='city'\r\n                      className='form-control'\r\n                      //   pattern='^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$'\r\n                      //   title='please provide a valid city name'\r\n                      readonly='readonly'\r\n                      value={city}\r\n                    />\r\n                    <label htmlFor='city'>Town / City</label>\r\n                  </div>\r\n                  <br />\r\n                  <div className='md-form md-outline my-0'>\r\n                    <input\r\n                      type='text'\r\n                      name='companyName'\r\n                      className='form-control mb-0'\r\n                      readonly='readonly'\r\n                      value={state}\r\n                    />\r\n                    <label htmlFor='companyName'>state</label>\r\n                  </div>\r\n\r\n                  <div className='md-form md-outline'>\r\n                    <input\r\n                      type='tel'\r\n                      name='phone'\r\n                      className='form-control'\r\n                      pattern='^[6-9]\\d{9}$'\r\n                      title='Please provide  a valid number'\r\n                      value={phone}\r\n                      onChange={(e) => setPhone(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor='phone'>\r\n                      Phone<sup>*</sup>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className='md-form md-outline'>\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      className='form-control'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor='email'>\r\n                      Email address<sup>*</sup>\r\n                    </label>\r\n                  </div>\r\n                  <br />\r\n                  <div class='d-flex flex-wrap'>\r\n                    <div class='select-outline position-relative w-100'>\r\n                      <select\r\n                        class='mdb-select md-form md-outline form-control'\r\n                        value={addressType}\r\n                        onChange={(e) => setAddressType(e.target.value)}\r\n                      >\r\n                        <option defaultValue='' disabled selected>\r\n                          Select an Address Type\r\n                        </option>\r\n                        <option defaultValue='home'>home</option>\r\n                        <option defaultValue='office'>office</option>\r\n                      </select>\r\n                      <label>Address type</label>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <div className='form-check pl-0 mb-4 mb-lg-0'>\r\n                    <button\r\n                      type='submit'\r\n                      className='text-center btn btn-primary btn-raised '\r\n                      disabled={\r\n                        !(zip && city && state && address && phone && email)\r\n                      }\r\n                    >\r\n                      save Address\r\n                    </button>\r\n                  </div>\r\n                  <br />\r\n                  <p className='text-primary mb-0'>\r\n                    <sup>*</sup> required fields\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-lg-4'>\r\n            <div className='card mb-4'>\r\n              <div className='card-body'>\r\n                <h5 className='mb-3'>Order Summary</h5>\r\n\r\n                <ul className='list-group list-group-flush'>\r\n                  {products.length > 0 ? (\r\n                    products.map((c, i) => (\r\n                      <div key={i}>\r\n                        <li className='list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0'>\r\n                          {c.product.title} ({c.color})&nbsp;x {c.count}\r\n                          <span>${c.price * c.count}</span>\r\n                        </li>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <li>No items in cart, add some items to show here</li>\r\n                  )}\r\n                  <li className='list-group-item d-flex justify-content-between align-items-center px-0'>\r\n                    Shipping\r\n                    {products.length > 0 ? (\r\n                      <span>free</span>\r\n                    ) : (\r\n                      <span>no items </span>\r\n                    )}\r\n                  </li>\r\n                  <li className='list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3'>\r\n                    <div>\r\n                      <strong>The total amount of</strong>\r\n                      <strong>\r\n                        <p className='mb-0'>(including VAT)</p>\r\n                      </strong>\r\n                    </div>\r\n                    <span>\r\n                      <strong>{total ? total : 'no items in cart'}</strong>\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n\r\n                <button\r\n                  type='button'\r\n                  className='text-center btn btn-primary btn-raised btn-block'\r\n                  disabled={!savedUserAddresses.length > 0}\r\n                  onClick={() => checking()}\r\n                >\r\n                  Place Order\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='card mb-4'>\r\n              <div className='card-body'>\r\n                <a\r\n                  className='dark-grey-text d-flex justify-content-between'\r\n                  data-toggle='collapse'\r\n                  href='#collapseExample'\r\n                  aria-expanded='false'\r\n                  aria-controls='collapseExample'\r\n                >\r\n                  Add a discount code (optional)\r\n                  <span>\r\n                    <i className='fas fa-chevron-down pt-1'></i>\r\n                  </span>\r\n                </a>\r\n\r\n                <div className='collapse' id='collapseExample'>\r\n                  <div className='mt-3'>\r\n                    <div className='md-form md-outline mb-0'>\r\n                      <input\r\n                        type='text'\r\n                        id='discount-code'\r\n                        className='form-control font-weight-light'\r\n                        placeholder='Enter discount code'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <h5>Your addresses</h5>\r\n\r\n        {savedUserAddresses.length > 0 ? (\r\n          <div className='row mt-4 ml-1 mb-3'>\r\n            {savedUserAddresses.map((data, i) => (\r\n              <div className='col-md-3'>\r\n                <Address\r\n                  data={data}\r\n                  setSavedAddress={setSavedAddress}\r\n                  addressSaved={addressSaved}\r\n                  authToken={user.token}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Checkout\r\n","D:\\MYCART\\client\\src\\functions\\user.js",[],"D:\\MYCART\\client\\src\\components\\cards\\Address.js",["366"],"import React from 'react'\r\nimport { deleteAddress } from '../../functions/user'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst Address = ({ data, setSavedAddress, addressSaved, authToken }) => {\r\n  const { userAddress } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n  let { _id, ...selectedAddress } = data\r\n\r\n  //remove an address\r\n  const removeAddress = () => {\r\n    console.log(data)\r\n\r\n    const wannaDelete = window.confirm('do u wanna delete this address')\r\n    if (wannaDelete) {\r\n      deleteAddress(authToken, data).then((res) => {\r\n        console.log(res)\r\n        if ((res.data = 'ok')) {\r\n          toast.success('Address successfully deleted')\r\n          setSavedAddress(!addressSaved)\r\n        } else if (res.data == null) {\r\n          toast.error('oops something went wrong, try again later')\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  //select an address for delivery\r\n  const selectAddress = () => {\r\n    dispatch({ type: 'CHECKOUT_ADDRESS_SAVED', payload: selectedAddress })\r\n  }\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-body'>\r\n        <strong className='card-title h5'>\r\n          {data.firstName}&nbsp; {data.lastName}\r\n        </strong>\r\n        <p className='card-text'>{data.address}</p>\r\n        <p className='card-text'>{data.zip}</p>\r\n        <p className='card-text'>{data.city}</p>\r\n        <p className='card-text'>{data.state}</p>\r\n        <p className='card-text'>{data.phone}</p>\r\n        <button\r\n          type='button'\r\n          className='text-center btn btn-primary btn-raised btn-block'\r\n          onClick={() => selectAddress()}\r\n        >\r\n          Deliver to this address\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='text-center btn btn-danger btn-raised btn-sm mt-3'\r\n          onClick={() => removeAddress()}\r\n        >\r\n          Delete address\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Address\r\n","D:\\MYCART\\client\\src\\reducers\\addressReducer.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js",["367"],"D:\\MYCART\\client\\src\\functions\\coupon.js",[],{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","severity":1,"message":"373","line":11,"column":3,"nodeType":"374","messageId":"375","endLine":11,"endColumn":19},{"ruleId":"372","severity":1,"message":"376","line":1,"column":17,"nodeType":"374","messageId":"375","endLine":1,"endColumn":25},{"ruleId":"372","severity":1,"message":"377","line":1,"column":27,"nodeType":"374","messageId":"375","endLine":1,"endColumn":36},{"ruleId":"378","severity":1,"message":"379","line":18,"column":6,"nodeType":"380","endLine":18,"endColumn":8,"suggestions":"381"},{"ruleId":"382","severity":1,"message":"383","line":59,"column":68,"nodeType":"384","messageId":"385","endLine":59,"endColumn":70},{"ruleId":"378","severity":1,"message":"386","line":21,"column":6,"nodeType":"380","endLine":21,"endColumn":8,"suggestions":"387"},{"ruleId":"382","severity":1,"message":"383","line":70,"column":68,"nodeType":"384","messageId":"385","endLine":70,"endColumn":70},{"ruleId":"378","severity":1,"message":"388","line":48,"column":6,"nodeType":"380","endLine":48,"endColumn":8,"suggestions":"389"},{"ruleId":"372","severity":1,"message":"390","line":63,"column":5,"nodeType":"374","messageId":"375","endLine":63,"endColumn":13},{"ruleId":"372","severity":1,"message":"391","line":65,"column":5,"nodeType":"374","messageId":"375","endLine":65,"endColumn":13},{"ruleId":"372","severity":1,"message":"392","line":67,"column":5,"nodeType":"374","messageId":"375","endLine":67,"endColumn":11},{"ruleId":"372","severity":1,"message":"393","line":70,"column":5,"nodeType":"374","messageId":"375","endLine":70,"endColumn":10},{"ruleId":"372","severity":1,"message":"394","line":71,"column":5,"nodeType":"374","messageId":"375","endLine":71,"endColumn":10},{"ruleId":"395","severity":1,"message":"396","line":14,"column":9,"nodeType":"397","endLine":18,"endColumn":11},{"ruleId":"372","severity":1,"message":"398","line":44,"column":5,"nodeType":"374","messageId":"375","endLine":44,"endColumn":9},{"ruleId":"372","severity":1,"message":"392","line":47,"column":5,"nodeType":"374","messageId":"375","endLine":47,"endColumn":11},{"ruleId":"378","severity":1,"message":"399","line":57,"column":6,"nodeType":"380","endLine":57,"endColumn":8,"suggestions":"400"},{"ruleId":"401","severity":1,"message":"402","line":81,"column":31,"nodeType":"403","messageId":"404","endLine":81,"endColumn":33},{"ruleId":"372","severity":1,"message":"405","line":13,"column":10,"nodeType":"374","messageId":"375","endLine":13,"endColumn":21},{"ruleId":"372","severity":1,"message":"406","line":21,"column":11,"nodeType":"374","messageId":"375","endLine":21,"endColumn":15},{"ruleId":"372","severity":1,"message":"407","line":21,"column":17,"nodeType":"374","messageId":"375","endLine":21,"endColumn":21},{"ruleId":"395","severity":1,"message":"396","line":50,"column":11,"nodeType":"397","endLine":54,"endColumn":13},{"ruleId":"408","severity":1,"message":"409","line":65,"column":15,"nodeType":"397","endLine":69,"endColumn":16},{"ruleId":"408","severity":1,"message":"409","line":75,"column":15,"nodeType":"397","endLine":75,"endColumn":18},{"ruleId":"378","severity":1,"message":"410","line":15,"column":6,"nodeType":"380","endLine":15,"endColumn":12,"suggestions":"411"},{"ruleId":"378","severity":1,"message":"410","line":15,"column":6,"nodeType":"380","endLine":15,"endColumn":12,"suggestions":"412"},{"ruleId":"378","severity":1,"message":"413","line":22,"column":6,"nodeType":"380","endLine":22,"endColumn":12,"suggestions":"414"},{"ruleId":"372","severity":1,"message":"406","line":37,"column":11,"nodeType":"374","messageId":"375","endLine":37,"endColumn":15},{"ruleId":"372","severity":1,"message":"407","line":37,"column":17,"nodeType":"374","messageId":"375","endLine":37,"endColumn":21},{"ruleId":"395","severity":1,"message":"396","line":69,"column":36,"nodeType":"397","endLine":69,"endColumn":79},{"ruleId":"408","severity":1,"message":"409","line":103,"column":17,"nodeType":"397","endLine":107,"endColumn":18},{"ruleId":"408","severity":1,"message":"409","line":112,"column":17,"nodeType":"397","endLine":112,"endColumn":20},{"ruleId":"372","severity":1,"message":"415","line":11,"column":5,"nodeType":"374","messageId":"375","endLine":11,"endColumn":13},{"ruleId":"372","severity":1,"message":"416","line":12,"column":5,"nodeType":"374","messageId":"375","endLine":12,"endColumn":9},{"ruleId":"372","severity":1,"message":"417","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":14},{"ruleId":"372","severity":1,"message":"418","line":2,"column":17,"nodeType":"374","messageId":"375","endLine":2,"endColumn":23},{"ruleId":"372","severity":1,"message":"419","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":15},{"ruleId":"401","severity":1,"message":"402","line":10,"column":31,"nodeType":"403","messageId":"404","endLine":10,"endColumn":33},{"ruleId":"378","severity":1,"message":"420","line":22,"column":6,"nodeType":"380","endLine":22,"endColumn":8,"suggestions":"421"},{"ruleId":"372","severity":1,"message":"417","line":6,"column":10,"nodeType":"374","messageId":"375","endLine":6,"endColumn":14},{"ruleId":"378","severity":1,"message":"420","line":23,"column":6,"nodeType":"380","endLine":23,"endColumn":8,"suggestions":"422"},{"ruleId":"372","severity":1,"message":"423","line":16,"column":18,"nodeType":"374","messageId":"375","endLine":16,"endColumn":27},{"ruleId":"372","severity":1,"message":"424","line":27,"column":18,"nodeType":"374","messageId":"375","endLine":27,"endColumn":27},{"ruleId":"372","severity":1,"message":"425","line":40,"column":9,"nodeType":"374","messageId":"375","endLine":40,"endColumn":17},{"ruleId":"382","severity":1,"message":"383","line":85,"column":17,"nodeType":"384","messageId":"385","endLine":85,"endColumn":19},{"ruleId":"382","severity":1,"message":"383","line":90,"column":31,"nodeType":"384","messageId":"385","endLine":90,"endColumn":33},{"ruleId":"382","severity":1,"message":"383","line":98,"column":31,"nodeType":"384","messageId":"385","endLine":98,"endColumn":33},{"ruleId":"382","severity":1,"message":"383","line":99,"column":24,"nodeType":"384","messageId":"385","endLine":99,"endColumn":26},{"ruleId":"382","severity":1,"message":"383","line":103,"column":21,"nodeType":"384","messageId":"385","endLine":103,"endColumn":23},{"ruleId":"378","severity":1,"message":"426","line":106,"column":6,"nodeType":"380","endLine":106,"endColumn":10,"suggestions":"427"},{"ruleId":"382","severity":1,"message":"383","line":146,"column":29,"nodeType":"384","messageId":"385","endLine":146,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":149,"column":17,"nodeType":"384","messageId":"385","endLine":149,"endColumn":19},{"ruleId":"382","severity":1,"message":"383","line":152,"column":31,"nodeType":"384","messageId":"385","endLine":152,"endColumn":33},{"ruleId":"382","severity":1,"message":"383","line":161,"column":31,"nodeType":"384","messageId":"385","endLine":161,"endColumn":33},{"ruleId":"382","severity":1,"message":"383","line":164,"column":24,"nodeType":"384","messageId":"385","endLine":164,"endColumn":26},{"ruleId":"382","severity":1,"message":"428","line":219,"column":14,"nodeType":"384","messageId":"385","endLine":219,"endColumn":16},{"ruleId":"382","severity":1,"message":"383","line":224,"column":29,"nodeType":"384","messageId":"385","endLine":224,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":227,"column":22,"nodeType":"384","messageId":"385","endLine":227,"endColumn":24},{"ruleId":"401","severity":1,"message":"402","line":43,"column":29,"nodeType":"403","messageId":"404","endLine":43,"endColumn":31},{"ruleId":"401","severity":1,"message":"402","line":75,"column":29,"nodeType":"403","messageId":"404","endLine":75,"endColumn":31},{"ruleId":"401","severity":1,"message":"402","line":97,"column":29,"nodeType":"403","messageId":"404","endLine":97,"endColumn":31},{"ruleId":"408","severity":1,"message":"409","line":213,"column":29,"nodeType":"397","endLine":217,"endColumn":30},{"ruleId":"372","severity":1,"message":"418","line":2,"column":18,"nodeType":"374","messageId":"375","endLine":2,"endColumn":24},{"ruleId":"395","severity":1,"message":"396","line":32,"column":17,"nodeType":"397","endLine":32,"endColumn":63},{"ruleId":"395","severity":1,"message":"396","line":39,"column":17,"nodeType":"397","endLine":39,"endColumn":54},{"ruleId":"372","severity":1,"message":"429","line":10,"column":23,"nodeType":"374","messageId":"375","endLine":10,"endColumn":34},{"ruleId":"382","severity":1,"message":"383","line":42,"column":21,"nodeType":"384","messageId":"385","endLine":42,"endColumn":23},{"ruleId":"378","severity":1,"message":"430","line":60,"column":6,"nodeType":"380","endLine":60,"endColumn":20,"suggestions":"431"},{"ruleId":"382","severity":1,"message":"383","line":74,"column":28,"nodeType":"384","messageId":"385","endLine":74,"endColumn":30},{"ruleId":"382","severity":1,"message":"383","line":98,"column":35,"nodeType":"384","messageId":"385","endLine":98,"endColumn":37},{"ruleId":"372","severity":1,"message":"429","line":7,"column":11,"nodeType":"374","messageId":"375","endLine":7,"endColumn":22},{"ruleId":"372","severity":1,"message":"432","line":2,"column":23,"nodeType":"374","messageId":"375","endLine":2,"endColumn":34},"no-native-reassign",["433"],"no-negated-in-lhs",["434"],"no-unused-vars","'ShoppingOutlined' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.","ArrayExpression",["435"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["437"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'subs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["438"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'userReducer' is defined but never used.","'user' is assigned a value but never used.","'cart' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["439"],["440"],"React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["441"],"'quantity' is assigned a value but never used.","'sold' is assigned a value but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["442"],["443"],"'ItemGroup' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'brand', 'categoryId', 'price', 'star', 'tempProducts', and 'text'. Either include them or remove the dependency array.",["444"],"Expected '!==' and instead saw '!='.","'userAddress' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cart.length', 'history', and 'user.token'. Either include them or remove the dependency array.",["445"],"'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"454","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"459","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},"Update the dependencies array to be: [loadCategory]",{"range":"466","text":"467"},"Update the dependencies array to be: [loadSub]",{"range":"468","text":"469"},"Update the dependencies array to be: [loadCategories]",{"range":"470","text":"471"},"Update the dependencies array to be: [loadProduct]",{"range":"472","text":"473"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"474","text":"475"},{"range":"476","text":"475"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"477","text":"478"},"Update the dependencies array to be: [slug]",{"range":"479","text":"480"},{"range":"481","text":"480"},"Update the dependencies array to be: [brand, categoryId, ok, price, star, tempProducts, text]",{"range":"482","text":"483"},"Update the dependencies array to be: [addressSaved, cart.length, history, user.token]",{"range":"484","text":"485"},[547,549],"[loadCategory]",[782,784],"[loadSub]",[1292,1294],"[loadCategories]",[1675,1677],"[loadProduct]",[569,575],"[loadAllProducts, page]",[569,575],[753,759],"[loadSingleProduct, slug]",[694,696],"[slug]",[683,685],[3147,3151],"[brand, categoryId, ok, price, star, tempProducts, text]",[1895,1909],"[addressSaved, cart.length, history, user.token]"]