[{"D:\\MYCART\\client\\src\\index.js":"1","D:\\MYCART\\client\\src\\App.js":"2","D:\\MYCART\\client\\src\\reportWebVitals.js":"3","D:\\MYCART\\client\\src\\pages\\auth\\Register.js":"4","D:\\MYCART\\client\\src\\pages\\auth\\Login.js":"5","D:\\MYCART\\client\\src\\pages\\Home.js":"6","D:\\MYCART\\client\\src\\components\\nav\\Header.js":"7","D:\\MYCART\\client\\src\\firebase.js":"8","D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js":"9","D:\\MYCART\\client\\src\\reducers\\index.js":"10","D:\\MYCART\\client\\src\\reducers\\userReducer.js":"11","D:\\MYCART\\client\\src\\components\\Loader.js":"12","D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js":"13"},{"size":867,"mtime":1610972203848,"results":"14","hashOfConfig":"15"},{"size":1555,"mtime":1610996477310,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1605,"mtime":1610998686090,"results":"18","hashOfConfig":"15"},{"size":4106,"mtime":1611144790081,"results":"19","hashOfConfig":"15"},{"size":154,"mtime":1610737789154,"results":"20","hashOfConfig":"15"},{"size":2031,"mtime":1610989361466,"results":"21","hashOfConfig":"15"},{"size":657,"mtime":1610870674636,"results":"22","hashOfConfig":"15"},{"size":2186,"mtime":1610872303532,"results":"23","hashOfConfig":"15"},{"size":183,"mtime":1610878874297,"results":"24","hashOfConfig":"15"},{"size":259,"mtime":1610878848121,"results":"25","hashOfConfig":"15"},{"size":405,"mtime":1610971831271,"results":"26","hashOfConfig":"15"},{"size":1891,"mtime":1610998375406,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zylff0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"D:\\MYCART\\client\\src\\index.js",[],["62","63"],"D:\\MYCART\\client\\src\\App.js",["64"],"import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css' //css for toastify pop ups\n\nimport Home from './pages/Home'\nimport Login from './pages/auth/Login'\nimport Register from './pages/auth/Register'\nimport Header from './components/nav/Header'\nimport RegisterComplete from './pages/auth/RegisterComplete'\nimport ForgotPassword from './pages/auth/ForgotPassword'\n\nimport { auth } from './firebase'\nimport { useDispatch } from 'react-redux'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult()\n        // console.log('user ', user)\n        dispatch({\n          type: 'LOGGED_IN_USER',\n          payload: {\n            email: user.email,\n            token: idTokenResult.token,\n          },\n        })\n      }\n    })\n\n    //unsubscribe\n\n    return () => unsubscribe()\n  }, [])\n\n  return (\n    <Router>\n      <Header />\n      <ToastContainer />\n      <Switch>\n        <Route path='/' component={Home} exact />\n        <Route path='/login' component={Login} exact />\n        <Route path='/register' component={Register} exact />\n        <Route path='/register/complete' component={RegisterComplete} exact />\n        <Route path='/forgot/password' component={ForgotPassword} exact />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","D:\\MYCART\\client\\src\\reportWebVitals.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\Register.js",["65"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Register = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/')\r\n    }\r\n  }, [user])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const config = {\r\n      url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n      handleCodeInApp: true,\r\n    }\r\n\r\n    await auth.sendSignInLinkToEmail(email, config)\r\n    toast.success(\r\n      `Email is sent to ${email} click the link to complete your registration`\r\n    )\r\n\r\n    //save user emial to local storage\r\n    window.localStorage.setItem('emailForRegistration', email)\r\n\r\n    //Reset state\r\n    setEmail('')\r\n  }\r\n\r\n  const registerForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='email'\r\n        className='form-control'\r\n        value={email}\r\n        placeholder='Enter your email'\r\n        onChange={(e) => {\r\n          setEmail(e.target.value)\r\n        }}\r\n        autoFocus\r\n      />\r\n      <br />\r\n      <button type='submit' className='btn btn-raised'>\r\n        Register\r\n      </button>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          <h4>Register</h4>\r\n\r\n          {registerForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","D:\\MYCART\\client\\src\\pages\\auth\\Login.js",["66","67"],"import React, { useState, useEffect } from 'react'\r\nimport { auth, googleAuthProvider } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { Button } from 'antd'\r\nimport axios from 'axios'\r\nimport { GoogleOutlined, MailOutlined } from '@ant-design/icons'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../../components/Loader'\r\n\r\n//sending login token to backend\r\nconst createOrUpdateUser = async (authToken) => {\r\n  return await axios.post(\r\n    `/api/create-or-update-user`,\r\n    {},\r\n    {\r\n      headers: {\r\n        authToken,\r\n      },\r\n    }\r\n  )\r\n}\r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/')\r\n    }\r\n  }, [user])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    try {\r\n      const result = await auth.signInWithEmailAndPassword(email, password)\r\n      // console.log(result)\r\n      const { user } = result\r\n      const idTokenResult = await user.getIdTokenResult()\r\n\r\n      //calling the function to send token to backend\r\n      createOrUpdateUser(idTokenResult.token)\r\n        .then((res) => {\r\n          console.log('CREATE OR UPDATE RES', res)\r\n        })\r\n        .catch((error) => {})\r\n\r\n      dispatch({\r\n        type: 'LOGGED_IN_USER',\r\n        payload: {\r\n          email: user.email,\r\n          token: idTokenResult.token,\r\n        },\r\n      })\r\n      history.push('/')\r\n    } catch (error) {\r\n      toast.error(error.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const googleLogin = async () => {\r\n    auth\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(async (result) => {\r\n        const { user } = result\r\n        const idTokenResult = await user.getIdTokenResult()\r\n        dispatch({\r\n          type: 'LOGGED_IN_USER',\r\n          payload: {\r\n            email: user.email,\r\n            token: idTokenResult.token,\r\n          },\r\n        })\r\n        history.push('/')\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message)\r\n      })\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <input\r\n          type='email'\r\n          className='form-control'\r\n          value={email}\r\n          placeholder='Enter your email'\r\n          onChange={(e) => {\r\n            setEmail(e.target.value)\r\n          }}\r\n          autoFocus\r\n        />\r\n      </div>\r\n      <br />\r\n      <div className='form-group'>\r\n        <input\r\n          type='password'\r\n          className='form-control'\r\n          value={password}\r\n          placeholder='Enter your password'\r\n          onChange={(e) => {\r\n            setPassword(e.target.value)\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <Button\r\n        type='primary'\r\n        onClick={handleSubmit}\r\n        className='mb-2'\r\n        block\r\n        shape='round'\r\n        icon={<MailOutlined />}\r\n        size='large'\r\n        disabled={!email || password.length < 6}\r\n      >\r\n        Login with email/password\r\n      </Button>\r\n      <Link to='/forgot/password' className='float-right mb-3'>\r\n        Forget Password ?\r\n      </Link>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          {loading ? (\r\n            <h4 className='text-primary'>Loading...</h4>\r\n          ) : (\r\n            <h4>Login</h4>\r\n          )}\r\n\r\n          {loginForm()}\r\n\r\n          <Button\r\n            type='danger'\r\n            onClick={googleLogin}\r\n            className='mb-3'\r\n            block\r\n            shape='round'\r\n            icon={<GoogleOutlined />}\r\n            size='large'\r\n          >\r\n            Login with google\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","D:\\MYCART\\client\\src\\pages\\Home.js",[],"D:\\MYCART\\client\\src\\components\\nav\\Header.js",[],"D:\\MYCART\\client\\src\\firebase.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js",["68"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem('emailForRegistration'))\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    //Manul validation\r\n    if (!email || !password) {\r\n      toast.error('Email and password is required')\r\n      return\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      toast.error('Password must be atleast 6 characters long')\r\n      return\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(email, window.location.href)\r\n      console.log('RESULT', result)\r\n\r\n      if (result.user.emailVerified) {\r\n        //remove user email from local storage\r\n        window.localStorage.removeItem('emailForRegistration')\r\n\r\n        //get user id token\r\n        let user = auth.currentUser\r\n        await user.updatePassword(password)\r\n        const idTokenResult = await user.getIdTokenResult()\r\n\r\n        // console.log('user', user, 'idtoke ', idTokenResult)\r\n\r\n        //Redux store\r\n\r\n        //Redirect\r\n        history.push('/')\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message)\r\n    }\r\n  }\r\n\r\n  const completeRegistrationForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='email' className='form-control' value={email} disabled />\r\n      <br />\r\n      <input\r\n        type='password'\r\n        className='form-control'\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        autoFocus\r\n        placeholder='Set Password'\r\n      />\r\n      <br />\r\n      <button type='submit' className='btn btn-raised'>\r\n        Complete registration\r\n      </button>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          <h4>Register Complete</h4>\r\n\r\n          {completeRegistrationForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterComplete\r\n","D:\\MYCART\\client\\src\\reducers\\index.js",[],"D:\\MYCART\\client\\src\\reducers\\userReducer.js",["69"],"import React from 'react'\r\n\r\nexport const userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'LOGGED_IN_USER':\r\n      return action.payload\r\n    case 'LOGOUT':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\MYCART\\client\\src\\components\\Loader.js",[],["70","71"],"D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js",["72"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/')\r\n    }\r\n  }, [user])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const config = {\r\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n      handleCodeInApp: true,\r\n    }\r\n    await auth\r\n      .sendPasswordResetEmail(email, config)\r\n      .then(() => {\r\n        setEmail('')\r\n        setLoading(false)\r\n        toast.success('Check your email for password reset instructions')\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message)\r\n        setLoading(false)\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-3 p-5'>\r\n          {loading ? (\r\n            <h4 className='text-primary'>Loading....</h4>\r\n          ) : (\r\n            <h4>Forgot Password</h4>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type='email'\r\n              className='form-control'\r\n              value={email}\r\n              placeholder='Type your email'\r\n              onChange={(e) => {\r\n                setEmail(e.target.value)\r\n              }}\r\n              autoFocus\r\n            />\r\n            <br />\r\n            <button type='submit' className='btn btn-raised' disabled={!email}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":37,"column":6,"nodeType":"79","endLine":37,"endColumn":8,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":15,"column":6,"nodeType":"79","endLine":15,"endColumn":12,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":36,"column":6,"nodeType":"79","endLine":36,"endColumn":12,"suggestions":"87"},{"ruleId":"83","severity":1,"message":"88","line":38,"column":15,"nodeType":"85","messageId":"86","endLine":38,"endColumn":28},{"ruleId":"83","severity":1,"message":"89","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"73","replacedBy":"90"},{"ruleId":"75","replacedBy":"91"},{"ruleId":"77","severity":1,"message":"81","line":15,"column":6,"nodeType":"79","endLine":15,"endColumn":12,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["96"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar",["97"],"'idTokenResult' is assigned a value but never used.","'React' is defined but never used.",["93"],["94"],["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"101","fix":"103"},{"desc":"101","fix":"104"},"Update the dependencies array to be: [dispatch]",{"range":"105","text":"106"},"Update the dependencies array to be: [history, user]",{"range":"107","text":"108"},{"range":"109","text":"108"},{"range":"110","text":"108"},[1091,1093],"[dispatch]",[407,413],"[history, user]",[1008,1014],[460,466]]