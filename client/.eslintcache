[{"D:\\MYCART\\client\\src\\index.js":"1","D:\\MYCART\\client\\src\\App.js":"2","D:\\MYCART\\client\\src\\reportWebVitals.js":"3","D:\\MYCART\\client\\src\\pages\\auth\\Register.js":"4","D:\\MYCART\\client\\src\\pages\\auth\\Login.js":"5","D:\\MYCART\\client\\src\\pages\\Home.js":"6","D:\\MYCART\\client\\src\\components\\nav\\Header.js":"7","D:\\MYCART\\client\\src\\firebase.js":"8","D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js":"9","D:\\MYCART\\client\\src\\reducers\\index.js":"10","D:\\MYCART\\client\\src\\reducers\\userReducer.js":"11","D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js":"12","D:\\MYCART\\client\\src\\functions\\auth.js":"13","D:\\MYCART\\client\\src\\pages\\user\\History.js":"14","D:\\MYCART\\client\\src\\components\\routes\\UserRoute.js":"15","D:\\MYCART\\client\\src\\components\\routes\\LoadingToRedirect.js":"16","D:\\MYCART\\client\\src\\components\\nav\\UserNav.js":"17","D:\\MYCART\\client\\src\\pages\\user\\Password.js":"18","D:\\MYCART\\client\\src\\pages\\user\\Wishlist.js":"19","D:\\MYCART\\client\\src\\components\\routes\\AdminRoute.js":"20","D:\\MYCART\\client\\src\\pages\\admin\\AdminDashboard.js":"21","D:\\MYCART\\client\\src\\components\\nav\\AdminNav.js":"22","D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"23","D:\\MYCART\\client\\src\\functions\\category.js":"24","D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"25","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubCreate.js":"26","D:\\MYCART\\client\\src\\functions\\sub.js":"27","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubUpdate.js":"28","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductCreate.js":"29","D:\\MYCART\\client\\src\\functions\\product.js":"30","D:\\MYCART\\client\\src\\components\\forms\\FileUpload.js":"31","D:\\MYCART\\client\\src\\components\\cards\\AdminProductCard.js":"32","D:\\MYCART\\client\\src\\pages\\admin\\product\\AllProducts.js":"33","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"34","D:\\MYCART\\client\\src\\components\\cards\\ProductCard.js":"35","D:\\MYCART\\client\\src\\components\\cards\\LoadingCard.js":"36","D:\\MYCART\\client\\src\\components\\home\\NewArrivals.js":"37","D:\\MYCART\\client\\src\\components\\home\\BestSellers.js":"38","D:\\MYCART\\client\\src\\pages\\Product.js":"39","D:\\MYCART\\client\\src\\components\\cards\\SingleProduct.js":"40","D:\\MYCART\\client\\src\\components\\cards\\ProductListItems.js":"41","D:\\MYCART\\client\\src\\components\\nav\\Footer.js":"42","D:\\MYCART\\client\\src\\components\\modal\\ProductModal.js":"43","D:\\MYCART\\client\\src\\components\\listgroups\\ProductListGroup.js":"44","D:\\MYCART\\client\\src\\components\\forms\\ProductRatingForm.js":"45","D:\\MYCART\\client\\src\\components\\modal\\RatingModal.js":"46","D:\\MYCART\\client\\src\\components\\cards\\ReviewsCard.js":"47","D:\\MYCART\\client\\src\\components\\cards\\Rating.js":"48","D:\\MYCART\\client\\src\\functions\\RatingsAverage.js":"49","D:\\MYCART\\client\\src\\components\\MenuCategory\\CategoryList.js":"50","D:\\MYCART\\client\\src\\pages\\category\\CategoryHome.js":"51","D:\\MYCART\\client\\src\\components\\MenuSub\\SubList.js":"52","D:\\MYCART\\client\\src\\pages\\sub\\SubHome.js":"53","D:\\MYCART\\client\\src\\reducers\\searchReducer.js":"54","D:\\MYCART\\client\\src\\components\\forms\\Search.js":"55","D:\\MYCART\\client\\src\\pages\\Shop.js":"56","D:\\MYCART\\client\\src\\components\\forms\\Star.js":"57","D:\\MYCART\\client\\src\\reducers\\cartReducer.js":"58","D:\\MYCART\\client\\src\\pages\\Cart.js":"59","D:\\MYCART\\client\\src\\reducers\\drawerReducer.js":"60","D:\\MYCART\\client\\src\\components\\drawer\\SideDrawer.js":"61","D:\\MYCART\\client\\src\\pages\\Checkout.js":"62","D:\\MYCART\\client\\src\\functions\\user.js":"63","D:\\MYCART\\client\\src\\components\\cards\\Address.js":"64","D:\\MYCART\\client\\src\\reducers\\addressReducer.js":"65","D:\\MYCART\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js":"66","D:\\MYCART\\client\\src\\functions\\coupon.js":"67","D:\\MYCART\\client\\src\\reducers\\couponReducer.js":"68","D:\\MYCART\\client\\src\\pages\\Payment.js":"69","D:\\MYCART\\client\\src\\components\\StripeCheckout.js":"70","D:\\MYCART\\client\\src\\functions\\stripe.js":"71","D:\\MYCART\\client\\src\\components\\order\\Invoice.js":"72","D:\\MYCART\\client\\src\\components\\order\\Tracking.js":"73","D:\\MYCART\\client\\src\\functions\\admin.js":"74","D:\\MYCART\\client\\src\\components\\order\\OrderStatusUpdate.js":"75"},{"size":866,"mtime":1615722643000,"results":"76","hashOfConfig":"77"},{"size":4678,"mtime":1619382377884,"results":"78","hashOfConfig":"77"},{"size":362,"mtime":1615722643000,"results":"79","hashOfConfig":"77"},{"size":1782,"mtime":1619612569056,"results":"80","hashOfConfig":"77"},{"size":4957,"mtime":1619612329792,"results":"81","hashOfConfig":"77"},{"size":2694,"mtime":1616780979000,"results":"82","hashOfConfig":"77"},{"size":3374,"mtime":1619598422845,"results":"83","hashOfConfig":"77"},{"size":657,"mtime":1615722642000,"results":"84","hashOfConfig":"77"},{"size":2944,"mtime":1615722658000,"results":"85","hashOfConfig":"77"},{"size":558,"mtime":1619120856358,"results":"86","hashOfConfig":"77"},{"size":230,"mtime":1615722648000,"results":"87","hashOfConfig":"77"},{"size":1900,"mtime":1615722657000,"results":"88","hashOfConfig":"77"},{"size":777,"mtime":1615722647000,"results":"89","hashOfConfig":"77"},{"size":6275,"mtime":1619613109016,"results":"90","hashOfConfig":"77"},{"size":1294,"mtime":1615722658000,"results":"91","hashOfConfig":"77"},{"size":650,"mtime":1615722658000,"results":"92","hashOfConfig":"77"},{"size":1536,"mtime":1619612774612,"results":"93","hashOfConfig":"77"},{"size":1750,"mtime":1615722657000,"results":"94","hashOfConfig":"77"},{"size":4999,"mtime":1619611997542,"results":"95","hashOfConfig":"77"},{"size":1907,"mtime":1615722658000,"results":"96","hashOfConfig":"77"},{"size":1643,"mtime":1619462375377,"results":"97","hashOfConfig":"77"},{"size":1274,"mtime":1615722658000,"results":"98","hashOfConfig":"77"},{"size":5098,"mtime":1615722661000,"results":"99","hashOfConfig":"77"},{"size":1108,"mtime":1615722647000,"results":"100","hashOfConfig":"77"},{"size":2246,"mtime":1615722661000,"results":"101","hashOfConfig":"77"},{"size":5851,"mtime":1615722661000,"results":"102","hashOfConfig":"77"},{"size":950,"mtime":1615722647000,"results":"103","hashOfConfig":"77"},{"size":3380,"mtime":1615722661000,"results":"104","hashOfConfig":"77"},{"size":7561,"mtime":1615722661000,"results":"105","hashOfConfig":"77"},{"size":1674,"mtime":1615722647000,"results":"106","hashOfConfig":"77"},{"size":3138,"mtime":1615722660000,"results":"107","hashOfConfig":"77"},{"size":1083,"mtime":1615722659000,"results":"108","hashOfConfig":"77"},{"size":2208,"mtime":1615722661000,"results":"109","hashOfConfig":"77"},{"size":8787,"mtime":1615722661000,"results":"110","hashOfConfig":"77"},{"size":3110,"mtime":1619612631625,"results":"111","hashOfConfig":"77"},{"size":446,"mtime":1615722659000,"results":"112","hashOfConfig":"77"},{"size":1818,"mtime":1619469355163,"results":"113","hashOfConfig":"77"},{"size":1858,"mtime":1619469439936,"results":"114","hashOfConfig":"77"},{"size":3042,"mtime":1619599033348,"results":"115","hashOfConfig":"77"},{"size":7575,"mtime":1619552569787,"results":"116","hashOfConfig":"77"},{"size":2410,"mtime":1617369383013,"results":"117","hashOfConfig":"77"},{"size":1500,"mtime":1619193635625,"results":"118","hashOfConfig":"77"},{"size":7237,"mtime":1615722658000,"results":"119","hashOfConfig":"77"},{"size":2830,"mtime":1615722659000,"results":"120","hashOfConfig":"77"},{"size":735,"mtime":1613244934428,"results":"121","hashOfConfig":"122"},{"size":1289,"mtime":1615722658000,"results":"123","hashOfConfig":"77"},{"size":1979,"mtime":1615722660000,"results":"124","hashOfConfig":"77"},{"size":1747,"mtime":1615722660000,"results":"125","hashOfConfig":"77"},{"size":804,"mtime":1615722647000,"results":"126","hashOfConfig":"77"},{"size":2506,"mtime":1615722659000,"results":"127","hashOfConfig":"77"},{"size":1881,"mtime":1615722657000,"results":"128","hashOfConfig":"77"},{"size":1351,"mtime":1615722658000,"results":"129","hashOfConfig":"77"},{"size":1863,"mtime":1615722657000,"results":"130","hashOfConfig":"77"},{"size":206,"mtime":1615722648000,"results":"131","hashOfConfig":"77"},{"size":1089,"mtime":1619597814284,"results":"132","hashOfConfig":"77"},{"size":10084,"mtime":1619599182227,"results":"133","hashOfConfig":"77"},{"size":997,"mtime":1616354721696,"results":"134","hashOfConfig":"77"},{"size":422,"mtime":1617129507418,"results":"135","hashOfConfig":"77"},{"size":13569,"mtime":1617532131262,"results":"136","hashOfConfig":"77"},{"size":183,"mtime":1617381670191,"results":"137","hashOfConfig":"77"},{"size":1688,"mtime":1617390586969,"results":"138","hashOfConfig":"77"},{"size":18405,"mtime":1619122955774,"results":"139","hashOfConfig":"77"},{"size":2145,"mtime":1619546282595,"results":"140","hashOfConfig":"77"},{"size":2063,"mtime":1619119496877,"results":"141","hashOfConfig":"77"},{"size":190,"mtime":1617731713673,"results":"142","hashOfConfig":"77"},{"size":4566,"mtime":1619090811593,"results":"143","hashOfConfig":"77"},{"size":446,"mtime":1619090240104,"results":"144","hashOfConfig":"77"},{"size":184,"mtime":1619120892362,"results":"145","hashOfConfig":"77"},{"size":826,"mtime":1619270230976,"results":"146","hashOfConfig":"77"},{"size":8379,"mtime":1619293599040,"results":"147","hashOfConfig":"77"},{"size":249,"mtime":1619251770827,"results":"148","hashOfConfig":"77"},{"size":6982,"mtime":1619464434003,"results":"149","hashOfConfig":"77"},{"size":7140,"mtime":1619613406720,"results":"150","hashOfConfig":"77"},{"size":485,"mtime":1619462336698,"results":"151","hashOfConfig":"77"},{"size":5197,"mtime":1619465758152,"results":"152","hashOfConfig":"77"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},"8jb2of",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"155"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"155"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"155"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"155"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"155"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"155"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"155"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"155"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"155"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"155"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bnamjh",{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"155"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"155"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"155"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"155"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"155"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"155"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"155"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"155"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"155"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"155"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"155"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"155"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"155"},"D:\\MYCART\\client\\src\\index.js",[],["327","328"],"D:\\MYCART\\client\\src\\App.js",[],"D:\\MYCART\\client\\src\\reportWebVitals.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\Register.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\Login.js",[],"D:\\MYCART\\client\\src\\pages\\Home.js",[],"D:\\MYCART\\client\\src\\components\\nav\\Header.js",["329"],"D:\\MYCART\\client\\src\\firebase.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js",[],"D:\\MYCART\\client\\src\\reducers\\index.js",[],"D:\\MYCART\\client\\src\\reducers\\userReducer.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js",[],"D:\\MYCART\\client\\src\\functions\\auth.js",[],"D:\\MYCART\\client\\src\\pages\\user\\History.js",["330","331","332"],"D:\\MYCART\\client\\src\\components\\routes\\UserRoute.js",[],"D:\\MYCART\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"D:\\MYCART\\client\\src\\components\\nav\\UserNav.js",[],"D:\\MYCART\\client\\src\\pages\\user\\Password.js",[],"D:\\MYCART\\client\\src\\pages\\user\\Wishlist.js",["333","334"],"D:\\MYCART\\client\\src\\components\\routes\\AdminRoute.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\AdminDashboard.js",["335","336","337"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/nav/AdminNav'\r\nimport { getOrders, changeStatus } from '../../functions/admin'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport OrderStatusUpdate from '../../components/order/OrderStatusUpdate'\r\nconst AdminDashboard = () => {\r\n  //states\r\n  const [orders, setOrders] = useState([])\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    getOrders(user.token).then((res) => {\r\n      console.log(res.data)\r\n      setOrders(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const handleStatusUpdate = (\r\n    orderId,\r\n    orderStatus,\r\n    shippingBy,\r\n    trackingId,\r\n    deliveredAt\r\n  ) => {\r\n    if (window.confirm('Do u wanna update')) {\r\n      changeStatus(\r\n        orderId,\r\n        orderStatus,\r\n        shippingBy,\r\n        trackingId,\r\n        deliveredAt,\r\n        user.token\r\n      ).then((res) => {\r\n        console.log('Successfully sent')\r\n        getOrders(user.token).then((res) => {\r\n          console.log(res.data)\r\n          setOrders(res.data)\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid mt-5'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className='col'>\r\n          <h4 className='text-center'>Admin dashboard</h4>\r\n          <br />\r\n          <OrderStatusUpdate\r\n            orders={orders}\r\n            handleStatusUpdate={handleStatusUpdate}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n","D:\\MYCART\\client\\src\\components\\nav\\AdminNav.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"D:\\MYCART\\client\\src\\functions\\category.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["338","339"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getCategory, updateCategory } from '../../../functions/category'\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n  //States\r\n  const [name, setName] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Use effect\r\n  useEffect(() => {\r\n    loadCategory()\r\n  }, [])\r\n\r\n  //Load all the categories on component mount\r\n  const loadCategory = () => {\r\n    getCategory(match.params.slug).then((res) => {\r\n      setName(res.data.name)\r\n    })\r\n  }\r\n\r\n  //Submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    updateCategory(user.token, name, match.params.slug)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setName('')\r\n        toast.success(`${res.data.name} is updated successfully`)\r\n        history.push('/admin/category') // redirect back to the category page after upating\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        toast.error(err.response.data)\r\n      })\r\n  }\r\n\r\n  //Category form\r\n  const categoryForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Name</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          autoFocus\r\n          required\r\n          minLength='4'\r\n        />\r\n        <br />\r\n        <button className='btn btn-outline-primary' disabled={name == ''}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container-fluid mt-5'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>loading...</h4>\r\n          ) : (\r\n            <h4>Update Category</h4>\r\n          )}\r\n          {categoryForm()}\r\n\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryUpdate\r\n","D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubCreate.js",[],"D:\\MYCART\\client\\src\\functions\\sub.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\sub\\SubUpdate.js",["340","341"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getSub, updateSub } from '../../../functions/sub'\r\nimport { getCategories } from '../../../functions/category'\r\n\r\nconst SubUpdate = ({ match, history }) => {\r\n  //States\r\n  const [name, setName] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [categories, setCategories] = useState([])\r\n  const [parent, setParent] = useState('')\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Use effect to load all the categories in the categories collection and display them in a list\r\n  useEffect(() => {\r\n    loadCategories()\r\n    loadSub()\r\n  }, [])\r\n\r\n  //Load all the categories on component mount\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setCategories(res.data)\r\n    })\r\n  }\r\n\r\n  //Load all sub categories on component mount\r\n  const loadSub = () => {\r\n    getSub(match.params.slug).then((res) => {\r\n      setName(res.data.name)\r\n      setParent(res.data.parent)\r\n    })\r\n  }\r\n\r\n  //Submit, creating a new category\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    updateSub({ authToken: user.token, name, parent, slug: match.params.slug })\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setName('')\r\n        toast.success(`${res.data.name} is updated successfully`)\r\n        history.push('/admin/sub')\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        toast.error(err.response.data)\r\n      })\r\n  }\r\n\r\n  //Category form\r\n  const categoryForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Name</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          autoFocus\r\n          required\r\n          minLength='2'\r\n        />\r\n        <br />\r\n        <button className='btn btn-outline-primary' disabled={name == ''}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>loading...</h4>\r\n          ) : (\r\n            <h4>Update Sub Category</h4>\r\n          )}\r\n          <div className='form-group'>\r\n            <label>Parent Category </label>\r\n            <select\r\n              name='category'\r\n              className='form-control'\r\n              onChange={(e) => setParent(e.target.value)}\r\n              required\r\n            >\r\n              <option value='please select'>Please Select</option>\r\n              {categories.length > 0 &&\r\n                categories.map((data) => (\r\n                  <option\r\n                    value={data._id}\r\n                    key={data._id}\r\n                    selected={data._id === parent}\r\n                  >\r\n                    {data.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          {categoryForm()}\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubUpdate\r\n","D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductCreate.js",["342","343","344","345","346","347"],"import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { createProduct } from '../../../functions/product'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst { Option } = Select\r\nconst productState = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  categories: [],\r\n  category: '',\r\n  subs: [],\r\n  shipping: '',\r\n  quantity: '',\r\n  images: [],\r\n  colors: ['Black', 'brown', 'silver', 'white', 'blue'], //options to show in dropdown so that admin can pick one\r\n  brands: [\r\n    'Samsung',\r\n    'Microsoft',\r\n    'Apple',\r\n    'Lenovo',\r\n    'ASUS',\r\n    'DELL',\r\n    'HP',\r\n    'REALME',\r\n  ], //options to show in dropdown so that admin can pick one\r\n  color: '',\r\n  brand: '',\r\n}\r\n\r\nconst ProductCreate = () => {\r\n  //redux logged in user\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  //Storing the subcategories\r\n  const [subOptions, setSubOptions] = useState([])\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  //get all the categories\r\n  useEffect(() => {\r\n    loadCategories()\r\n  }, [])\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setValues({ ...values, categories: res.data })\r\n    })\r\n  }\r\n\r\n  const [values, setValues] = useState(productState)\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    categories,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  //when admin selects a category a api request is made to backend to fetch all the sub-categories for that category\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault()\r\n    // console.log('Clciked Category', e.target.value)\r\n    setValues({ ...values, subs: [], [e.target.name]: e.target.value })\r\n    getCategorySubs(e.target.value)\r\n      .then((res) => {\r\n        console.log('the data', res.data)\r\n        setSubOptions(res.data)\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n\r\n  //Submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        window.alert(`${res.data.title} is created successfully`)\r\n        window.location.reload()\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid mt-5'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          <h4>Product create</h4>\r\n          <hr />\r\n          <div className='p-3'>\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label>Title</label>\r\n              <input\r\n                type='text'\r\n                name='title'\r\n                className='form-control'\r\n                value={title}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Description</label>\r\n              <input\r\n                type='text'\r\n                name='description'\r\n                className='form-control'\r\n                value={description}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Price</label>\r\n              <input\r\n                type='Number'\r\n                name='price'\r\n                className='form-control'\r\n                value={price}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Shipping</label>\r\n              <select\r\n                name='shipping'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                <option value='No'>No</option>\r\n                <option value='Yes'>Yes</option>\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Quantity</label>\r\n              <input\r\n                type='Number'\r\n                name='quantity'\r\n                className='form-control'\r\n                value={quantity}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Colors</label>\r\n              <select\r\n                name='color'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                {colors.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Brand</label>\r\n              <select\r\n                name='brand'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n              >\r\n                <option value='choose please'>Choose one</option>\r\n                {brands.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Category </label>\r\n              <select\r\n                name='category'\r\n                className='form-control'\r\n                onChange={handleCategoryChange}\r\n                required\r\n              >\r\n                <option>Please select category</option>\r\n                {categories.length > 0 &&\r\n                  categories.map((data) => (\r\n                    <option value={data._id} key={data._id}>\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            {/* Multiple subcategories select element */}\r\n\r\n            {subOptions.length > 0 && (\r\n              <div>\r\n                <label>Sub Categories </label>\r\n                <Select\r\n                  mode='multiple'\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Please select the subcategories'\r\n                  name='subs'\r\n                  value={subs}\r\n                  onChange={(value) => setValues({ ...values, subs: value })}\r\n                >\r\n                  {subOptions.length > 0 &&\r\n                    subOptions.map((s) => (\r\n                      <Option key={s._id} value={s._id}>\r\n                        {s.name}\r\n                      </Option>\r\n                    ))}\r\n                </Select>\r\n              </div>\r\n            )}\r\n            <br />\r\n            <button type='submit' className='btn btn-outline-info'>\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductCreate\r\n","D:\\MYCART\\client\\src\\functions\\product.js",[],"D:\\MYCART\\client\\src\\components\\forms\\FileUpload.js",[],"D:\\MYCART\\client\\src\\components\\cards\\AdminProductCard.js",["348"],"import React from 'react'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport laptop from '../../images/laptop.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'antd'\r\nconst { Meta } = Card\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n  const { title, description, images, slug } = product\r\n\r\n  return (\r\n    <Card\r\n      cover={\r\n        <img\r\n          src={images && images.length ? images[0].url : laptop}\r\n          style={{ height: '150px', objectFit: 'cover' }}\r\n          className='p-1'\r\n        />\r\n      }\r\n      actions={[\r\n        <Link to={`/admin/product/${slug}`}>\r\n          {' '}\r\n          <EditOutlined key='edit' className='text-primary' />\r\n        </Link>,\r\n        <DeleteOutlined\r\n          className='text-danger'\r\n          onClick={() => {\r\n            handleRemove(slug)\r\n          }}\r\n        />,\r\n      ]}\r\n    >\r\n      <Meta\r\n        title={title}\r\n        description={`${description && description.substring(0, 70)} . . .`}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AdminProductCard\r\n","D:\\MYCART\\client\\src\\pages\\admin\\product\\AllProducts.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["349","350","351","352"],"import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { getProduct, updateProduct } from '../../../functions/product'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\n\r\nconst { Option } = Select\r\n\r\nconst productState = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  category: '',\r\n  subs: [],\r\n  shipping: '',\r\n  quantity: '',\r\n  images: [],\r\n  colors: ['Black', 'brown', 'silver', 'white', 'blue'], //options to show in dropdown so that admin can pick one\r\n  brands: ['Samsung', 'Microsoft', 'Apple', 'Lenovo', 'ASUS', 'DELL'], //options to show in dropdown so that admin can pick one\r\n  color: '',\r\n  brand: '',\r\n}\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n  //redux logged in user\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const { slug } = match.params\r\n  const [values, setValues] = useState(productState)\r\n  //Storing the subcategories\r\n  const [subOptions, setSubOptions] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [arrayOfSubs, setArrayOfSubs] = useState([])\r\n  const [selectedCategory, setSelectedCategory] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values\r\n\r\n  useEffect(() => {\r\n    loadProduct()\r\n    loadCategories()\r\n  }, [])\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setCategories(res.data)\r\n    })\r\n  }\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug)\r\n      .then((res) => {\r\n        setValues({ ...values, ...res.data })\r\n\r\n        //get all the subcategories for the fetchd product\r\n        getCategorySubs(res.data.category._id)\r\n          .then((p) => {\r\n            // console.log('the data', p.data)\r\n            setSubOptions(p.data) // on first load show all subs for the product to update\r\n          })\r\n          .catch((err) => {\r\n            console.log('the data', err)\r\n          })\r\n\r\n        let arr = []\r\n        res.data.subs.map((s) => {\r\n          arr.push(s._id)\r\n        })\r\n        console.log('Here')\r\n        console.log('ARR', arr)\r\n        setArrayOfSubs(arr) //required for ant design select to work\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  //when admin selects a category a api request is made to backend to fetch all the sub-categories for that category\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault()\r\n    // console.log('Clciked Category', e.target.value)\r\n\r\n    setValues({ ...values, subs: [] })\r\n\r\n    setSelectedCategory(e.target.value)\r\n\r\n    getCategorySubs(e.target.value)\r\n      .then((res) => {\r\n        // console.log('changed category', res.data)\r\n        setSubOptions(res.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n    //if user clicks back to the original category then show its sub categories as default\r\n    if (values.category._id === e.target.value) {\r\n      loadProduct()\r\n    }\r\n\r\n    //clear all sub categories if new category is chosen\r\n    setArrayOfSubs([])\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    values.subs = arrayOfSubs\r\n    values.category = selectedCategory ? selectedCategory : values.category\r\n    updateProduct(slug, user.token, values)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        toast.success(`${res.data.title} is updated is successfully`)\r\n        history.push('/admin/dashboard')\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n        toast.error(err.response.data.err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          <h4>Product Update</h4>\r\n          {/* {JSON.stringify(values)} */}\r\n          <hr />\r\n          <div className='p-3'>\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label>Title</label>\r\n              <input\r\n                type='text'\r\n                name='title'\r\n                className='form-control'\r\n                value={title}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Description</label>\r\n              <input\r\n                type='text'\r\n                name='description'\r\n                className='form-control'\r\n                value={description}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Price</label>\r\n              <input\r\n                type='Number'\r\n                name='price'\r\n                className='form-control'\r\n                value={price}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Shipping</label>\r\n              <select\r\n                name='shipping'\r\n                className='form-control'\r\n                value={shipping === 'Yes' ? 'Yes' : 'No'}\r\n                onChange={handleChange}\r\n              >\r\n                <option value='No'>No</option>\r\n                <option value='Yes'>Yes</option>\r\n              </select>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Quantity</label>\r\n              <input\r\n                type='Number'\r\n                name='quantity'\r\n                className='form-control'\r\n                value={quantity}\r\n                onChange={handleChange}\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Colors</label>\r\n              <select\r\n                name='color'\r\n                className='form-control'\r\n                value={color}\r\n                onChange={handleChange}\r\n              >\r\n                {colors.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Brand</label>\r\n              <select\r\n                name='brand'\r\n                className='form-control'\r\n                onChange={handleChange}\r\n                value={brand}\r\n              >\r\n                {brands.map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>Category </label>\r\n              <select\r\n                name='category'\r\n                className='form-control'\r\n                onChange={handleCategoryChange}\r\n                required\r\n                value={selectedCategory ? selectedCategory : category._id}\r\n              >\r\n                {categories.length > 0 &&\r\n                  categories.map((data) => (\r\n                    <option value={data._id} key={data._id}>\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label>Sub Categories </label>\r\n              <Select\r\n                mode='multiple'\r\n                style={{ width: '100%' }}\r\n                placeholder='Please select the subcategories'\r\n                name='subs'\r\n                value={arrayOfSubs}\r\n                onChange={(value) => setArrayOfSubs(value)}\r\n              >\r\n                {subOptions.length > 0 &&\r\n                  subOptions.map((s) => (\r\n                    <Option key={s._id} value={s._id}>\r\n                      {s.name}\r\n                    </Option>\r\n                  ))}\r\n              </Select>\r\n            </div>\r\n\r\n            <br />\r\n            <button type='submit' className='btn btn-outline-info'>\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductUpdate\r\n","D:\\MYCART\\client\\src\\components\\cards\\ProductCard.js",["353","354","355","356","357","358"],"D:\\MYCART\\client\\src\\components\\cards\\LoadingCard.js",[],"D:\\MYCART\\client\\src\\components\\home\\NewArrivals.js",["359"],"import React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport LoadingCard from '../../components/cards/LoadingCard'\r\nimport { Pagination } from 'antd'\r\nconst NewArrivals = () => {\r\n  //States\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [productsCount, setProductsCount] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    loadAllProducts()\r\n  }, [page])\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => {\r\n      setProductsCount(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true)\r\n    //sort,order,limit\r\n    getProducts('createdAt', 'desc', page)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setProducts(res.data)\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4 className='p-2 mt-2  ml-2 display-4 text-primary '>New Arrivals</h4>\r\n      {loading ? (\r\n        <LoadingCard count={3} />\r\n      ) : (\r\n        <div className='container'>\r\n          <div className='row'>\r\n            {products.map((product) => (\r\n              <div className='col-md-4 ' key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className='row'>\r\n        <nav className='col-md-4 offset-md-4 text-center  p-2'>\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            total={(productsCount / 3) * 10}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewArrivals\r\n","D:\\MYCART\\client\\src\\components\\home\\BestSellers.js",["360"],"import React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport LoadingCard from '../../components/cards/LoadingCard'\r\nimport { Pagination } from 'antd'\r\nconst BestSellers = () => {\r\n  //States\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [productsCount, setProductsCount] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    loadAllProducts()\r\n  }, [page])\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => {\r\n      setProductsCount(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true)\r\n    //sort,order,limit\r\n    console.log('Inside best seller')\r\n    getProducts('sold', 'desc', page)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setProducts(res.data)\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4 className='p-2 mt-2  ml-2 display-4 text-primary '>Best Sellers</h4>\r\n      {loading ? (\r\n        <LoadingCard count={3} />\r\n      ) : (\r\n        <div className='container'>\r\n          <div className='row'>\r\n            {products.map((product) => (\r\n              <div className='col-md-4 ' key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className='row'>\r\n        <nav className='col-md-4 offset-md-4 text-center pt-2 p-3'>\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            total={(productsCount / 3) * 10}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BestSellers\r\n","D:\\MYCART\\client\\src\\pages\\Product.js",["361"],"D:\\MYCART\\client\\src\\components\\cards\\SingleProduct.js",["362","363","364","365","366","367","368","369","370"],"import React, { useState, useEffect } from 'react'\r\nimport { Card, Tabs, Tooltip } from 'antd'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css' // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel'\r\nimport {\r\n  HeartOutlined,\r\n  ShoppingCartOutlined,\r\n  ClockCircleOutlined,\r\n} from '@ant-design/icons'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ProductListItems from './ProductListItems'\r\n// import ProductRatingForm from '../forms/ProductRatingForm'\r\nimport RatingModal from '../modal/RatingModal'\r\nimport StarRating from 'react-star-ratings'\r\nimport ReviewsCard from './ReviewsCard'\r\nimport RatingsAverage from '../../functions/RatingsAverage'\r\n\r\nimport ProductListGroup from '../listgroups/ProductListGroup'\r\nimport {\r\n  addToWishList,\r\n  getWishList,\r\n  removeWishList,\r\n} from '../../functions/user'\r\n\r\nconst { Meta } = Card\r\nconst { TabPane } = Tabs\r\n\r\nconst SingleProduct = ({\r\n  product,\r\n  onStarClick,\r\n  star,\r\n  userComment,\r\n  comment,\r\n  reviewSubmit,\r\n}) => {\r\n  const { title, images, description, _id, ratings } = product\r\n  const [toolTip, setToolTip] = useState('click to add to cart')\r\n\r\n  const [productsInWishList, setProductsInWishList] = useState([])\r\n\r\n  //redux\r\n  const { user, cart } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  //check if product already in wishlist\r\n  useEffect(() => {\r\n    if (user == null) {\r\n    } else {\r\n      getWishList(user.token).then((res) => {\r\n        console.log(res.data)\r\n        if (res.data.wishlist.length === 0) {\r\n          setProductsInWishList([])\r\n        } else {\r\n          setProductsInWishList(res.data.wishlist)\r\n        }\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  //add to cart\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.push({ ...product, count: 1 })\r\n\r\n      let unique = _.uniqWith(cart, _.isEqual)\r\n\r\n      localStorage.setItem('cart', JSON.stringify(unique))\r\n      setToolTip('added to cart')\r\n\r\n      //dispatch to redux i.e add the local storage(added to cart products) data to redux state\r\n      dispatch({ type: 'ADD_TO_CART', payload: unique })\r\n\r\n      //dispatch to show cart in side bar\r\n      dispatch({ type: 'DRAWER_TOGGLE', payload: true })\r\n    }\r\n  }\r\n\r\n  //add to wish list\r\n  const handleAddToWishList = (e) => {\r\n    e.preventDefault()\r\n    addToWishList(_id, user.token).then((res) => {\r\n      console.log('added to wishlist')\r\n      getWishList(user.token).then((res) => {\r\n        console.log(res.data)\r\n        if (user == null) {\r\n        } else {\r\n          getWishList(user.token).then((res) => {\r\n            console.log(res.data)\r\n            if (res.data.wishlist.length === 0) {\r\n              setProductsInWishList([])\r\n            } else {\r\n              setProductsInWishList(res.data.wishlist)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  //remove from wish list\r\n  const removeFromWishList = () => {\r\n    removeWishList(_id, user.token).then((res) => {\r\n      console.log(res, `successfully removed`)\r\n      if (user == null) {\r\n      } else {\r\n        getWishList(user.token).then((res) => {\r\n          console.log(res.data)\r\n          if (res.data.wishlist.length === 0) {\r\n            setProductsInWishList([])\r\n          } else {\r\n            setProductsInWishList(res.data.wishlist)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='col-md-6 ml-4 mt-3 '>\r\n        <Card>\r\n          <Carousel showArrows={true} autoPlay infiniteLoop>\r\n            {images &&\r\n              images.map((data) => <img src={data.url} key={data.public_id} />)}\r\n          </Carousel>\r\n          <br />\r\n\r\n          <Tabs type='card'>\r\n            <TabPane tab='Description' key='1'>\r\n              {description && description}\r\n            </TabPane>\r\n            <TabPane tab='Specification' key='2'>\r\n              ram : 8gb\r\n              <br />\r\n              processor : corei7 8th gen\r\n              <br />\r\n              Gpu : Nividia Gtx 1080\r\n              <br />\r\n              cache : 10mb of l1 cache\r\n              <br />\r\n            </TabPane>\r\n            <TabPane tab='Seller info'>\r\n              Anurag mart near pluto , next to kepler belt, pin : solar294745\r\n              <br />\r\n              phone : solar98377656\r\n            </TabPane>\r\n          </Tabs>\r\n        </Card>\r\n        <hr />\r\n        <ProductListGroup product={product} />\r\n      </div>\r\n      <div className='col-md-5 ml-2 mt-3'>\r\n        <Card\r\n          className='productcard'\r\n          actions={[\r\n            <Tooltip title={product.quantity > 0 ? toolTip : 'out of stock'}>\r\n              {product.quantity > 0 ? (\r\n                <a\r\n                  onClick={() => {\r\n                    handleAddToCart()\r\n                  }}\r\n                >\r\n                  <ShoppingCartOutlined className='text-success' /> <br />\r\n                  Add to Cart\r\n                </a>\r\n              ) : (\r\n                <a>\r\n                  <ClockCircleOutlined className='text-danger' />\r\n                  <br />\r\n                  currently out of stock\r\n                </a>\r\n              )}\r\n            </Tooltip>,\r\n            <Tooltip>\r\n              {productsInWishList.length > 0 &&\r\n              productsInWishList.some((el) => el._id === _id) ? (\r\n                <a onClick={removeFromWishList}>\r\n                  <i\r\n                    className='fas fa-heart fa-lg'\r\n                    style={{ color: ' #e75480' }}\r\n                  >\r\n                    {' '}\r\n                  </i>\r\n                  <br />\r\n                  Added to wishlist\r\n                </a>\r\n              ) : (\r\n                <a onClick={handleAddToWishList} disabled={user == null}>\r\n                  <HeartOutlined className='text-danger' />\r\n                  <br />\r\n                  add to wishlist\r\n                </a>\r\n              )}\r\n            </Tooltip>,\r\n            <RatingModal reviewSubmit={reviewSubmit}>\r\n              <StarRating\r\n                name={_id}\r\n                numberOfStars={5}\r\n                rating={star}\r\n                changeRating={onStarClick}\r\n                isSelectable={true}\r\n                starRatedColor='gold'\r\n              />\r\n              <br />\r\n              <form className='mt-3'>\r\n                <div className='form-group'>\r\n                  <label htmlFor='comment' className='h5'>\r\n                    Comment\r\n                  </label>\r\n                  <hr />\r\n                  <textarea\r\n                    className='form-control'\r\n                    name='comment'\r\n                    rows='5'\r\n                    value={comment}\r\n                    onChange={userComment}\r\n                  ></textarea>\r\n                </div>\r\n              </form>\r\n            </RatingModal>,\r\n          ]}\r\n        >\r\n          <Meta title={title} />\r\n          <span>\r\n            {product && product.ratings && ratings.length > 0 ? (\r\n              <div className='pt-3'>{RatingsAverage(product)}</div>\r\n            ) : (\r\n              'No Ratings yet'\r\n            )}\r\n          </span>\r\n          <hr />\r\n          <ProductListItems product={product} />\r\n        </Card>\r\n\r\n        <br />\r\n        <ReviewsCard ratings={ratings} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingleProduct\r\n","D:\\MYCART\\client\\src\\components\\cards\\ProductListItems.js",["371","372"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst ProductListItems = ({ product }) => {\r\n  const {\r\n    price,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    color,\r\n    brand,\r\n    quantity,\r\n    sold,\r\n  } = product\r\n  return (\r\n    <ul className='list-group'>\r\n      <li className='list-group-item h5 font-italic'>\r\n        Price{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          ${price}{' '}\r\n          {/* <span className='text-danger h6'> &nbsp;&nbsp;you save 20%</span>\r\n          <del>${price + (20 / 100) * price}</del> */}\r\n        </span>\r\n      </li>\r\n\r\n      {category && (\r\n        <li className='list-group-item h5 font-italic'>\r\n          Category{' '}\r\n          <Link\r\n            to={`/category/${category.slug}`}\r\n            className='label label-default label-pill pull-xs-right '\r\n          >\r\n            {category.name}\r\n          </Link>\r\n        </li>\r\n      )}\r\n\r\n      {subs && (\r\n        <li className='list-group-item h5 font-italic'>\r\n          SubCategories{' '}\r\n          {subs.map((s) => (\r\n            <Link\r\n              to={`/sub/${s.slug}`}\r\n              key={s._id}\r\n              className='label label-default label-pill pull-xs-right'\r\n            >\r\n              {s.name}\r\n            </Link>\r\n          ))}\r\n        </li>\r\n      )}\r\n      <li className='list-group-item h5 font-italic'>\r\n        Shipping{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {shipping}\r\n        </span>\r\n      </li>\r\n      <li className='list-group-item h5 font-italic'>\r\n        Color{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {color}\r\n        </span>\r\n      </li>\r\n      <li className='list-group-item h5 font-italic'>\r\n        Brand{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {brand}\r\n        </span>\r\n      </li>\r\n      {/* <li className='list-group-item h5 font-italic'>\r\n        Available{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {quantity}\r\n        </span>\r\n      </li>\r\n      <li className='list-group-item h5 font-italic'>\r\n        Sold{' '}\r\n        <span className='label label-default label-pill pull-xs-right '>\r\n          {sold}\r\n        </span>\r\n      </li> */}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ProductListItems\r\n","D:\\MYCART\\client\\src\\components\\nav\\Footer.js",[],"D:\\MYCART\\client\\src\\components\\modal\\ProductModal.js",[],"D:\\MYCART\\client\\src\\components\\listgroups\\ProductListGroup.js",[],"D:\\MYCART\\client\\src\\components\\forms\\ProductRatingForm.js",["373"],"D:\\MYCART\\client\\src\\components\\modal\\RatingModal.js",["374","375"],"import React, { useState } from 'react'\r\nimport { Modal, Button } from 'antd'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { StarOutlined } from '@ant-design/icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nconst RatingModal = ({ children, reviewSubmit }) => {\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n\r\n  const history = useHistory()\r\n  const params = useParams()\r\n\r\n  const handleModal = () => {\r\n    if (user && user.token) {\r\n      setModalVisible(true)\r\n    } else {\r\n      history.push({\r\n        pathname: '/login',\r\n        state: { from: `/product/${params.slug}` },\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleModal}>\r\n        <StarOutlined style={{ color: 'gold' }} />\r\n        <br />\r\n        {user ? 'Leave a rating' : 'login to rate this product'}\r\n      </div>\r\n      <Modal\r\n        title='Leave/change your rating'\r\n        centered\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false)\r\n          reviewSubmit()\r\n        }}\r\n        onCancel={() => setModalVisible(false)}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RatingModal\r\n","D:\\MYCART\\client\\src\\components\\cards\\ReviewsCard.js",[],"D:\\MYCART\\client\\src\\components\\cards\\Rating.js",[],"D:\\MYCART\\client\\src\\functions\\RatingsAverage.js",["376"],"import React from 'react'\r\nimport StarRating from 'react-star-ratings'\r\n\r\nconst RatingsAverage = (product) => {\r\n  if (product && product.ratings) {\r\n    let ratingsArray = product.ratings\r\n    let total = []\r\n    let numberOfRatings = ratingsArray.length\r\n\r\n    ratingsArray.map((rating) => {\r\n      total.push(rating.star)\r\n    })\r\n\r\n    let totalReduced = total.reduce((prev, next) => prev + next, 0)\r\n\r\n    let averageRating = totalReduced / numberOfRatings\r\n\r\n    return (\r\n      <div>\r\n        <span>\r\n          <StarRating\r\n            rating={averageRating}\r\n            starRatedColor='gold'\r\n            starDimension='25px'\r\n            starSpacing='2px'\r\n          />\r\n          &nbsp;({product.ratings.length})\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RatingsAverage\r\n","D:\\MYCART\\client\\src\\components\\MenuCategory\\CategoryList.js",[],"D:\\MYCART\\client\\src\\pages\\category\\CategoryHome.js",["377"],"import React, { useState, useEffect } from 'react'\r\nimport { getCategory } from '../../functions/category'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\n\r\nconst CategoryHome = ({ match }) => {\r\n  //state\r\n  const [category, setCategory] = useState({})\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { slug } = match.params\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getCategory(slug).then((res) => {\r\n      setCategory(res.data.category)\r\n      setProducts(res.data.products)\r\n      setLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Link to='/' className='button'>\r\n        {' '}\r\n        <button type='button' className='btn btn-dark mt-5 ml-2'>\r\n          Go back\r\n        </button>\r\n      </Link>\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            {loading ? (\r\n              <LoadingOutlined className='h1 text-primary' />\r\n            ) : products.length === 0 ? (\r\n              <h4 className='text-center p-3 mt-5 mb-5 display-5 jumbotron'>\r\n                No Products in {category.name} category\r\n              </h4>\r\n            ) : (\r\n              <h4 className='text-center p-2 mt-5 mb-5 display-5 jumbotron'>\r\n                {products.length} Products in \"{category.name}\" Category\r\n              </h4>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          {products &&\r\n            products.length > 0 &&\r\n            products.map((p) => (\r\n              <div className='col-md-4 pb-5 ' key={p._id}>\r\n                {<ProductCard product={p} />}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryHome\r\n","D:\\MYCART\\client\\src\\components\\MenuSub\\SubList.js",[],"D:\\MYCART\\client\\src\\pages\\sub\\SubHome.js",["378","379"],"import React, { useState, useEffect } from 'react'\r\nimport { getSub } from '../../functions/sub'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport { Card } from 'antd'\r\n\r\nconst SubHome = ({ match }) => {\r\n  //state\r\n  const [sub, setSub] = useState({})\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { slug } = match.params\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getSub(slug).then((res) => {\r\n      setSub(res.data.sub)\r\n      setProducts(res.data.products)\r\n      setLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Link to='/' className='button'>\r\n        {' '}\r\n        <button type='button' className='btn btn-dark mt-5 ml-2'>\r\n          Go back\r\n        </button>\r\n      </Link>\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            {loading ? (\r\n              <LoadingOutlined className='h1 text-primary' />\r\n            ) : products.length === 0 ? (\r\n              <h4 className='text-center p-3 mt-3 mb-5 display-5 jumbotron'>\r\n                No Products in {sub.name} sub category\r\n              </h4>\r\n            ) : (\r\n              <h4 className='text-center p-2 mt-3 mb-5 display-5 jumbotron'>\r\n                {products.length} Products in \"{sub.name}\" sub Category\r\n              </h4>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          {products &&\r\n            products.length > 0 &&\r\n            products.map((p) => (\r\n              <div className='col-md-4 pb-5 ' key={p._id}>\r\n                {<ProductCard product={p} />}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubHome\r\n","D:\\MYCART\\client\\src\\reducers\\searchReducer.js",[],"D:\\MYCART\\client\\src\\components\\forms\\Search.js",[],"D:\\MYCART\\client\\src\\pages\\Shop.js",["380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396"],"D:\\MYCART\\client\\src\\components\\forms\\Star.js",[],"D:\\MYCART\\client\\src\\reducers\\cartReducer.js",[],"D:\\MYCART\\client\\src\\pages\\Cart.js",["397","398","399","400"],"import { toast } from 'react-toastify'\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { userCart } from '../functions/user'\r\n\r\nconst Cart = ({ history }) => {\r\n  const colors = ['Black', 'brown', 'silver', 'white', 'blue']\r\n\r\n  //redux\r\n  const { user, cart } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  const getTotal = () => {\r\n    return cart.reduce((current, next) => {\r\n      return current + next.count * next.price\r\n    }, 0)\r\n  }\r\n\r\n  //save to db on checkout\r\n  const saveOrderToDb = () => {\r\n    console.log('saving to db')\r\n    userCart(cart, user.token)\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.data.ok) {\r\n          history.push('/checkout')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('cart save error', error)\r\n      })\r\n  }\r\n\r\n  //change color or select a new color\r\n  const handleColorChange = (e, productId) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === productId) {\r\n          cart[i].color = e.target.value\r\n        }\r\n      })\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n\r\n      dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n    }\r\n  }\r\n\r\n  //Change Quantity\r\n  const handleQuantityChange = (e, productId, quantity) => {\r\n    console.log(quantity)\r\n    if (e.target.value > 4) {\r\n      e.target.value = 4\r\n    }\r\n    if (e.target.value === '' || e.target.value === '0') {\r\n      e.target.value = 1\r\n    }\r\n    if (quantity < e.target.value) {\r\n      toast.error(`Max Quantity Available ${quantity}`)\r\n      return\r\n    }\r\n\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === productId) {\r\n          cart[i].count = e.target.value\r\n        }\r\n      })\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n\r\n      dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n    }\r\n  }\r\n\r\n  //Remove Item\r\n  const handleRemove = (productId) => {\r\n    console.log(productId)\r\n\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === productId) {\r\n          cart.splice(i, 1)\r\n        }\r\n      })\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n\r\n      dispatch({ type: 'ADD_TO_CART', payload: cart })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className='mt-5'>\r\n      <div className='row'>\r\n        <div className='col-lg-8'>\r\n          <div className='mb-3'>\r\n            <div className='pt-4 wish-list'>\r\n              <h5 className='mb-4 ml-4 '>\r\n                Cart (<span>{cart.length}</span> items)\r\n              </h5>\r\n\r\n              {cart.length === 0 ? (\r\n                <>\r\n                  <h4 className='ml-2 text-center mb-4'>\r\n                    No products in the cart,&nbsp;\r\n                    <Link to='/shop'>continue shopping</Link>\r\n                  </h4>\r\n                  <h4 className='text-center'>\r\n                    {' '}\r\n                    <i className='fas fa-cart-arrow-down fa-5x'></i>\r\n                  </h4>\r\n                  <br />\r\n                </>\r\n              ) : (\r\n                cart.map((data, index) => (\r\n                  <div className='row mb-4 ml-2' key={index}>\r\n                    <div className='col-md-5 col-lg-3 col-xl-3'>\r\n                      <div className='view zoom overlay z-depth-1 rounded mb-3 mb-md-0'>\r\n                        <img\r\n                          className='img-fluid w-90'\r\n                          src={data.images[0].url}\r\n                          alt='Sample'\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-7 col-lg-8 col-xl-8'>\r\n                      <div>\r\n                        <div className='d-flex justify-content-between'>\r\n                          <div>\r\n                            <Link to={`/product/${data.slug}`}>\r\n                              {' '}\r\n                              <h5>{data.title}</h5>\r\n                            </Link>\r\n                            <p className='mb-3 text-muted text-uppercase small'>\r\n                              {data.brand}\r\n                            </p>\r\n                            <p className='mb-2 text-muted text-uppercase small'>\r\n                              Color:{' '}\r\n                              <span>\r\n                                <select\r\n                                  name='color'\r\n                                  id=''\r\n                                  onChange={(e) =>\r\n                                    handleColorChange(e, data._id)\r\n                                  }\r\n                                  className='form-control col-md-2 col-xs-2'\r\n                                >\r\n                                  {data.color ? (\r\n                                    <option value={data.color}>\r\n                                      {data.color}\r\n                                    </option>\r\n                                  ) : (\r\n                                    <option>Select a color</option>\r\n                                  )}\r\n                                  {colors\r\n                                    .filter((c) => c !== data.color)\r\n                                    .map((c) => (\r\n                                      <option value={c} key={c}>\r\n                                        {c}\r\n                                      </option>\r\n                                    ))}\r\n                                </select>\r\n                              </span>\r\n                            </p>\r\n                            <br />\r\n                            <br />\r\n                          </div>\r\n                          <div>\r\n                            <div className='def-number-input number-input safari_only mb-0 w-100'>\r\n                              <input\r\n                                className='form-control'\r\n                                min='1'\r\n                                max='4'\r\n                                name='quantity'\r\n                                type='number'\r\n                                defaultValue={data.count}\r\n                                onChange={(e) =>\r\n                                  handleQuantityChange(\r\n                                    e,\r\n                                    data._id,\r\n                                    data.quantity\r\n                                  )\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <small\r\n                              id='passwordHelpBlock'\r\n                              className='form-text text-muted text-center'\r\n                            >\r\n                              (Note, {data.count} piece)\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-between align-items-center'>\r\n                          <div>\r\n                            <a\r\n                              type='button'\r\n                              className='card-link-secondary small text-uppercase mr-3 text-danger'\r\n                              onClick={(e) => handleRemove(data._id)}\r\n                            >\r\n                              <i className='fas fa-trash-alt mr-1'></i> Remove\r\n                              item{' '}\r\n                            </a>\r\n                            <a\r\n                              href='#!'\r\n                              type='button'\r\n                              className='card-link-secondary small text-uppercase'\r\n                            >\r\n                              <i className='fas fa-heart mr-1'></i> Move to wish\r\n                              list{' '}\r\n                            </a>\r\n                          </div>\r\n                          <p className='mb-0'>\r\n                            <span>\r\n                              <strong id='summary'>${data.price}</strong>\r\n                            </span>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n              <hr className='mb-4' />\r\n\r\n              <p className='text-primary mb-0'>\r\n                <i className='fas fa-info-circle mr-1 ml-2'></i> Do not delay\r\n                the purchase, adding items to your cart does not mean booking\r\n                them.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-3 ml-2'>\r\n            <div className='pt-4'>\r\n              <h5 className='mb-4'>Expected shipping delivery</h5>\r\n\r\n              <p className='mb-0'> Depends on the availabity</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-3 ml-3'>\r\n            <div className='pt-4'>\r\n              <h5 className='mb-4'>We accept</h5>\r\n              <img\r\n                className='mr-2'\r\n                width='45px'\r\n                src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg'\r\n                alt='Visa'\r\n              />\r\n              <img\r\n                className='mr-2'\r\n                width='45px'\r\n                src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg'\r\n                alt='American Express'\r\n              />\r\n              <img\r\n                className='mr-2'\r\n                width='45px'\r\n                src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg'\r\n                alt='Mastercard'\r\n              />\r\n              <img\r\n                className='mr-2'\r\n                width='45px'\r\n                src='https://mdbootstrap.com/wp-content/plugins/woocommerce/includes/gateways/paypal/assets/images/paypal.png'\r\n                alt='PayPal acceptance mark'\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='col-lg-4 mt-2'>\r\n          <div className='mb-3'>\r\n            <div className='pt-4'>\r\n              <h5 className='mb-3 alert alert-dark'>Price Details</h5>\r\n              <hr />\r\n\r\n              <ul className='list-group list-group-flush'>\r\n                {cart.length > 0 ? (\r\n                  cart.map((c, i) => (\r\n                    <div key={i}>\r\n                      <li className='list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0'>\r\n                        {c.title} x {c.count}\r\n                        <span>${c.price * c.count}</span>\r\n                      </li>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <li>No items in cart</li>\r\n                )}\r\n                <li className='list-group-item d-flex justify-content-between align-items-center px-0'>\r\n                  Shipping\r\n                  {cart.length > 0 ? (\r\n                    getTotal() > 90 ? (\r\n                      <span>free</span>\r\n                    ) : (\r\n                      <span>$10</span>\r\n                    )\r\n                  ) : (\r\n                    <span>no items </span>\r\n                  )}\r\n                </li>\r\n                <li className='list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3'>\r\n                  <div>\r\n                    <strong>The total amount of</strong>\r\n                    <strong>\r\n                      <p className='mb-0'>(including VAT)</p>\r\n                    </strong>\r\n                  </div>\r\n                  <span>\r\n                    {cart.length > 0 ? (\r\n                      <strong>${getTotal()}</strong>\r\n                    ) : (\r\n                      <strong>0</strong>\r\n                    )}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n              {user ? (\r\n                <button\r\n                  type='button'\r\n                  className='text-center btn btn-primary btn-raised btn-block'\r\n                  disabled={!cart.length}\r\n                  onClick={saveOrderToDb}\r\n                >\r\n                  go to checkout\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-outline-primary btn-block'\r\n                >\r\n                  <Link to={{ pathname: '/login', state: { from: 'cart' } }}>\r\n                    {' '}\r\n                    Login to continue\r\n                  </Link>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-2 ml-1'>\r\n            <div className='pt-4'>\r\n              <p className='text-info mb-0'>\r\n                <i class='fas fa-receipt'></i>&nbsp;&nbsp;coupons can be applied\r\n                on the next page\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","D:\\MYCART\\client\\src\\reducers\\drawerReducer.js",[],"D:\\MYCART\\client\\src\\components\\drawer\\SideDrawer.js",["401","402","403"],"import React from 'react'\r\nimport { Drawer, Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport laptop from '../../images/laptop.png'\r\n\r\nconst SideDrawer = () => {\r\n  //redux\r\n  const { drawer, cart } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  const imageStyle = {\r\n    width: '100%',\r\n    height: '50px',\r\n    objectFit: 'cover',\r\n  }\r\n  return (\r\n    <Drawer\r\n      visible={drawer}\r\n      onClose={() => {\r\n        dispatch({ type: 'DRAWER_TOGGLE', payload: false })\r\n      }}\r\n      className='mt-5 text-center'\r\n      title={`Cart (${cart.length} items)`}\r\n      closable={false}\r\n    >\r\n      {cart.map((p) => (\r\n        <div className='row mb-2' key={p._id}>\r\n          <div className='col'>\r\n            {p.images[0] ? (\r\n              <>\r\n                <img src={p.images[0].url} style={imageStyle}></img>\r\n                <p className='form-text  text-center'>\r\n                  {p.title} x {p.count}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <img src={laptop} style={imageStyle}></img>\r\n                <p className='form-text text-muted text-center'>\r\n                  {p.title} x {p.count}\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Link to={`/cart`}>\r\n        <button\r\n          onClick={() => dispatch({ type: 'DRAWER_TOGGLE', payload: false })}\r\n          className='text-center btn btn-primary btn-raised btn-block'\r\n        >\r\n          Go to Cart\r\n        </button>\r\n      </Link>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default SideDrawer\r\n","D:\\MYCART\\client\\src\\pages\\Checkout.js",["404","405","406","407","408"],"import React, { useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport Address from '../components/cards/Address'\r\nimport { getUserCart, saveAddress, applyCoupon } from '../functions/user'\r\nimport _ from 'lodash'\r\n\r\nconst Checkout = ({ history }) => {\r\n  //redux state\r\n  const { user, cart, userAddress } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n\r\n  //coupon\r\n  const [coupon, setCoupon] = useState('')\r\n  const [totalAfterDiscount, setTotalAferDiscount] = useState(0)\r\n  const [discountError, setDiscountError] = useState('')\r\n  const [couponSuccess, setCouponSuccess] = useState('')\r\n\r\n  //address states\r\n  //first Name\r\n  const [firstName, setFirstName] = useState('')\r\n  //last Name\r\n  const [lastName, setLastName] = useState('')\r\n  //Address\r\n  const [address, setAddress] = useState('')\r\n  //zip\r\n  const [zip, setZip] = useState('')\r\n  //city\r\n  const [city, setCity] = useState('')\r\n  //state\r\n  const [state, setState] = useState('')\r\n  //phone\r\n  const [phone, setPhone] = useState('')\r\n  //email\r\n  const [email, setEmail] = useState(user.email)\r\n  //type of address\r\n  const [addressType, setAddressType] = useState('home')\r\n  //address saved\r\n  const [addressSaved, setSavedAddress] = useState(false)\r\n  //user addresses\r\n  const [savedUserAddresses, setSavedUserAddresses] = useState([])\r\n\r\n  //received cart state\r\n  const [products, setProducts] = useState([])\r\n  const [total, setTotal] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (cart.length == 0) {\r\n      history.push('/')\r\n    }\r\n\r\n    getUserCart(user.token)\r\n      .then((res) => {\r\n        if (res == null) {\r\n          toast.error('oops something wrong happened pls go bakc and try again')\r\n        } else {\r\n          console.log(res.data)\r\n          if (res.data.addresses !== null) {\r\n            setSavedUserAddresses(res.data.orderedBy.addresses)\r\n          }\r\n          setProducts(res.data.products)\r\n          setTotal(res.data.cartTotal)\r\n        }\r\n      })\r\n      .catch((error) => toast.error('something happened pls go back'))\r\n  }, [addressSaved])\r\n\r\n  const checkPin = async () => {\r\n    console.log(zip)\r\n    if (zip.length < 6) {\r\n      toast.error('zip code should be 6 characters long')\r\n      return\r\n    }\r\n    // const back = `https://cors-anywhere.herokuapp.com/`\r\n    const { data } = await axios.post(`/api/zip`, { zip })\r\n    console.log(data)\r\n    if (data.Status === 'Success') {\r\n      setCity(data.PostOffice[0].Division)\r\n      setState(data.PostOffice[0].State)\r\n    } else if (data.Status == 'Error') {\r\n      toast.error('Please provide a valid pin code')\r\n    } else {\r\n      toast.error('something went wrong pls try again')\r\n    }\r\n  }\r\n\r\n  const saveAddressToDb = (e) => {\r\n    e.preventDefault()\r\n\r\n    const addressToSave = {\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      zip,\r\n      state,\r\n      city,\r\n      phone,\r\n      email,\r\n      addressType,\r\n    }\r\n    saveAddress(user.token, addressToSave).then((res) => {\r\n      if (res == null) {\r\n        toast.error('oops something went wrong, pls try again')\r\n      } else if (res.data.message == 'address successfully saved') {\r\n        toast.success(res.data.message)\r\n        dispatch({\r\n          type: 'CHECKOUT_ADDRESS_SAVED',\r\n          payload: {\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            zip,\r\n            state,\r\n            city,\r\n            phone,\r\n            email,\r\n            addressType,\r\n          },\r\n        })\r\n        setSavedAddress(!addressSaved)\r\n      } else {\r\n        toast.error(res.data.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  //apply coupon\r\n  const couponApply = () => {\r\n    console.log('hidsds', coupon)\r\n    applyCoupon(coupon, user.token)\r\n      .then((res) => {\r\n        console.log('Response applied', res.data)\r\n        if (res.data.err) {\r\n          setDiscountError(res.data.err)\r\n          setTotalAferDiscount(0)\r\n          dispatch({ type: 'COUPON_APPLIED', payload: false })\r\n        }\r\n        if (res.data.totalAfterDiscount) {\r\n          setTotalAferDiscount(res.data.totalAfterDiscount)\r\n          setCouponSuccess('coupon applied')\r\n          dispatch({ type: 'COUPON_APPLIED', payload: true })\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      <br />\r\n\r\n      <section className='mt-5 ml-4'>\r\n        <div className='row'>\r\n          <div className='col-lg-8 mb-4'>\r\n            <div className='card wish-list pb-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={saveAddressToDb}>\r\n                  <h5 className='mb-2'>Billing details</h5>\r\n\r\n                  <div className='row'>\r\n                    <div className='col-lg-6'>\r\n                      <div className='md-form md-outline mb-0 mb-lg-4'>\r\n                        <input\r\n                          type='text'\r\n                          name='firstName'\r\n                          className='form-control mb-0 mb-lg-2'\r\n                          title='Only alphabets are allowed'\r\n                          pattern='^[A-Za-z]+$'\r\n                          value={firstName}\r\n                          onChange={(e) => setFirstName(e.target.value)}\r\n                          required\r\n                        />\r\n                        <label for='firstName'>\r\n                          First name<sup>*</sup>\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-6'>\r\n                      <div className='md-form md-outline'>\r\n                        <input\r\n                          type='text'\r\n                          name='lastName'\r\n                          className='form-control'\r\n                          title='Only alphabets are allowed'\r\n                          pattern='^[A-Za-z]+$'\r\n                          value={lastName}\r\n                          onChange={(e) => setLastName(e.target.value)}\r\n                          required\r\n                        />\r\n                        <label htmlFor='lastName'>\r\n                          Last name<sup>*</sup>\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className='d-flex flex-wrap'>\r\n                  <div className='select-outline position-relative w-100'>\r\n                    <select className='mdb-select md-form md-outline form-control'>\r\n                      <option value='' disabled selected>\r\n                        Choose your option\r\n                      </option>\r\n                      <option value='1'>Option 1</option>\r\n                      <option value='2'>Option 2</option>\r\n                      <option value='3'>Option 3</option>\r\n                    </select>\r\n                    <label>Country</label>\r\n                  </div>\r\n                </div>\r\n                <br /> */}\r\n\r\n                  <div className='md-form md-outline mt-0'>\r\n                    <input\r\n                      type='text'\r\n                      name='address1'\r\n                      // placeholder='House number and street name'\r\n                      className='form-control'\r\n                      value={address}\r\n                      onChange={(e) => setAddress(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor='address1'>\r\n                      House number and street name<sup>*</sup>\r\n                    </label>\r\n                  </div>\r\n                  <br />\r\n\r\n                  {/* <div className='md-form md-outline'>\r\n                    <input\r\n                      type='text'\r\n                      name='address2'\r\n                      // placeholder='Apartment, suite, unit etc. (optional)'\r\n                      className='form-control'\r\n                    />\r\n                    <label for='address2'>\r\n                      Apartment, suite, unit etc. (optional)\r\n                    </label>\r\n                  </div> */}\r\n\r\n                  <div className='md-form md-outline mb-2'>\r\n                    <input\r\n                      type='text'\r\n                      name='zip'\r\n                      className='form-control'\r\n                      pattern='^[1-9][0-9]{5}$'\r\n                      title='Invalid pincode'\r\n                      value={zip}\r\n                      onChange={(e) => setZip(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor='zip'>\r\n                      Postcode / ZIP<sup>*</sup>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <button\r\n                    type='button'\r\n                    className='text-center btn btn-info btn-raised btn-sm'\r\n                    disabled={!zip}\r\n                    onClick={() => checkPin()}\r\n                  >\r\n                    Check pincode\r\n                  </button>\r\n                  <br />\r\n                  <br />\r\n\r\n                  <div className='md-form md-outline'>\r\n                    <input\r\n                      type='text'\r\n                      name='city'\r\n                      className='form-control'\r\n                      //   pattern='^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$'\r\n                      //   title='please provide a valid city name'\r\n                      readonly='readonly'\r\n                      value={city}\r\n                    />\r\n                    <label htmlFor='city'>Town / City</label>\r\n                  </div>\r\n                  <br />\r\n                  <div className='md-form md-outline my-0'>\r\n                    <input\r\n                      type='text'\r\n                      name='companyName'\r\n                      className='form-control mb-0'\r\n                      readonly='readonly'\r\n                      value={state}\r\n                    />\r\n                    <label htmlFor='companyName'>state</label>\r\n                  </div>\r\n\r\n                  <div className='md-form md-outline'>\r\n                    <input\r\n                      type='tel'\r\n                      name='phone'\r\n                      className='form-control'\r\n                      pattern='^[6-9]\\d{9}$'\r\n                      title='Please provide  a valid number'\r\n                      value={phone}\r\n                      onChange={(e) => setPhone(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor='phone'>\r\n                      Phone<sup>*</sup>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className='md-form md-outline'>\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      className='form-control'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor='email'>\r\n                      Email address<sup>*</sup>\r\n                    </label>\r\n                  </div>\r\n                  <br />\r\n                  <div class='d-flex flex-wrap'>\r\n                    <div class='select-outline position-relative w-100'>\r\n                      <select\r\n                        class='mdb-select md-form md-outline form-control'\r\n                        value={addressType}\r\n                        onChange={(e) => setAddressType(e.target.value)}\r\n                      >\r\n                        <option defaultValue='' disabled selected>\r\n                          Select an Address Type\r\n                        </option>\r\n                        <option defaultValue='home'>home</option>\r\n                        <option defaultValue='office'>office</option>\r\n                      </select>\r\n                      <label>Address type</label>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <div className='form-check pl-0 mb-4 mb-lg-0'>\r\n                    <button\r\n                      type='submit'\r\n                      className='text-center btn btn-primary btn-raised '\r\n                      disabled={\r\n                        !(zip && city && state && address && phone && email)\r\n                      }\r\n                    >\r\n                      save Address\r\n                    </button>\r\n                  </div>\r\n                  <br />\r\n                  <p className='text-primary mb-0'>\r\n                    <sup>*</sup> required fields\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-lg-4'>\r\n            <div className='card mb-4'>\r\n              <div className='card-body'>\r\n                <h5 className='mb-2'>Order Summary</h5>\r\n                <hr />\r\n\r\n                <ul className='list-group list-group-flush'>\r\n                  {products.length > 0 ? (\r\n                    products.map((c, i) => (\r\n                      <div key={i}>\r\n                        <li className='list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0'>\r\n                          {c.product.title} ({c.color})&nbsp;x {c.count}\r\n                          <span>${c.price * c.count}</span>\r\n                        </li>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <li>No items in cart, add some items to show here</li>\r\n                  )}\r\n                  <li className='list-group-item d-flex justify-content-between align-items-center px-0'>\r\n                    Shipping\r\n                    {products.length > 0 ? (\r\n                      <span>free</span>\r\n                    ) : (\r\n                      <span>no items </span>\r\n                    )}\r\n                  </li>\r\n                  <li className='list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3'>\r\n                    <div>\r\n                      <strong>The total amount of</strong>\r\n                      <strong>\r\n                        <p className='mb-0'>(including VAT)</p>\r\n                      </strong>\r\n                    </div>\r\n                    <span>\r\n                      <strong>{total ? total : 'no items in cart'}</strong>\r\n                    </span>\r\n\r\n                    {totalAfterDiscount > 0 && (\r\n                      <>\r\n                        <div>\r\n                          <br />\r\n                          <br />\r\n                          <h5 className='text-success'>\r\n                            New price after discount\r\n                          </h5>\r\n                        </div>\r\n                        <span>\r\n                          <br />\r\n                          <h5 className='text-danger'>${totalAfterDiscount}</h5>\r\n                        </span>\r\n                      </>\r\n                    )}\r\n                  </li>\r\n                </ul>\r\n\r\n                <button\r\n                  type='button'\r\n                  className='text-center btn btn-primary btn-raised btn-block'\r\n                  disabled={\r\n                    savedUserAddresses.length == 0 || _.isEmpty(userAddress)\r\n                  }\r\n                  onClick={() => history.push('/payment')}\r\n                >\r\n                  Place Order\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='card mb-4'>\r\n              <div className='card-body'>\r\n                <a\r\n                  className='dark-grey-text d-flex justify-content-between'\r\n                  data-toggle='collapse'\r\n                  href='#collapseExample'\r\n                  aria-expanded='false'\r\n                  aria-controls='collapseExample'\r\n                >\r\n                  Add a discount code (optional)\r\n                  <span>\r\n                    <i className='fas fa-chevron-down pt-1'></i>\r\n                  </span>\r\n                </a>\r\n\r\n                <div className='collapse' id='collapseExample'>\r\n                  <div className='mt-3'>\r\n                    <div className='md-form md-outline mb-0'>\r\n                      <input\r\n                        type='text'\r\n                        id='discount-code'\r\n                        className='form-control font-weight-light'\r\n                        placeholder='Enter discount code'\r\n                        value={coupon}\r\n                        onChange={(e) => {\r\n                          setCoupon(e.target.value)\r\n                          setDiscountError('')\r\n                          setCouponSuccess('')\r\n                        }}\r\n                        autoComplete='off'\r\n                      />\r\n                      {discountError && (\r\n                        <p className='text-danger'>{discountError}</p>\r\n                      )}\r\n                      {couponSuccess && (\r\n                        <p className='text-success'>{couponSuccess}&nbsp;!!!</p>\r\n                      )}\r\n                      <br />\r\n                      <button\r\n                        type='button'\r\n                        className='text-center btn btn-success btn-raised '\r\n                        disabled={!coupon.length}\r\n                        onClick={() => {\r\n                          couponApply()\r\n                        }}\r\n                      >\r\n                        Apply coupon\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <h5>Your addresses</h5>\r\n\r\n        {savedUserAddresses.length > 0 ? (\r\n          <div className='row mt-4 ml-1 mb-3'>\r\n            {savedUserAddresses.map((data, i) => (\r\n              <div className='col-md-3'>\r\n                <Address\r\n                  data={data}\r\n                  setSavedAddress={setSavedAddress}\r\n                  addressSaved={addressSaved}\r\n                  authToken={user.token}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Checkout\r\n","D:\\MYCART\\client\\src\\functions\\user.js",[],"D:\\MYCART\\client\\src\\components\\cards\\Address.js",["409"],"import React from 'react'\r\nimport { deleteAddress } from '../../functions/user'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst Address = ({ data, setSavedAddress, addressSaved, authToken }) => {\r\n  const { userAddress } = useSelector((state) => ({ ...state }))\r\n  const dispatch = useDispatch()\r\n  let { _id, ...selectedAddress } = data\r\n\r\n  //remove an address\r\n  const removeAddress = () => {\r\n    console.log(data)\r\n\r\n    const wannaDelete = window.confirm('do u wanna delete this address')\r\n    if (wannaDelete) {\r\n      deleteAddress(authToken, data).then((res) => {\r\n        console.log(res)\r\n        if ((res.data = 'ok')) {\r\n          toast.success('Address successfully deleted')\r\n          setSavedAddress(!addressSaved)\r\n        } else if (res.data == null) {\r\n          toast.error('oops something went wrong, try again later')\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  //select an address for delivery\r\n  const selectAddress = () => {\r\n    dispatch({ type: 'CHECKOUT_ADDRESS_SAVED', payload: selectedAddress })\r\n    toast.success('Address selected')\r\n  }\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-body'>\r\n        <strong className='card-title h5'>\r\n          {data.firstName}&nbsp; {data.lastName}\r\n        </strong>\r\n        <p className='card-text'>{data.address}</p>\r\n        <p className='card-text'>{data.zip}</p>\r\n        <p className='card-text'>{data.city}</p>\r\n        <p className='card-text'>{data.state}</p>\r\n        <p className='card-text'>{data.phone}</p>\r\n        <button\r\n          type='button'\r\n          className='text-center btn btn-primary btn-raised btn-block'\r\n          onClick={() => selectAddress()}\r\n        >\r\n          Deliver to this address\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='text-center btn btn-danger btn-raised btn-sm mt-3'\r\n          onClick={() => removeAddress()}\r\n        >\r\n          Delete address\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Address\r\n","D:\\MYCART\\client\\src\\reducers\\addressReducer.js",[],"D:\\MYCART\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js",["410"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport {\r\n  createCoupon,\r\n  removeCoupon,\r\n  getCoupons,\r\n} from '../../../functions/coupon'\r\n\r\nconst CreateCoupon = () => {\r\n  const [name, setName] = useState('')\r\n  const [expiry, setExpiry] = useState(new Date())\r\n  const [discount, setDiscount] = useState(0)\r\n  const [loading, setLoading] = useState(false)\r\n  const [coupons, setCoupons] = useState([])\r\n\r\n  //redux\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    getCoupons().then((res) => setCoupons(res.data))\r\n  }, [loading])\r\n\r\n  //create a new coupon\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(expiry, name, discount)\r\n\r\n    createCoupon({ name, expiry, discount }, user.token)\r\n      .then(\r\n        (res) => setLoading(false),\r\n        setName(''),\r\n        setDiscount(0),\r\n        setExpiry(new Date()),\r\n\r\n        toast.success('successfully created'),\r\n        setLoading(!loading)\r\n      )\r\n      .catch((err) => {\r\n        toast.error('Unsuccessful operation')\r\n      })\r\n  }\r\n\r\n  //remove a coupon\r\n  const handleRemove = (couponId) => {\r\n    if (window.confirm('Delete?')) {\r\n      removeCoupon(couponId, user.token)\r\n        .then((res) => {\r\n          getCoupons().then((res) => setCoupons(res.data))\r\n          toast.success(`coupon ${res.data.name} Delelted successfully`)\r\n          setLoading(!loading)\r\n        })\r\n        .catch((err) => {\r\n          toast.error('oops!,something wrong happened')\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid mt-5'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          <h4>Coupon</h4>\r\n          <br />\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label className='text-muted'>Name</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n                autoFocus\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label className='text-muted'>Discount</label>\r\n              <input\r\n                type='number'\r\n                className='form-control'\r\n                onChange={(e) => setDiscount(e.target.value)}\r\n                value={discount}\r\n                min={0}\r\n                max={100}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <br />\r\n            <div className='form-group'>\r\n              <label className='text-muted'>Expiry Date</label>\r\n              <br />\r\n              <DatePicker\r\n                className='form-control '\r\n                selected={expiry}\r\n                required\r\n                onChange={(date) => setExpiry(date)}\r\n              />\r\n            </div>\r\n            <button className='btn btn-outline-primary'>Save</button>\r\n          </form>\r\n          <br />\r\n          <h4> {coupons.length} Coupons</h4>\r\n          <table className='table table-bordered'>\r\n            <thead className='thead-light'>\r\n              <tr>\r\n                <th scope='col'>Name</th>\r\n                <th scope='col'>Expiry</th>\r\n                <th scope='col'>Discount</th>\r\n                <th scope='col'>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {coupons.map((c) => (\r\n                <tr key={c._id}>\r\n                  <td>{c.name}</td>\r\n                  <td>{new Date(c.expiry).toLocaleDateString()}</td>\r\n                  <td>{c.discount}%</td>\r\n                  <td>\r\n                    {\r\n                      <DeleteOutlined\r\n                        className='text-danger '\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                          handleRemove(c._id)\r\n                        }}\r\n                      />\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateCoupon\r\n","D:\\MYCART\\client\\src\\functions\\coupon.js",[],"D:\\MYCART\\client\\src\\reducers\\couponReducer.js",[],"D:\\MYCART\\client\\src\\pages\\Payment.js",["411","412"],"import React, { useEffect } from 'react'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport StripeCheckout from '../components/StripeCheckout'\r\nimport '../stripe.css'\r\n\r\nconst promise = loadStripe(process.env.REACT_APP_STRIPE_KEY)\r\n\r\nconst Payment = ({ history }) => {\r\n  useEffect(() => {\r\n    var item = JSON.stringify(localStorage.getItem('cart'))\r\n\r\n    if (item == null || item.length == 4) {\r\n      history.push('/cart')\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container mt-4 text-center'>\r\n      <br />\r\n      <br />\r\n      <h5>Complete your purchase</h5>\r\n\r\n      <Elements stripe={promise}>\r\n        <div className='col-md-8 offset-2'>\r\n          <StripeCheckout />\r\n        </div>\r\n      </Elements>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Payment\r\n","D:\\MYCART\\client\\src\\components\\StripeCheckout.js",["413","414"],"import React from 'react'\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createPaymentIntent } from '../functions/stripe'\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder, emptyUserCart } from '../functions/user'\r\n\r\nconst StripeCheckout = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const { user, coupon, userAddress } = useSelector((state) => ({ ...state }))\r\n\r\n  const [success, setSuccess] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [processing, setProcessing] = useState(false)\r\n  const [disabled, setDisabled] = useState(true)\r\n  const [clientSecret, setClientSecret] = useState('')\r\n\r\n  const [cartTotal, setCartTotal] = useState(0)\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0)\r\n  const [payable, SetPayable] = useState(0)\r\n\r\n  //stripe specific\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n\r\n  useEffect(() => {\r\n    createPaymentIntent(user.token, coupon).then((res) => {\r\n      setClientSecret(res.data.clientSecret)\r\n      console.log(res)\r\n      //payment response\r\n      setCartTotal(res.data.cartTotal)\r\n      setTotalAfterDiscount(res.data.totalAfterDiscount)\r\n      SetPayable(res.data.payable)\r\n    })\r\n  }, [])\r\n\r\n  //style for cartElement\r\n  const cartStyle = {\r\n    style: {\r\n      base: {\r\n        color: '#32325d',\r\n        fontFamily: 'Arial, sans-serif',\r\n        fontSmoothing: 'antialiased',\r\n        fontSize: '16px',\r\n        '::placeholder': {\r\n          color: '#32325d',\r\n        },\r\n      },\r\n      invalid: {\r\n        color: '#fa755a',\r\n        iconColor: '#fa755a',\r\n      },\r\n    },\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setProcessing(true)\r\n\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: e.target.name.value,\r\n        },\r\n      },\r\n    })\r\n\r\n    if (payload.error) {\r\n      setError(`payment failed ${payload.error.message}`)\r\n      setProcessing(false)\r\n    } else {\r\n      //success\r\n      //will create an order and save it to db and then empty user cart\r\n      console.log(JSON.stringify(payload))\r\n\r\n      createOrder(\r\n        {\r\n          stripeResponse: payload,\r\n          shippingAddress: userAddress,\r\n          paymentMethod: 'card',\r\n          totalPrice:\r\n            totalAfterDiscount > 0 && coupon ? totalAfterDiscount : cartTotal,\r\n          couponApplied: coupon,\r\n        },\r\n        user.token\r\n      ).then((res) => {\r\n        if (res.data.ok) {\r\n          //empty cart from localstorage\r\n          if (typeof window !== 'undefined') localStorage.removeItem('cart')\r\n          //empty cart from redux\r\n          dispatch({\r\n            type: 'ADD_TO_CART',\r\n            payload: [],\r\n          })\r\n          //reset coupon to false\r\n          dispatch({ type: 'COUPON_APPLIED', payload: false })\r\n\r\n          //empty cart from backend\r\n          emptyUserCart(user.token)\r\n        }\r\n        console.log(res)\r\n      })\r\n      setError(null)\r\n      setProcessing(false)\r\n      setSuccess(true)\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    //listen to changes in the card details entered and show the errors if customer types something wrong\r\n    setDisabled(e.empty)\r\n    setError(e.error ? e.error.message : '')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p className={success ? 'result-message text-success' : ' hidden'}>\r\n        Payment Successful{' '}\r\n        <Link to='/user/history'>&nbsp;Go to Purchase history</Link>\r\n      </p>\r\n\r\n      <form id='payment-form' onSubmit={handleSubmit}>\r\n        {/* use className='stripe-form' in form above, removed it intentionally*/}\r\n        <div className='card  bg-light '>\r\n          <div\r\n            className='card-header h4 bg-secondary text-white '\r\n            style={{ textAlign: 'left' }}\r\n          >\r\n            Payment\r\n          </div>\r\n          <div className='card-body'>\r\n            <div className='row'>\r\n              <div className='col-md-4'>\r\n                <h5 style={{ textAlign: 'left' }}>Total Amount</h5>\r\n              </div>\r\n              <div className='col-md-4 offset-2'>\r\n                <span className='text-dark h5'>${cartTotal}</span>\r\n                {}\r\n              </div>\r\n              <br />\r\n              <br />\r\n\r\n              <div className='col-md-4'>\r\n                <h5 style={{ textAlign: 'left' }}>Discounted price</h5>\r\n              </div>\r\n              <div className='col-md-4 offset-2'>\r\n                <span className='text-dark h5'>\r\n                  {' '}\r\n                  $\r\n                  {totalAfterDiscount > 0 && coupon\r\n                    ? cartTotal - totalAfterDiscount\r\n                    : 0}\r\n                </span>\r\n                {}\r\n              </div>\r\n\r\n              <br />\r\n              <br />\r\n              <div className='col-md-4'>\r\n                <h5 style={{ textAlign: 'left' }}>Total Payable</h5>\r\n              </div>\r\n\r\n              <div className='col-md-4 offset-2'>\r\n                <span className='text-danger h4'>\r\n                  $\r\n                  {totalAfterDiscount > 0 && coupon\r\n                    ? totalAfterDiscount\r\n                    : cartTotal}\r\n                </span>\r\n                {}\r\n              </div>\r\n              <br />\r\n              {totalAfterDiscount > 0 && coupon ? (\r\n                <p className='text-success mb-0'>\r\n                  <i class='fas fa-tags mr-1 ml-2'></i> Discount applied!\r\n                  <sup>*</sup>\r\n                </p>\r\n              ) : (\r\n                <p className='text-info'>\r\n                  <i class='fas fa-file-alt mr-1 ml-2'></i>&nbsp; gst number can\r\n                  be obtained after payment\r\n                </p>\r\n              )}\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <CardElement\r\n              id='card-element'\r\n              options={cartStyle}\r\n              onChange={handleChange}\r\n            />\r\n            <button\r\n              className='stripe-button'\r\n              disabled={processing || disabled || success}\r\n            >\r\n              <span id='button-text'>\r\n                {processing ? (\r\n                  <div className='spinner' id='spinner'></div>\r\n                ) : (\r\n                  'Pay'\r\n                )}\r\n              </span>\r\n            </button>\r\n            <br />\r\n            {error && (\r\n              <div className='card-error text-danger' role='alert'>\r\n                {error}\r\n              </div>\r\n            )}\r\n            <br />\r\n            <br />\r\n            <div className='mb-3 ml-3' style={{ textAlign: 'left' }}>\r\n              <div className='pt-4'>\r\n                <img\r\n                  className='mr-2'\r\n                  width='45px'\r\n                  src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg'\r\n                  alt='Visa'\r\n                />\r\n                <img\r\n                  className='mr-2'\r\n                  width='45px'\r\n                  src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg'\r\n                  alt='American Express'\r\n                />\r\n                <img\r\n                  className='mr-2'\r\n                  width='45px'\r\n                  src='https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg'\r\n                  alt='Mastercard'\r\n                />\r\n                <img\r\n                  className='mr-2'\r\n                  width='45px'\r\n                  src='https://mdbootstrap.com/wp-content/plugins/woocommerce/includes/gateways/paypal/assets/images/paypal.png'\r\n                  alt='PayPal acceptance mark'\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className='text-primary mb-0' style={{ textAlign: 'left' }}>\r\n              <i className=' fas fa-info-circle mr-1 ml-2'></i> for any issues\r\n              related to payment contact the respective bank or our helpline\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StripeCheckout\r\n","D:\\MYCART\\client\\src\\functions\\stripe.js",[],"D:\\MYCART\\client\\src\\components\\order\\Invoice.js",["415"],"import React from 'react'\r\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer'\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  DataTableCell,\r\n} from '@david.kucsai/react-pdf-table'\r\n\r\nconst Invoice = ({ order }) => (\r\n  <Document>\r\n    <Page size='A4' style={styles.body}>\r\n      <Text style={styles.header} fixed>\r\n        ~{new Date().toLocaleString()}~\r\n      </Text>\r\n      <Text style={styles.title}>Order Invoice</Text>\r\n      <Text style={styles.author}>My Cart</Text>\r\n\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '3',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        Order Id : OD{order._id}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '3',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        Order Date : {order.createdAt}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '3',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.paymentMethod === 'card'\r\n          ? `GST Number : ${'27AABCU' + order.paymentIntent.created}`\r\n          : 'GST Number : Unavailabe'}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '10',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.paymentMethod === 'card'\r\n          ? `Transaction Id: ${order.paymentIntent.id}`\r\n          : 'payment method : cash on delivery'}\r\n      </Text>\r\n\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '13',\r\n          marginBottom: '2',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        Billing Address\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '1',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.shippingAddress.firstName + ' ' + order.shippingAddress.lastName}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '1',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.shippingAddress.address}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '1',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.shippingAddress.zip}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '1',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.shippingAddress.state}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '1',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.shippingAddress.city}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          margin: '1',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.shippingAddress.phone}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          fontSize: '10',\r\n          marginBottom: '1',\r\n          marginLeft: '6',\r\n        }}\r\n      >\r\n        {order.shippingAddress.email}\r\n      </Text>\r\n\r\n      <Text\r\n        style={{\r\n          fontSize: '18',\r\n          marginTop: '12',\r\n          marginLeft: '6',\r\n          marginBottom: '12',\r\n        }}\r\n      >\r\n        Order Summary\r\n      </Text>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableCell>Title</TableCell>\r\n          <TableCell>Price</TableCell>\r\n          <TableCell>Quantity</TableCell>\r\n          <TableCell>Brand</TableCell>\r\n          <TableCell>Color</TableCell>\r\n        </TableHeader>\r\n      </Table>\r\n      <Table data={order.products}>\r\n        <TableBody>\r\n          <DataTableCell getContent={(x) => x.product.title} />\r\n\r\n          <DataTableCell\r\n            getContent={(x) => `$${x.product.price} x (${x.count})`}\r\n          />\r\n          <DataTableCell getContent={(x) => x.count} />\r\n          <DataTableCell getContent={(x) => x.product.brand} />\r\n          <DataTableCell getContent={(x) => x.product.color} />\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          marginTop: '10',\r\n          marginBottom: '2',\r\n          marginLeft: '8',\r\n          fontSize: '12',\r\n        }}\r\n      >\r\n        Order Status : {order.orderStatus}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          marginBottom: '2',\r\n          marginLeft: '8',\r\n          fontSize: '12',\r\n        }}\r\n      >\r\n        {order.paymentMethod === 'card'\r\n          ? `Total Paid : $${order.totalPrice}`\r\n          : `Total to be paid: $${order.totalPrice}`}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'left',\r\n          marginBottom: '2',\r\n          marginLeft: '8',\r\n          fontSize: '12',\r\n        }}\r\n      >\r\n        {order.paymentMethod === 'card'\r\n          ? `Payment status : ${order.paymentIntent.status}`\r\n          : 'Payment status: on Delivery'}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'right',\r\n          marginTop: '14',\r\n          marginBottom: '4',\r\n          marginLeft: '8',\r\n          fontSize: '12',\r\n        }}\r\n      >\r\n        Need Help?\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'right',\r\n          marginBottom: '2',\r\n          marginLeft: '8',\r\n          fontSize: '12',\r\n        }}\r\n      >\r\n        Contact us toll free : 1800 3424 43234\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          textAlign: 'right',\r\n          marginBottom: '2',\r\n          marginLeft: '8',\r\n          fontSize: '12',\r\n        }}\r\n      >\r\n        email us : mycartquery@gmail.com\r\n      </Text>\r\n      <Text style={styles.footer}>~Thankyou for shopping with us~</Text>\r\n    </Page>\r\n  </Document>\r\n)\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: 'center',\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: 'justify',\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  footer: {\r\n    padding: '100px',\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n})\r\n\r\nexport default Invoice\r\n","D:\\MYCART\\client\\src\\components\\order\\Tracking.js",["416","417","418","419"],"D:\\MYCART\\client\\src\\functions\\admin.js",[],"D:\\MYCART\\client\\src\\components\\order\\OrderStatusUpdate.js",["420","421"],"import React, { useState } from 'react'\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons'\r\nimport DatePicker from 'react-datepicker'\r\n\r\nconst OrderStatusUpdate = ({ orders, handleStatusUpdate }) => {\r\n  const [deliveryDate, setDeliveryDate] = useState(null)\r\n  const [deliveryStatus, setDeliveryStatus] = useState('Not Processed')\r\n  const [shippingBy, setShippingBy] = useState('Yet to assign')\r\n  const [trackingId, setTrackingId] = useState('yet to be assigned')\r\n  return (\r\n    <>\r\n      {orders.map((order) => (\r\n        <div key={order._id} className='row pb-5 card mr-4 mb-5'>\r\n          <p>\r\n            <span className='h6'>Order Id :{order._id}</span>\r\n            {order.paymentMethod === 'card' ? (\r\n              <span className='ml-5 h6 '>\r\n                Transaction Id : {order.paymentIntent.id}\r\n              </span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <span className='ml-5 h6'>Amount : ${order.totalPrice}</span>\r\n\r\n            <span className='ml-5 h6'>Method:{order.paymentMethod}</span>\r\n            {order.paymentMethod === 'card' ? (\r\n              <span className='ml-5 h6 '>\r\n                Payment : {order.paymentIntent.status}\r\n              </span>\r\n            ) : (\r\n              <span className='ml-5 h6 '>Payment : 'cod'</span>\r\n            )}\r\n            <span className='ml-5 h6 '>Ordered on : {order.createdAt}</span>\r\n            <span className='ml-5 h6 text-info'>\r\n              Shipped by : {order.shippingBy}\r\n            </span>\r\n            <span className='ml-5 h6 text-danger'>\r\n              Tracking Id : {order.trackingId}\r\n            </span>\r\n            <span className='ml-5 h6 alert-success'>\r\n              status : {order.orderStatus}\r\n            </span>\r\n          </p>\r\n\r\n          <table className='table table-striped ml-1 mr-4'>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Price</th>\r\n                <th>Quantity</th>\r\n                <th>status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {order.products.map((product, i) => (\r\n                <tr key={i}>\r\n                  <td>{product.product.title}</td>\r\n                  <td>${product.product.price}</td>\r\n                  <td>{product.count}</td>\r\n                  <td>{order.orderStatus}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className='row ml-2'>\r\n            <div className='col-md-4 h5'>Delivery Status</div>\r\n            <div className='col-md-8'>\r\n              <select\r\n                onChange={(e) => {\r\n                  setDeliveryStatus(e.target.value)\r\n                }}\r\n                value={deliveryStatus}\r\n              >\r\n                <option value='Not Processed'>Not Processed</option>\r\n                <option value='Processing'>Processing</option>\r\n                <option value='Dispatched'>Dispatched</option>\r\n                <option value='Cancelled'>Cancelled</option>\r\n                <option calue='Completed'>Completed</option>\r\n              </select>\r\n            </div>\r\n            <br />\r\n            <div className='col-md-4 h5'>Shipping By</div>\r\n            <div className='col-md-8'>\r\n              <select\r\n                onChange={(e) => {\r\n                  setShippingBy(e.target.value)\r\n                }}\r\n                value={shippingBy}\r\n              >\r\n                <option value='Yet to assign'>Yet to assign</option>\r\n                <option value='BLUEDART'>BLUEDART</option>\r\n                <option value='DHL'>DHL</option>\r\n                <option value='FEDEX'>FEDEX</option>\r\n                <option calue='WHL'>WHL</option>\r\n              </select>\r\n            </div>\r\n            <div className='col-md-4 h5'>Shipping By</div>\r\n            <div className='col-md-8'>\r\n              <input\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setTrackingId(e.target.value)\r\n                }}\r\n                value={trackingId}\r\n              ></input>\r\n            </div>\r\n            <div className='col-md-4 h5'>Delivered date</div>\r\n            <div className='col-md-8'>\r\n              <DatePicker\r\n                className='form-control '\r\n                selected={deliveryDate}\r\n                required\r\n                onChange={(date) => setDeliveryDate(date)}\r\n              />\r\n            </div>\r\n            <br />\r\n            <button\r\n              type='button'\r\n              className='btn btn-raised text-center mt-3 btn-danger'\r\n              onClick={(e) => {\r\n                handleStatusUpdate(\r\n                  order._id,\r\n                  deliveryStatus,\r\n                  shippingBy,\r\n                  trackingId,\r\n                  deliveryDate\r\n                )\r\n                setDeliveryStatus('Not Processed')\r\n                setShippingBy('Yet to assign')\r\n                setTrackingId('yet to be assigned')\r\n              }}\r\n            >\r\n              Update Order Details\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderStatusUpdate\r\n",{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","severity":1,"message":"427","line":11,"column":3,"nodeType":"428","messageId":"429","endLine":11,"endColumn":19},{"ruleId":"430","severity":1,"message":"431","line":22,"column":6,"nodeType":"432","endLine":22,"endColumn":8,"suggestions":"433"},{"ruleId":"434","severity":1,"message":"435","line":98,"column":54,"nodeType":"436","messageId":"437","endLine":98,"endColumn":56},{"ruleId":"434","severity":1,"message":"435","line":113,"column":43,"nodeType":"436","messageId":"437","endLine":113,"endColumn":45},{"ruleId":"430","severity":1,"message":"431","line":25,"column":6,"nodeType":"432","endLine":25,"endColumn":8,"suggestions":"438"},{"ruleId":"439","severity":1,"message":"440","line":98,"column":29,"nodeType":"441","endLine":98,"endColumn":80},{"ruleId":"426","severity":1,"message":"442","line":4,"column":23,"nodeType":"428","messageId":"429","endLine":4,"endColumn":34},{"ruleId":"426","severity":1,"message":"443","line":5,"column":10,"nodeType":"428","messageId":"429","endLine":5,"endColumn":15},{"ruleId":"430","severity":1,"message":"431","line":17,"column":6,"nodeType":"432","endLine":17,"endColumn":8,"suggestions":"444"},{"ruleId":"430","severity":1,"message":"445","line":18,"column":6,"nodeType":"432","endLine":18,"endColumn":8,"suggestions":"446"},{"ruleId":"434","severity":1,"message":"435","line":59,"column":68,"nodeType":"436","messageId":"437","endLine":59,"endColumn":70},{"ruleId":"430","severity":1,"message":"447","line":21,"column":6,"nodeType":"432","endLine":21,"endColumn":8,"suggestions":"448"},{"ruleId":"434","severity":1,"message":"435","line":70,"column":68,"nodeType":"436","messageId":"437","endLine":70,"endColumn":70},{"ruleId":"430","severity":1,"message":"449","line":48,"column":6,"nodeType":"432","endLine":48,"endColumn":8,"suggestions":"450"},{"ruleId":"426","severity":1,"message":"451","line":63,"column":5,"nodeType":"428","messageId":"429","endLine":63,"endColumn":13},{"ruleId":"426","severity":1,"message":"452","line":65,"column":5,"nodeType":"428","messageId":"429","endLine":65,"endColumn":13},{"ruleId":"426","severity":1,"message":"453","line":67,"column":5,"nodeType":"428","messageId":"429","endLine":67,"endColumn":11},{"ruleId":"426","severity":1,"message":"454","line":70,"column":5,"nodeType":"428","messageId":"429","endLine":70,"endColumn":10},{"ruleId":"426","severity":1,"message":"455","line":71,"column":5,"nodeType":"428","messageId":"429","endLine":71,"endColumn":10},{"ruleId":"456","severity":1,"message":"457","line":14,"column":9,"nodeType":"441","endLine":18,"endColumn":11},{"ruleId":"426","severity":1,"message":"458","line":44,"column":5,"nodeType":"428","messageId":"429","endLine":44,"endColumn":9},{"ruleId":"426","severity":1,"message":"453","line":47,"column":5,"nodeType":"428","messageId":"429","endLine":47,"endColumn":11},{"ruleId":"430","severity":1,"message":"459","line":57,"column":6,"nodeType":"432","endLine":57,"endColumn":8,"suggestions":"460"},{"ruleId":"461","severity":1,"message":"462","line":81,"column":31,"nodeType":"463","messageId":"464","endLine":81,"endColumn":33},{"ruleId":"426","severity":1,"message":"465","line":13,"column":10,"nodeType":"428","messageId":"429","endLine":13,"endColumn":21},{"ruleId":"426","severity":1,"message":"466","line":21,"column":11,"nodeType":"428","messageId":"429","endLine":21,"endColumn":15},{"ruleId":"426","severity":1,"message":"467","line":21,"column":17,"nodeType":"428","messageId":"429","endLine":21,"endColumn":21},{"ruleId":"456","severity":1,"message":"457","line":50,"column":11,"nodeType":"441","endLine":54,"endColumn":13},{"ruleId":"439","severity":1,"message":"468","line":65,"column":15,"nodeType":"441","endLine":69,"endColumn":16},{"ruleId":"439","severity":1,"message":"468","line":75,"column":15,"nodeType":"441","endLine":75,"endColumn":18},{"ruleId":"430","severity":1,"message":"469","line":15,"column":6,"nodeType":"432","endLine":15,"endColumn":12,"suggestions":"470"},{"ruleId":"430","severity":1,"message":"469","line":15,"column":6,"nodeType":"432","endLine":15,"endColumn":12,"suggestions":"471"},{"ruleId":"430","severity":1,"message":"472","line":22,"column":6,"nodeType":"432","endLine":22,"endColumn":12,"suggestions":"473"},{"ruleId":"426","severity":1,"message":"474","line":3,"column":10,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},{"ruleId":"426","severity":1,"message":"475","line":3,"column":16,"nodeType":"428","messageId":"429","endLine":3,"endColumn":25},{"ruleId":"426","severity":1,"message":"467","line":44,"column":17,"nodeType":"428","messageId":"429","endLine":44,"endColumn":21},{"ruleId":"430","severity":1,"message":"476","line":60,"column":6,"nodeType":"432","endLine":60,"endColumn":8,"suggestions":"477"},{"ruleId":"456","severity":1,"message":"457","line":131,"column":36,"nodeType":"441","endLine":131,"endColumn":79},{"ruleId":"439","severity":1,"message":"468","line":165,"column":17,"nodeType":"441","endLine":169,"endColumn":18},{"ruleId":"439","severity":1,"message":"468","line":174,"column":17,"nodeType":"441","endLine":174,"endColumn":20},{"ruleId":"439","severity":1,"message":"468","line":184,"column":17,"nodeType":"441","endLine":184,"endColumn":49},{"ruleId":"439","severity":1,"message":"468","line":195,"column":17,"nodeType":"441","endLine":195,"endColumn":74},{"ruleId":"426","severity":1,"message":"478","line":11,"column":5,"nodeType":"428","messageId":"429","endLine":11,"endColumn":13},{"ruleId":"426","severity":1,"message":"479","line":12,"column":5,"nodeType":"428","messageId":"429","endLine":12,"endColumn":9},{"ruleId":"426","severity":1,"message":"480","line":3,"column":10,"nodeType":"428","messageId":"429","endLine":3,"endColumn":14},{"ruleId":"426","severity":1,"message":"481","line":2,"column":17,"nodeType":"428","messageId":"429","endLine":2,"endColumn":23},{"ruleId":"426","severity":1,"message":"443","line":3,"column":10,"nodeType":"428","messageId":"429","endLine":3,"endColumn":15},{"ruleId":"461","severity":1,"message":"462","line":10,"column":31,"nodeType":"463","messageId":"464","endLine":10,"endColumn":33},{"ruleId":"430","severity":1,"message":"482","line":22,"column":6,"nodeType":"432","endLine":22,"endColumn":8,"suggestions":"483"},{"ruleId":"426","severity":1,"message":"480","line":6,"column":10,"nodeType":"428","messageId":"429","endLine":6,"endColumn":14},{"ruleId":"430","severity":1,"message":"482","line":23,"column":6,"nodeType":"432","endLine":23,"endColumn":8,"suggestions":"484"},{"ruleId":"426","severity":1,"message":"485","line":16,"column":18,"nodeType":"428","messageId":"429","endLine":16,"endColumn":27},{"ruleId":"426","severity":1,"message":"486","line":27,"column":18,"nodeType":"428","messageId":"429","endLine":27,"endColumn":27},{"ruleId":"426","severity":1,"message":"487","line":40,"column":9,"nodeType":"428","messageId":"429","endLine":40,"endColumn":17},{"ruleId":"434","severity":1,"message":"435","line":85,"column":17,"nodeType":"436","messageId":"437","endLine":85,"endColumn":19},{"ruleId":"434","severity":1,"message":"435","line":90,"column":31,"nodeType":"436","messageId":"437","endLine":90,"endColumn":33},{"ruleId":"434","severity":1,"message":"435","line":98,"column":31,"nodeType":"436","messageId":"437","endLine":98,"endColumn":33},{"ruleId":"434","severity":1,"message":"435","line":99,"column":24,"nodeType":"436","messageId":"437","endLine":99,"endColumn":26},{"ruleId":"434","severity":1,"message":"435","line":103,"column":21,"nodeType":"436","messageId":"437","endLine":103,"endColumn":23},{"ruleId":"430","severity":1,"message":"488","line":106,"column":6,"nodeType":"432","endLine":106,"endColumn":10,"suggestions":"489"},{"ruleId":"434","severity":1,"message":"435","line":146,"column":29,"nodeType":"436","messageId":"437","endLine":146,"endColumn":31},{"ruleId":"434","severity":1,"message":"435","line":149,"column":17,"nodeType":"436","messageId":"437","endLine":149,"endColumn":19},{"ruleId":"434","severity":1,"message":"435","line":152,"column":31,"nodeType":"436","messageId":"437","endLine":152,"endColumn":33},{"ruleId":"434","severity":1,"message":"435","line":161,"column":31,"nodeType":"436","messageId":"437","endLine":161,"endColumn":33},{"ruleId":"434","severity":1,"message":"435","line":164,"column":24,"nodeType":"436","messageId":"437","endLine":164,"endColumn":26},{"ruleId":"434","severity":1,"message":"490","line":219,"column":14,"nodeType":"436","messageId":"437","endLine":219,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":224,"column":29,"nodeType":"436","messageId":"437","endLine":224,"endColumn":31},{"ruleId":"434","severity":1,"message":"435","line":227,"column":22,"nodeType":"436","messageId":"437","endLine":227,"endColumn":24},{"ruleId":"461","severity":1,"message":"462","line":43,"column":29,"nodeType":"463","messageId":"464","endLine":43,"endColumn":31},{"ruleId":"461","severity":1,"message":"462","line":75,"column":29,"nodeType":"463","messageId":"464","endLine":75,"endColumn":31},{"ruleId":"461","severity":1,"message":"462","line":97,"column":29,"nodeType":"463","messageId":"464","endLine":97,"endColumn":31},{"ruleId":"439","severity":1,"message":"468","line":213,"column":29,"nodeType":"441","endLine":217,"endColumn":30},{"ruleId":"426","severity":1,"message":"481","line":2,"column":18,"nodeType":"428","messageId":"429","endLine":2,"endColumn":24},{"ruleId":"456","severity":1,"message":"457","line":32,"column":17,"nodeType":"441","endLine":32,"endColumn":63},{"ruleId":"456","severity":1,"message":"457","line":39,"column":17,"nodeType":"441","endLine":39,"endColumn":54},{"ruleId":"434","severity":1,"message":"435","line":49,"column":21,"nodeType":"436","messageId":"437","endLine":49,"endColumn":23},{"ruleId":"430","severity":1,"message":"491","line":67,"column":6,"nodeType":"432","endLine":67,"endColumn":20,"suggestions":"492"},{"ruleId":"434","severity":1,"message":"435","line":81,"column":28,"nodeType":"436","messageId":"437","endLine":81,"endColumn":30},{"ruleId":"434","severity":1,"message":"435","line":105,"column":35,"nodeType":"436","messageId":"437","endLine":105,"endColumn":37},{"ruleId":"434","severity":1,"message":"435","line":419,"column":47,"nodeType":"436","messageId":"437","endLine":419,"endColumn":49},{"ruleId":"426","severity":1,"message":"493","line":7,"column":11,"nodeType":"428","messageId":"429","endLine":7,"endColumn":22},{"ruleId":"426","severity":1,"message":"442","line":2,"column":23,"nodeType":"428","messageId":"429","endLine":2,"endColumn":34},{"ruleId":"434","severity":1,"message":"435","line":13,"column":37,"nodeType":"436","messageId":"437","endLine":13,"endColumn":39},{"ruleId":"430","severity":1,"message":"494","line":16,"column":6,"nodeType":"432","endLine":16,"endColumn":8,"suggestions":"495"},{"ruleId":"426","severity":1,"message":"496","line":21,"column":10,"nodeType":"428","messageId":"429","endLine":21,"endColumn":17},{"ruleId":"430","severity":1,"message":"497","line":36,"column":6,"nodeType":"432","endLine":36,"endColumn":8,"suggestions":"498"},{"ruleId":"426","severity":1,"message":"499","line":2,"column":32,"nodeType":"428","messageId":"429","endLine":2,"endColumn":36},{"ruleId":"430","severity":1,"message":"500","line":30,"column":6,"nodeType":"432","endLine":30,"endColumn":8,"suggestions":"501"},{"ruleId":"456","severity":1,"message":"457","line":39,"column":13,"nodeType":"441","endLine":42,"endColumn":15},{"ruleId":"502","severity":1,"message":"503","line":59,"column":34,"nodeType":"504","endLine":59,"endColumn":50},{"ruleId":"439","severity":1,"message":"440","line":178,"column":17,"nodeType":"441","endLine":178,"endColumn":73},{"ruleId":"426","severity":1,"message":"505","line":2,"column":10,"nodeType":"428","messageId":"429","endLine":2,"endColumn":29},{"ruleId":"426","severity":1,"message":"506","line":2,"column":31,"nodeType":"428","messageId":"429","endLine":2,"endColumn":50},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],"no-unused-vars","'ShoppingOutlined' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.","ArrayExpression",["509"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["510"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useDispatch' is defined but never used.","'toast' is defined but never used.",["511"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["512"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["513"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["514"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'subs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["515"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'userReducer' is defined but never used.","'user' is assigned a value but never used.","'cart' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["516"],["517"],"React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["518"],"'Link' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["519"],"'quantity' is assigned a value but never used.","'sold' is assigned a value but never used.","'Card' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["520"],["521"],"'ItemGroup' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'brand', 'categoryId', 'price', 'star', 'tempProducts', and 'text'. Either include them or remove the dependency array.",["522"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'cart.length', 'history', and 'user.token'. Either include them or remove the dependency array.",["523"],"'userAddress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["524"],"'payable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["525"],"'View' is defined but never used.","React Hook useEffect has missing dependencies: 'orderId' and 'user.token'. Either include them or remove the dependency array.",["526"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CheckCircleOutlined' is defined but never used.","'CloseCircleOutlined' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"527","fix":"528"},{"desc":"527","fix":"529"},{"desc":"527","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"539","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"546","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},"Update the dependencies array to be: [user.token]",{"range":"559","text":"560"},{"range":"561","text":"560"},{"range":"562","text":"560"},"Update the dependencies array to be: [loadCategory]",{"range":"563","text":"564"},"Update the dependencies array to be: [loadSub]",{"range":"565","text":"566"},"Update the dependencies array to be: [loadCategories]",{"range":"567","text":"568"},"Update the dependencies array to be: [loadProduct]",{"range":"569","text":"570"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"571","text":"572"},{"range":"573","text":"572"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"574","text":"575"},"Update the dependencies array to be: [user]",{"range":"576","text":"577"},"Update the dependencies array to be: [slug]",{"range":"578","text":"579"},{"range":"580","text":"579"},"Update the dependencies array to be: [brand, categoryId, ok, price, star, tempProducts, text]",{"range":"581","text":"582"},"Update the dependencies array to be: [addressSaved, cart.length, history, user.token]",{"range":"583","text":"584"},"Update the dependencies array to be: [history]",{"range":"585","text":"586"},"Update the dependencies array to be: [coupon, user.token]",{"range":"587","text":"588"},"Update the dependencies array to be: [orderId, user.token]",{"range":"589","text":"590"},[752,754],"[user.token]",[835,837],[623,625],[547,549],"[loadCategory]",[782,784],"[loadSub]",[1292,1294],"[loadCategories]",[1675,1677],"[loadProduct]",[569,575],"[loadAllProducts, page]",[569,575],[753,759],"[loadSingleProduct, slug]",[1791,1793],"[user]",[694,696],"[slug]",[683,685],[3147,3151],"[brand, categoryId, ok, price, star, tempProducts, text]",[2172,2186],"[addressSaved, cart.length, history, user.token]",[497,499],"[history]",[1363,1365],"[coupon, user.token]",[946,948],"[orderId, user.token]"]