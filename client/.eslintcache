[{"D:\\MYCART\\client\\src\\index.js":"1","D:\\MYCART\\client\\src\\App.js":"2","D:\\MYCART\\client\\src\\reportWebVitals.js":"3","D:\\MYCART\\client\\src\\pages\\auth\\Register.js":"4","D:\\MYCART\\client\\src\\pages\\auth\\Login.js":"5","D:\\MYCART\\client\\src\\pages\\Home.js":"6","D:\\MYCART\\client\\src\\components\\nav\\Header.js":"7","D:\\MYCART\\client\\src\\firebase.js":"8","D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js":"9","D:\\MYCART\\client\\src\\reducers\\index.js":"10","D:\\MYCART\\client\\src\\reducers\\userReducer.js":"11","D:\\MYCART\\client\\src\\components\\Loader.js":"12","D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js":"13","D:\\MYCART\\client\\src\\functions\\auth.js":"14","D:\\MYCART\\client\\src\\pages\\user\\History.js":"15","D:\\MYCART\\client\\src\\components\\routes\\UserRoute.js":"16","D:\\MYCART\\client\\src\\components\\routes\\LoadingToRedirect.js":"17","D:\\MYCART\\client\\src\\components\\nav\\UserNav.js":"18"},{"size":867,"mtime":1610972203848,"results":"19","hashOfConfig":"20"},{"size":2075,"mtime":1611255527216,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":1605,"mtime":1610998686090,"results":"23","hashOfConfig":"20"},{"size":4665,"mtime":1611242031707,"results":"24","hashOfConfig":"20"},{"size":154,"mtime":1610737789154,"results":"25","hashOfConfig":"20"},{"size":2031,"mtime":1610989361466,"results":"26","hashOfConfig":"20"},{"size":657,"mtime":1610870674636,"results":"27","hashOfConfig":"20"},{"size":2954,"mtime":1611213622640,"results":"28","hashOfConfig":"20"},{"size":183,"mtime":1610878874297,"results":"29","hashOfConfig":"20"},{"size":259,"mtime":1610878848121,"results":"30","hashOfConfig":"20"},{"size":405,"mtime":1610971831271,"results":"31","hashOfConfig":"20"},{"size":1891,"mtime":1610998375406,"results":"32","hashOfConfig":"20"},{"size":508,"mtime":1611220677148,"results":"33","hashOfConfig":"20"},{"size":375,"mtime":1611308268524,"results":"34","hashOfConfig":"20"},{"size":1348,"mtime":1611258017810,"results":"35","hashOfConfig":"20"},{"size":641,"mtime":1611258532297,"results":"36","hashOfConfig":"20"},{"size":665,"mtime":1611308448462,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zylff0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MYCART\\client\\src\\index.js",[],["83","84"],"D:\\MYCART\\client\\src\\App.js",["85"],"import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { toast, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css' //css for toastify pop ups\n\nimport Home from './pages/Home'\nimport Login from './pages/auth/Login'\nimport Register from './pages/auth/Register'\nimport Header from './components/nav/Header'\nimport RegisterComplete from './pages/auth/RegisterComplete'\nimport ForgotPassword from './pages/auth/ForgotPassword'\nimport History from './pages/user/History'\nimport UserRoute from './components/routes/UserRoute'\n\nimport { auth } from './firebase'\nimport { useDispatch } from 'react-redux'\nimport { currentUser } from './functions/auth'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult()\n        // console.log('user ', user)\n        currentUser(idTokenResult.token)\n          .then((res) => {\n            dispatch({\n              type: 'LOGGED_IN_USER',\n              payload: {\n                name: res.data.name,\n                email: user.email,\n                token: idTokenResult.token,\n                role: res.data.role,\n                _id: res.data._id,\n              },\n            })\n          })\n          .catch((error) => {\n            toast.error(error.message)\n          })\n      }\n    })\n\n    //unsubscribe\n\n    return () => unsubscribe()\n  }, [])\n\n  return (\n    <Router>\n      <Header />\n      <ToastContainer />\n      <Switch>\n        <Route path='/' component={Home} exact />\n        <Route path='/login' component={Login} exact />\n        <Route path='/register' component={Register} exact />\n        <Route path='/register/complete' component={RegisterComplete} exact />\n        <Route path='/forgot/password' component={ForgotPassword} exact />\n        <UserRoute path='/user/history' component={History} exact />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","D:\\MYCART\\client\\src\\reportWebVitals.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\Register.js",["86"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Register = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/')\r\n    }\r\n  }, [user])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const config = {\r\n      url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n      handleCodeInApp: true,\r\n    }\r\n\r\n    await auth.sendSignInLinkToEmail(email, config)\r\n    toast.success(\r\n      `Email is sent to ${email} click the link to complete your registration`\r\n    )\r\n\r\n    //save user emial to local storage\r\n    window.localStorage.setItem('emailForRegistration', email)\r\n\r\n    //Reset state\r\n    setEmail('')\r\n  }\r\n\r\n  const registerForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='email'\r\n        className='form-control'\r\n        value={email}\r\n        placeholder='Enter your email'\r\n        onChange={(e) => {\r\n          setEmail(e.target.value)\r\n        }}\r\n        autoFocus\r\n      />\r\n      <br />\r\n      <button type='submit' className='btn btn-raised'>\r\n        Register\r\n      </button>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          <h4>Register</h4>\r\n\r\n          {registerForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","D:\\MYCART\\client\\src\\pages\\auth\\Login.js",["87","88","89"],"import React, { useState, useEffect } from 'react'\r\nimport { auth, googleAuthProvider } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { Button } from 'antd'\r\nimport axios from 'axios'\r\nimport { GoogleOutlined, MailOutlined } from '@ant-design/icons'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../../components/Loader'\r\nimport { createOrUpdateUser } from '../../functions/auth'\r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/')\r\n    }\r\n  }, [user])\r\n\r\n  //role based redirect\r\n  const roleBasedRedirect = (res) => {\r\n    if (res.data.role === 'admin') {\r\n      history.push('/admin/dashboard')\r\n    } else {\r\n      history.push('/user/history')\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    try {\r\n      const result = await auth.signInWithEmailAndPassword(email, password)\r\n      // console.log(result)\r\n      const { user } = result\r\n      const idTokenResult = await user.getIdTokenResult()\r\n\r\n      //calling the function to send token to backend\r\n      createOrUpdateUser(idTokenResult.token)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: 'LOGGED_IN_USER',\r\n            payload: {\r\n              name: res.data.name,\r\n              email: user.email,\r\n              token: idTokenResult.token,\r\n              role: res.data.role,\r\n              _id: res.data._id,\r\n            },\r\n          })\r\n          roleBasedRedirect(res)\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.message)\r\n        })\r\n    } catch (error) {\r\n      toast.error(error.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const googleLogin = async () => {\r\n    auth\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(async (result) => {\r\n        const { user } = result\r\n        const idTokenResult = await user.getIdTokenResult()\r\n\r\n        //calling the function to send token to backend\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: 'LOGGED_IN_USER',\r\n              payload: {\r\n                name: res.data.name,\r\n                email: user.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            })\r\n            roleBasedRedirect(res)\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.message)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message)\r\n      })\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <input\r\n          type='email'\r\n          className='form-control'\r\n          value={email}\r\n          placeholder='Enter your email'\r\n          onChange={(e) => {\r\n            setEmail(e.target.value)\r\n          }}\r\n          autoFocus\r\n        />\r\n      </div>\r\n      <br />\r\n      <div className='form-group'>\r\n        <input\r\n          type='password'\r\n          className='form-control'\r\n          value={password}\r\n          placeholder='Enter your password'\r\n          onChange={(e) => {\r\n            setPassword(e.target.value)\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <Button\r\n        type='primary'\r\n        onClick={handleSubmit}\r\n        className='mb-2'\r\n        block\r\n        shape='round'\r\n        icon={<MailOutlined />}\r\n        size='large'\r\n        disabled={!email || password.length < 6}\r\n      >\r\n        Login with email/password\r\n      </Button>\r\n      <Link to='/forgot/password' className='float-right mb-3'>\r\n        Forget Password ?\r\n      </Link>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          {loading ? (\r\n            <h4 className='text-primary'>Loading...</h4>\r\n          ) : (\r\n            <h4>Login</h4>\r\n          )}\r\n\r\n          {loginForm()}\r\n\r\n          <Button\r\n            type='danger'\r\n            onClick={googleLogin}\r\n            className='mb-3'\r\n            block\r\n            shape='round'\r\n            icon={<GoogleOutlined />}\r\n            size='large'\r\n          >\r\n            Login with google\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","D:\\MYCART\\client\\src\\pages\\Home.js",[],"D:\\MYCART\\client\\src\\components\\nav\\Header.js",[],"D:\\MYCART\\client\\src\\firebase.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\RegisterComplete.js",["90"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createOrUpdateUser } from '../../functions/auth'\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem('emailForRegistration'))\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    //Manul validation\r\n    if (!email || !password) {\r\n      toast.error('Email and password is required')\r\n      return\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      toast.error('Password must be atleast 6 characters long')\r\n      return\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(email, window.location.href)\r\n      console.log('RESULT', result)\r\n\r\n      if (result.user.emailVerified) {\r\n        //remove user email from local storage\r\n        window.localStorage.removeItem('emailForRegistration')\r\n\r\n        //get user id token\r\n        let user = auth.currentUser\r\n        await user.updatePassword(password)\r\n        const idTokenResult = await user.getIdTokenResult()\r\n\r\n        // console.log('user', user, 'idtoke ', idTokenResult)\r\n\r\n        //calling the function to send token to backend and setting data in redux store\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: 'LOGGED_IN_USER',\r\n              payload: {\r\n                name: res.data.name,\r\n                email: user.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            })\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.message)\r\n          })\r\n\r\n        //Redirect\r\n        history.push('/')\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message)\r\n    }\r\n  }\r\n\r\n  const completeRegistrationForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='email' className='form-control' value={email} disabled />\r\n      <br />\r\n      <input\r\n        type='password'\r\n        className='form-control'\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        autoFocus\r\n        placeholder='Set Password'\r\n      />\r\n      <br />\r\n      <button type='submit' className='btn btn-raised'>\r\n        Complete registration\r\n      </button>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          <h4>Register Complete</h4>\r\n\r\n          {completeRegistrationForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterComplete\r\n","D:\\MYCART\\client\\src\\reducers\\index.js",[],"D:\\MYCART\\client\\src\\reducers\\userReducer.js",["91"],"import React from 'react'\r\n\r\nexport const userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'LOGGED_IN_USER':\r\n      return action.payload\r\n    case 'LOGOUT':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\MYCART\\client\\src\\components\\Loader.js",[],"D:\\MYCART\\client\\src\\pages\\auth\\ForgotPassword.js",["92"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/')\r\n    }\r\n  }, [user])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const config = {\r\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n      handleCodeInApp: true,\r\n    }\r\n    await auth\r\n      .sendPasswordResetEmail(email, config)\r\n      .then(() => {\r\n        setEmail('')\r\n        setLoading(false)\r\n        toast.success('Check your email for password reset instructions')\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message)\r\n        setLoading(false)\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-3 p-5'>\r\n          {loading ? (\r\n            <h4 className='text-primary'>Loading....</h4>\r\n          ) : (\r\n            <h4>Forgot Password</h4>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type='email'\r\n              className='form-control'\r\n              value={email}\r\n              placeholder='Type your email'\r\n              onChange={(e) => {\r\n                setEmail(e.target.value)\r\n              }}\r\n              autoFocus\r\n            />\r\n            <br />\r\n            <button type='submit' className='btn btn-raised' disabled={!email}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","D:\\MYCART\\client\\src\\functions\\auth.js",[],"D:\\MYCART\\client\\src\\pages\\user\\History.js",[],"D:\\MYCART\\client\\src\\components\\routes\\UserRoute.js",["93"],"import React from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport LoadingToRedirect from './LoadingToRedirect'\r\n\r\n/*this component is used to access the private routes and we will pass the routes that we want to make private\r\ni.e people cant access it without logging in(when they login their token gets saved in user state)\r\neg in app.js if we have a route /user/history and we want only the logged in person to access it then we cann\r\nmake it private by replacing <Route to = /user/history component = {}.../> by <userRoute to = ......./>.\r\nthats it it becomes private \r\n\r\nactually this same thing can be done by just checking in useEffect if the person is logged in or not and if not then\r\nreidirect him to login page. But this one makes it easier and is reusable so we dont need to write the same code in\r\nuseEffect of each component\r\n\r\ntip: just copy paste it in ur projects if u want this kind of functionality, dont waste time understanding it \r\n\r\nmore info : https://reactrouter.com/web/example/auth-workflow\r\n\r\n*/\r\n\r\nconst UserRoute = ({ children, ...rest }) => {\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  return user && user.token ? (\r\n    <Route {...rest} render={() => children} />\r\n  ) : (\r\n    <LoadingToRedirect />\r\n  )\r\n}\r\n\r\nexport default UserRoute\r\n","D:\\MYCART\\client\\src\\components\\routes\\LoadingToRedirect.js",["94"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LoadingToRedirect = () => {\r\n  const [count, setCount] = useState(5)\r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((currentCount) => --currentCount)\r\n    }, 1000)\r\n    //redirect once count is == 0\r\n\r\n    count === 0 && history.push('/login')\r\n    return () => clearInterval(interval)\r\n  }, [count])\r\n\r\n  return (\r\n    <div className='container p-5 text-center'>\r\n      <p>Redirecting you in {count} seconds</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingToRedirect\r\n","D:\\MYCART\\client\\src\\components\\nav\\UserNav.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":49,"column":6,"nodeType":"101","endLine":49,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":15,"column":6,"nodeType":"101","endLine":15,"endColumn":12,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"105","severity":1,"message":"109","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":24,"column":6,"nodeType":"101","endLine":24,"endColumn":12,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":12,"column":11,"nodeType":"107","messageId":"108","endLine":12,"endColumn":15},{"ruleId":"105","severity":1,"message":"112","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"103","line":15,"column":6,"nodeType":"101","endLine":15,"endColumn":12,"suggestions":"113"},{"ruleId":"105","severity":1,"message":"114","line":2,"column":17,"nodeType":"107","messageId":"108","endLine":2,"endColumn":21},{"ruleId":"99","severity":1,"message":"103","line":16,"column":6,"nodeType":"101","endLine":16,"endColumn":13,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["118"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["119"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Loader' is defined but never used.",["120"],"'user' is assigned a value but never used.","'React' is defined but never used.",["121"],"'Link' is defined but never used.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"125","fix":"127"},{"desc":"125","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch]",{"range":"131","text":"132"},"Update the dependencies array to be: [history, user]",{"range":"133","text":"134"},{"range":"135","text":"134"},{"range":"136","text":"134"},"Update the dependencies array to be: [count, history]",{"range":"137","text":"138"},[1542,1544],"[dispatch]",[407,413],"[history, user]",[838,844],[460,466],[463,470],"[count, history]"]